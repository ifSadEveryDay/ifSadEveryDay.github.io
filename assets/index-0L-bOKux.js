var D0=Object.defineProperty;var U0=(n,e,t)=>e in n?D0(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var rr=(n,e,t)=>(U0(n,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();function w2(n,e){const t=Object.create(null),i=n.split(",");for(let r=0;r<i.length;r++)t[i[r]]=!0;return e?r=>!!t[r.toLowerCase()]:r=>!!t[r]}const ht={},R1=[],Gn=()=>{},O0=()=>!1,N0=/^on[^a-z]/,mo=n=>N0.test(n),A2=n=>n.startsWith("onUpdate:"),Wt=Object.assign,C2=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},F0=Object.prototype.hasOwnProperty,Je=(n,e)=>F0.call(n,e),ke=Array.isArray,_r=n=>vo(n)==="[object Map]",B0=n=>vo(n)==="[object Set]",Ge=n=>typeof n=="function",Nt=n=>typeof n=="string",go=n=>typeof n=="symbol",At=n=>n!==null&&typeof n=="object",Su=n=>(At(n)||Ge(n))&&Ge(n.then)&&Ge(n.catch),z0=Object.prototype.toString,vo=n=>z0.call(n),k0=n=>vo(n).slice(8,-1),H0=n=>vo(n)==="[object Object]",R2=n=>Nt(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,Ws=w2(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),_o=n=>{const e=Object.create(null);return t=>e[t]||(e[t]=n(t))},V0=/-(\w)/g,O1=_o(n=>n.replace(V0,(e,t)=>t?t.toUpperCase():"")),G0=/\B([A-Z])/g,q1=_o(n=>n.replace(G0,"-$1").toLowerCase()),Eu=_o(n=>n.charAt(0).toUpperCase()+n.slice(1)),Bo=_o(n=>n?`on${Eu(n)}`:""),N1=(n,e)=>!Object.is(n,e),zo=(n,e)=>{for(let t=0;t<n.length;t++)n[t](e)},Zs=(n,e,t)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,value:t})},W0=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let Al;const ka=()=>Al||(Al=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function P2(n){if(ke(n)){const e={};for(let t=0;t<n.length;t++){const i=n[t],r=Nt(i)?Y0(i):P2(i);if(r)for(const s in r)e[s]=r[s]}return e}else if(Nt(n)||At(n))return n}const X0=/;(?![^(]*\))/g,j0=/:([^]+)/,q0=/\/\*[^]*?\*\//g;function Y0(n){const e={};return n.replace(q0,"").split(X0).forEach(t=>{if(t){const i=t.split(j0);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function L2(n){let e="";if(Nt(n))e=n;else if(ke(n))for(let t=0;t<n.length;t++){const i=L2(n[t]);i&&(e+=i+" ")}else if(At(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const K0="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",$0=w2(K0);function bu(n){return!!n||n===""}let Tn;class Z0{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Tn,!e&&Tn&&(this.index=(Tn.scopes||(Tn.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=Tn;try{return Tn=this,e()}finally{Tn=t}}}on(){Tn=this}off(){Tn=this.parent}stop(e){if(this._active){let t,i;for(t=0,i=this.effects.length;t<i;t++)this.effects[t].stop();for(t=0,i=this.cleanups.length;t<i;t++)this.cleanups[t]();if(this.scopes)for(t=0,i=this.scopes.length;t<i;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function J0(n,e=Tn){e&&e.active&&e.effects.push(n)}function Q0(){return Tn}const I2=n=>{const e=new Set(n);return e.w=0,e.n=0,e},Tu=n=>(n.w&Li)>0,wu=n=>(n.n&Li)>0,ef=({deps:n})=>{if(n.length)for(let e=0;e<n.length;e++)n[e].w|=Li},tf=n=>{const{deps:e}=n;if(e.length){let t=0;for(let i=0;i<e.length;i++){const r=e[i];Tu(r)&&!wu(r)?r.delete(n):e[t++]=r,r.w&=~Li,r.n&=~Li}e.length=t}},Ha=new WeakMap;let hr=0,Li=1;const Va=30;let An;const ji=Symbol(""),Ga=Symbol("");class D2{constructor(e,t=null,i){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,J0(this,i)}run(){if(!this.active)return this.fn();let e=An,t=Ai;for(;e;){if(e===this)return;e=e.parent}try{return this.parent=An,An=this,Ai=!0,Li=1<<++hr,hr<=Va?ef(this):Cl(this),this.fn()}finally{hr<=Va&&tf(this),Li=1<<--hr,An=this.parent,Ai=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){An===this?this.deferStop=!0:this.active&&(Cl(this),this.onStop&&this.onStop(),this.active=!1)}}function Cl(n){const{deps:e}=n;if(e.length){for(let t=0;t<e.length;t++)e[t].delete(n);e.length=0}}let Ai=!0;const Au=[];function Y1(){Au.push(Ai),Ai=!1}function K1(){const n=Au.pop();Ai=n===void 0?!0:n}function sn(n,e,t){if(Ai&&An){let i=Ha.get(n);i||Ha.set(n,i=new Map);let r=i.get(t);r||i.set(t,r=I2()),Cu(r)}}function Cu(n,e){let t=!1;hr<=Va?wu(n)||(n.n|=Li,t=!Tu(n)):t=!n.has(An),t&&(n.add(An),An.deps.push(n))}function ui(n,e,t,i,r,s){const o=Ha.get(n);if(!o)return;let a=[];if(e==="clear")a=[...o.values()];else if(t==="length"&&ke(n)){const l=Number(i);o.forEach((c,u)=>{(u==="length"||!go(u)&&u>=l)&&a.push(c)})}else switch(t!==void 0&&a.push(o.get(t)),e){case"add":ke(n)?R2(t)&&a.push(o.get("length")):(a.push(o.get(ji)),_r(n)&&a.push(o.get(Ga)));break;case"delete":ke(n)||(a.push(o.get(ji)),_r(n)&&a.push(o.get(Ga)));break;case"set":_r(n)&&a.push(o.get(ji));break}if(a.length===1)a[0]&&Wa(a[0]);else{const l=[];for(const c of a)c&&l.push(...c);Wa(I2(l))}}function Wa(n,e){const t=ke(n)?n:[...n];for(const i of t)i.computed&&Rl(i);for(const i of t)i.computed||Rl(i)}function Rl(n,e){(n!==An||n.allowRecurse)&&(n.scheduler?n.scheduler():n.run())}const nf=w2("__proto__,__v_isRef,__isVue"),Ru=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(go)),Pl=rf();function rf(){const n={};return["includes","indexOf","lastIndexOf"].forEach(e=>{n[e]=function(...t){const i=nt(this);for(let s=0,o=this.length;s<o;s++)sn(i,"get",s+"");const r=i[e](...t);return r===-1||r===!1?i[e](...t.map(nt)):r}}),["push","pop","shift","unshift","splice"].forEach(e=>{n[e]=function(...t){Y1();const i=nt(this)[e].apply(this,t);return K1(),i}}),n}function sf(n){const e=nt(this);return sn(e,"has",n),e.hasOwnProperty(n)}class Pu{constructor(e=!1,t=!1){this._isReadonly=e,this._shallow=t}get(e,t,i){const r=this._isReadonly,s=this._shallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw"&&i===(r?s?_f:Uu:s?Du:Iu).get(e))return e;const o=ke(e);if(!r){if(o&&Je(Pl,t))return Reflect.get(Pl,t,i);if(t==="hasOwnProperty")return sf}const a=Reflect.get(e,t,i);return(go(t)?Ru.has(t):nf(t))||(r||sn(e,"get",t),s)?a:$t(a)?o&&R2(t)?a:a.value:At(a)?r?Ou(a):N2(a):a}}class Lu extends Pu{constructor(e=!1){super(!1,e)}set(e,t,i,r){let s=e[t];if(Rr(s)&&$t(s)&&!$t(i))return!1;if(!this._shallow&&(!Xa(i)&&!Rr(i)&&(s=nt(s),i=nt(i)),!ke(e)&&$t(s)&&!$t(i)))return s.value=i,!0;const o=ke(e)&&R2(t)?Number(t)<e.length:Je(e,t),a=Reflect.set(e,t,i,r);return e===nt(r)&&(o?N1(i,s)&&ui(e,"set",t,i):ui(e,"add",t,i)),a}deleteProperty(e,t){const i=Je(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&ui(e,"delete",t,void 0),r}has(e,t){const i=Reflect.has(e,t);return(!go(t)||!Ru.has(t))&&sn(e,"has",t),i}ownKeys(e){return sn(e,"iterate",ke(e)?"length":ji),Reflect.ownKeys(e)}}class of extends Pu{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const af=new Lu,lf=new of,cf=new Lu(!0),U2=n=>n,xo=n=>Reflect.getPrototypeOf(n);function Qr(n,e,t=!1,i=!1){n=n.__v_raw;const r=nt(n),s=nt(e);t||(N1(e,s)&&sn(r,"get",e),sn(r,"get",s));const{has:o}=xo(r),a=i?U2:t?z2:B2;if(o.call(r,e))return a(n.get(e));if(o.call(r,s))return a(n.get(s));n!==r&&n.get(e)}function es(n,e=!1){const t=this.__v_raw,i=nt(t),r=nt(n);return e||(N1(n,r)&&sn(i,"has",n),sn(i,"has",r)),n===r?t.has(n):t.has(n)||t.has(r)}function ts(n,e=!1){return n=n.__v_raw,!e&&sn(nt(n),"iterate",ji),Reflect.get(n,"size",n)}function Ll(n){n=nt(n);const e=nt(this);return xo(e).has.call(e,n)||(e.add(n),ui(e,"add",n,n)),this}function Il(n,e){e=nt(e);const t=nt(this),{has:i,get:r}=xo(t);let s=i.call(t,n);s||(n=nt(n),s=i.call(t,n));const o=r.call(t,n);return t.set(n,e),s?N1(e,o)&&ui(t,"set",n,e):ui(t,"add",n,e),this}function Dl(n){const e=nt(this),{has:t,get:i}=xo(e);let r=t.call(e,n);r||(n=nt(n),r=t.call(e,n)),i&&i.call(e,n);const s=e.delete(n);return r&&ui(e,"delete",n,void 0),s}function Ul(){const n=nt(this),e=n.size!==0,t=n.clear();return e&&ui(n,"clear",void 0,void 0),t}function ns(n,e){return function(i,r){const s=this,o=s.__v_raw,a=nt(o),l=e?U2:n?z2:B2;return!n&&sn(a,"iterate",ji),o.forEach((c,u)=>i.call(r,l(c),l(u),s))}}function is(n,e,t){return function(...i){const r=this.__v_raw,s=nt(r),o=_r(s),a=n==="entries"||n===Symbol.iterator&&o,l=n==="keys"&&o,c=r[n](...i),u=t?U2:e?z2:B2;return!e&&sn(s,"iterate",l?Ga:ji),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function gi(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function uf(){const n={get(s){return Qr(this,s)},get size(){return ts(this)},has:es,add:Ll,set:Il,delete:Dl,clear:Ul,forEach:ns(!1,!1)},e={get(s){return Qr(this,s,!1,!0)},get size(){return ts(this)},has:es,add:Ll,set:Il,delete:Dl,clear:Ul,forEach:ns(!1,!0)},t={get(s){return Qr(this,s,!0)},get size(){return ts(this,!0)},has(s){return es.call(this,s,!0)},add:gi("add"),set:gi("set"),delete:gi("delete"),clear:gi("clear"),forEach:ns(!0,!1)},i={get(s){return Qr(this,s,!0,!0)},get size(){return ts(this,!0)},has(s){return es.call(this,s,!0)},add:gi("add"),set:gi("set"),delete:gi("delete"),clear:gi("clear"),forEach:ns(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{n[s]=is(s,!1,!1),t[s]=is(s,!0,!1),e[s]=is(s,!1,!0),i[s]=is(s,!0,!0)}),[n,t,e,i]}const[hf,ff,df,pf]=uf();function O2(n,e){const t=e?n?pf:df:n?ff:hf;return(i,r,s)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?i:Reflect.get(Je(t,r)&&r in i?t:i,r,s)}const mf={get:O2(!1,!1)},gf={get:O2(!1,!0)},vf={get:O2(!0,!1)},Iu=new WeakMap,Du=new WeakMap,Uu=new WeakMap,_f=new WeakMap;function xf(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function yf(n){return n.__v_skip||!Object.isExtensible(n)?0:xf(k0(n))}function N2(n){return Rr(n)?n:F2(n,!1,af,mf,Iu)}function Mf(n){return F2(n,!1,cf,gf,Du)}function Ou(n){return F2(n,!0,lf,vf,Uu)}function F2(n,e,t,i,r){if(!At(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const s=r.get(n);if(s)return s;const o=yf(n);if(o===0)return n;const a=new Proxy(n,o===2?i:t);return r.set(n,a),a}function P1(n){return Rr(n)?P1(n.__v_raw):!!(n&&n.__v_isReactive)}function Rr(n){return!!(n&&n.__v_isReadonly)}function Xa(n){return!!(n&&n.__v_isShallow)}function Nu(n){return P1(n)||Rr(n)}function nt(n){const e=n&&n.__v_raw;return e?nt(e):n}function Fu(n){return Zs(n,"__v_skip",!0),n}const B2=n=>At(n)?N2(n):n,z2=n=>At(n)?Ou(n):n;function Sf(n){Ai&&An&&(n=nt(n),Cu(n.dep||(n.dep=I2())))}function Ef(n,e){n=nt(n);const t=n.dep;t&&Wa(t)}function $t(n){return!!(n&&n.__v_isRef===!0)}function bf(n){return $t(n)?n.value:n}const Tf={get:(n,e,t)=>bf(Reflect.get(n,e,t)),set:(n,e,t,i)=>{const r=n[e];return $t(r)&&!$t(t)?(r.value=t,!0):Reflect.set(n,e,t,i)}};function Bu(n){return P1(n)?n:new Proxy(n,Tf)}class wf{constructor(e,t,i,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new D2(e,()=>{this._dirty||(this._dirty=!0,Ef(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=i}get value(){const e=nt(this);return Sf(e),(e._dirty||!e._cacheable)&&(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function Af(n,e,t=!1){let i,r;const s=Ge(n);return s?(i=n,r=Gn):(i=n.get,r=n.set),new wf(i,r,s||!r,t)}function Ci(n,e,t,i){let r;try{r=i?n(...i):n()}catch(s){yo(s,e,t)}return r}function Rn(n,e,t,i){if(Ge(n)){const s=Ci(n,e,t,i);return s&&Su(s)&&s.catch(o=>{yo(o,e,t)}),s}const r=[];for(let s=0;s<n.length;s++)r.push(Rn(n[s],e,t,i));return r}function yo(n,e,t,i=!0){const r=e?e.vnode:null;if(e){let s=e.parent;const o=e.proxy,a=t;for(;s;){const c=s.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](n,o,a)===!1)return}s=s.parent}const l=e.appContext.config.errorHandler;if(l){Ci(l,null,10,[n,o,a]);return}}Cf(n,t,r,i)}function Cf(n,e,t,i=!0){console.error(n)}let Pr=!1,ja=!1;const Vt=[];let zn=0;const L1=[];let ii=null,Vi=0;const zu=Promise.resolve();let k2=null;function Rf(n){const e=k2||zu;return n?e.then(this?n.bind(this):n):e}function Pf(n){let e=zn+1,t=Vt.length;for(;e<t;){const i=e+t>>>1,r=Vt[i],s=Lr(r);s<n||s===n&&r.pre?e=i+1:t=i}return e}function H2(n){(!Vt.length||!Vt.includes(n,Pr&&n.allowRecurse?zn+1:zn))&&(n.id==null?Vt.push(n):Vt.splice(Pf(n.id),0,n),ku())}function ku(){!Pr&&!ja&&(ja=!0,k2=zu.then(Vu))}function Lf(n){const e=Vt.indexOf(n);e>zn&&Vt.splice(e,1)}function If(n){ke(n)?L1.push(...n):(!ii||!ii.includes(n,n.allowRecurse?Vi+1:Vi))&&L1.push(n),ku()}function Ol(n,e=Pr?zn+1:0){for(;e<Vt.length;e++){const t=Vt[e];t&&t.pre&&(Vt.splice(e,1),e--,t())}}function Hu(n){if(L1.length){const e=[...new Set(L1)];if(L1.length=0,ii){ii.push(...e);return}for(ii=e,ii.sort((t,i)=>Lr(t)-Lr(i)),Vi=0;Vi<ii.length;Vi++)ii[Vi]();ii=null,Vi=0}}const Lr=n=>n.id==null?1/0:n.id,Df=(n,e)=>{const t=Lr(n)-Lr(e);if(t===0){if(n.pre&&!e.pre)return-1;if(e.pre&&!n.pre)return 1}return t};function Vu(n){ja=!1,Pr=!0,Vt.sort(Df);try{for(zn=0;zn<Vt.length;zn++){const e=Vt[zn];e&&e.active!==!1&&Ci(e,null,14)}}finally{zn=0,Vt.length=0,Hu(),Pr=!1,k2=null,(Vt.length||L1.length)&&Vu()}}function Uf(n,e,...t){if(n.isUnmounted)return;const i=n.vnode.props||ht;let r=t;const s=e.startsWith("update:"),o=s&&e.slice(7);if(o&&o in i){const u=`${o==="modelValue"?"model":o}Modifiers`,{number:h,trim:f}=i[u]||ht;f&&(r=t.map(d=>Nt(d)?d.trim():d)),h&&(r=t.map(W0))}let a,l=i[a=Bo(e)]||i[a=Bo(O1(e))];!l&&s&&(l=i[a=Bo(q1(e))]),l&&Rn(l,n,6,r);const c=i[a+"Once"];if(c){if(!n.emitted)n.emitted={};else if(n.emitted[a])return;n.emitted[a]=!0,Rn(c,n,6,r)}}function Gu(n,e,t=!1){const i=e.emitsCache,r=i.get(n);if(r!==void 0)return r;const s=n.emits;let o={},a=!1;if(!Ge(n)){const l=c=>{const u=Gu(c,e,!0);u&&(a=!0,Wt(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),n.extends&&l(n.extends),n.mixins&&n.mixins.forEach(l)}return!s&&!a?(At(n)&&i.set(n,null),null):(ke(s)?s.forEach(l=>o[l]=null):Wt(o,s),At(n)&&i.set(n,o),o)}function Mo(n,e){return!n||!mo(e)?!1:(e=e.slice(2).replace(/Once$/,""),Je(n,e[0].toLowerCase()+e.slice(1))||Je(n,q1(e))||Je(n,e))}let Vn=null,Wu=null;function Js(n){const e=Vn;return Vn=n,Wu=n&&n.type.__scopeId||null,e}function Of(n,e=Vn,t){if(!e||n._n)return n;const i=(...r)=>{i._d&&Xl(-1);const s=Js(e);let o;try{o=n(...r)}finally{Js(s),i._d&&Xl(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function ko(n){const{type:e,vnode:t,proxy:i,withProxy:r,props:s,propsOptions:[o],slots:a,attrs:l,emit:c,render:u,renderCache:h,data:f,setupState:d,ctx:g,inheritAttrs:v}=n;let m,p;const S=Js(n);try{if(t.shapeFlag&4){const y=r||i,b=y;m=Fn(u.call(b,y,h,s,d,f,g)),p=l}else{const y=e;m=Fn(y.length>1?y(s,{attrs:l,slots:a,emit:c}):y(s,null)),p=e.props?l:Nf(l)}}catch(y){yr.length=0,yo(y,n,1),m=qi(Ir)}let _=m;if(p&&v!==!1){const y=Object.keys(p),{shapeFlag:b}=_;y.length&&b&7&&(o&&y.some(A2)&&(p=Ff(p,o)),_=F1(_,p))}return t.dirs&&(_=F1(_),_.dirs=_.dirs?_.dirs.concat(t.dirs):t.dirs),t.transition&&(_.transition=t.transition),m=_,Js(S),m}const Nf=n=>{let e;for(const t in n)(t==="class"||t==="style"||mo(t))&&((e||(e={}))[t]=n[t]);return e},Ff=(n,e)=>{const t={};for(const i in n)(!A2(i)||!(i.slice(9)in e))&&(t[i]=n[i]);return t};function Bf(n,e,t){const{props:i,children:r,component:s}=n,{props:o,children:a,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return i?Nl(i,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==i[f]&&!Mo(c,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?Nl(i,o,c):!0:!!o;return!1}function Nl(n,e,t){const i=Object.keys(e);if(i.length!==Object.keys(n).length)return!0;for(let r=0;r<i.length;r++){const s=i[r];if(e[s]!==n[s]&&!Mo(t,s))return!0}return!1}function zf({vnode:n,parent:e},t){for(;e&&e.subTree===n;)(n=e.vnode).el=t,e=e.parent}const kf=Symbol.for("v-ndc"),Hf=n=>n.__isSuspense;function Vf(n,e){e&&e.pendingBranch?ke(n)?e.effects.push(...n):e.effects.push(n):If(n)}const rs={};function Ho(n,e,t){return Xu(n,e,t)}function Xu(n,e,{immediate:t,deep:i,flush:r,onTrack:s,onTrigger:o}=ht){var a;const l=Q0()===((a=Gt)==null?void 0:a.scope)?Gt:null;let c,u=!1,h=!1;if($t(n)?(c=()=>n.value,u=Xa(n)):P1(n)?(c=()=>n,i=!0):ke(n)?(h=!0,u=n.some(y=>P1(y)||Xa(y)),c=()=>n.map(y=>{if($t(y))return y.value;if(P1(y))return T1(y);if(Ge(y))return Ci(y,l,2)})):Ge(n)?e?c=()=>Ci(n,l,2):c=()=>{if(!(l&&l.isUnmounted))return f&&f(),Rn(n,l,3,[d])}:c=Gn,e&&i){const y=c;c=()=>T1(y())}let f,d=y=>{f=S.onStop=()=>{Ci(y,l,4),f=S.onStop=void 0}},g;if(Ur)if(d=Gn,e?t&&Rn(e,l,3,[c(),h?[]:void 0,d]):c(),r==="sync"){const y=z4();g=y.__watcherHandles||(y.__watcherHandles=[])}else return Gn;let v=h?new Array(n.length).fill(rs):rs;const m=()=>{if(S.active)if(e){const y=S.run();(i||u||(h?y.some((b,C)=>N1(b,v[C])):N1(y,v)))&&(f&&f(),Rn(e,l,3,[y,v===rs?void 0:h&&v[0]===rs?[]:v,d]),v=y)}else S.run()};m.allowRecurse=!!e;let p;r==="sync"?p=m:r==="post"?p=()=>Qt(m,l&&l.suspense):(m.pre=!0,l&&(m.id=l.uid),p=()=>H2(m));const S=new D2(c,p);e?t?m():v=S.run():r==="post"?Qt(S.run.bind(S),l&&l.suspense):S.run();const _=()=>{S.stop(),l&&l.scope&&C2(l.scope.effects,S)};return g&&g.push(_),_}function Gf(n,e,t){const i=this.proxy,r=Nt(n)?n.includes(".")?ju(i,n):()=>i[n]:n.bind(i,i);let s;Ge(e)?s=e:(s=e.handler,t=e);const o=Gt;B1(this);const a=Xu(r,s.bind(i),t);return o?B1(o):Yi(),a}function ju(n,e){const t=e.split(".");return()=>{let i=n;for(let r=0;r<t.length&&i;r++)i=i[t[r]];return i}}function T1(n,e){if(!At(n)||n.__v_skip||(e=e||new Set,e.has(n)))return n;if(e.add(n),$t(n))T1(n.value,e);else if(ke(n))for(let t=0;t<n.length;t++)T1(n[t],e);else if(B0(n)||_r(n))n.forEach(t=>{T1(t,e)});else if(H0(n))for(const t in n)T1(n[t],e);return n}function Ui(n,e,t,i){const r=n.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[i];l&&(Y1(),Rn(l,t,8,[n.el,a,n,e]),K1())}}const Xs=n=>!!n.type.__asyncLoader,qu=n=>n.type.__isKeepAlive;function Wf(n,e){Yu(n,"a",e)}function Xf(n,e){Yu(n,"da",e)}function Yu(n,e,t=Gt){const i=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(So(e,i,t),t){let r=t.parent;for(;r&&r.parent;)qu(r.parent.vnode)&&jf(i,e,t,r),r=r.parent}}function jf(n,e,t,i){const r=So(e,n,i,!0);$u(()=>{C2(i[e],r)},t)}function So(n,e,t=Gt,i=!1){if(t){const r=t[n]||(t[n]=[]),s=e.__weh||(e.__weh=(...o)=>{if(t.isUnmounted)return;Y1(),B1(t);const a=Rn(e,t,n,o);return Yi(),K1(),a});return i?r.unshift(s):r.push(s),s}}const di=n=>(e,t=Gt)=>(!Ur||n==="sp")&&So(n,(...i)=>e(...i),t),qf=di("bm"),Ku=di("m"),Yf=di("bu"),Kf=di("u"),$f=di("bum"),$u=di("um"),Zf=di("sp"),Jf=di("rtg"),Qf=di("rtc");function e4(n,e=Gt){So("ec",n,e)}const qa=n=>n?ah(n)?j2(n)||n.proxy:qa(n.parent):null,xr=Wt(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>qa(n.parent),$root:n=>qa(n.root),$emit:n=>n.emit,$options:n=>V2(n),$forceUpdate:n=>n.f||(n.f=()=>H2(n.update)),$nextTick:n=>n.n||(n.n=Rf.bind(n.proxy)),$watch:n=>Gf.bind(n)}),Vo=(n,e)=>n!==ht&&!n.__isScriptSetup&&Je(n,e),t4={get({_:n},e){const{ctx:t,setupState:i,data:r,props:s,accessCache:o,type:a,appContext:l}=n;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return i[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(Vo(i,e))return o[e]=1,i[e];if(r!==ht&&Je(r,e))return o[e]=2,r[e];if((c=n.propsOptions[0])&&Je(c,e))return o[e]=3,s[e];if(t!==ht&&Je(t,e))return o[e]=4,t[e];Ya&&(o[e]=0)}}const u=xr[e];let h,f;if(u)return e==="$attrs"&&sn(n,"get",e),u(n);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==ht&&Je(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,Je(f,e))return f[e]},set({_:n},e,t){const{data:i,setupState:r,ctx:s}=n;return Vo(r,e)?(r[e]=t,!0):i!==ht&&Je(i,e)?(i[e]=t,!0):Je(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(s[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:i,appContext:r,propsOptions:s}},o){let a;return!!t[o]||n!==ht&&Je(n,o)||Vo(e,o)||(a=s[0])&&Je(a,o)||Je(i,o)||Je(xr,o)||Je(r.config.globalProperties,o)},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:Je(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function Fl(n){return ke(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let Ya=!0;function n4(n){const e=V2(n),t=n.proxy,i=n.ctx;Ya=!1,e.beforeCreate&&Bl(e.beforeCreate,n,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:d,updated:g,activated:v,deactivated:m,beforeDestroy:p,beforeUnmount:S,destroyed:_,unmounted:y,render:b,renderTracked:C,renderTriggered:A,errorCaptured:U,serverPrefetch:E,expose:T,inheritAttrs:G,components:Y,directives:B,filters:H}=e;if(c&&i4(c,i,null),o)for(const X in o){const j=o[X];Ge(j)&&(i[X]=j.bind(t))}if(r){const X=r.call(t,t);At(X)&&(n.data=N2(X))}if(Ya=!0,s)for(const X in s){const j=s[X],ie=Ge(j)?j.bind(t,t):Ge(j.get)?j.get.bind(t,t):Gn,re=!Ge(j)&&Ge(j.set)?j.set.bind(t):Gn,W=F4({get:ie,set:re});Object.defineProperty(i,X,{enumerable:!0,configurable:!0,get:()=>W.value,set:q=>W.value=q})}if(a)for(const X in a)Zu(a[X],i,t,X);if(l){const X=Ge(l)?l.call(t):l;Reflect.ownKeys(X).forEach(j=>{c4(j,X[j])})}u&&Bl(u,n,"c");function V(X,j){ke(j)?j.forEach(ie=>X(ie.bind(t))):j&&X(j.bind(t))}if(V(qf,h),V(Ku,f),V(Yf,d),V(Kf,g),V(Wf,v),V(Xf,m),V(e4,U),V(Qf,C),V(Jf,A),V($f,S),V($u,y),V(Zf,E),ke(T))if(T.length){const X=n.exposed||(n.exposed={});T.forEach(j=>{Object.defineProperty(X,j,{get:()=>t[j],set:ie=>t[j]=ie})})}else n.exposed||(n.exposed={});b&&n.render===Gn&&(n.render=b),G!=null&&(n.inheritAttrs=G),Y&&(n.components=Y),B&&(n.directives=B)}function i4(n,e,t=Gn){ke(n)&&(n=Ka(n));for(const i in n){const r=n[i];let s;At(r)?"default"in r?s=js(r.from||i,r.default,!0):s=js(r.from||i):s=js(r),$t(s)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[i]=s}}function Bl(n,e,t){Rn(ke(n)?n.map(i=>i.bind(e.proxy)):n.bind(e.proxy),e,t)}function Zu(n,e,t,i){const r=i.includes(".")?ju(t,i):()=>t[i];if(Nt(n)){const s=e[n];Ge(s)&&Ho(r,s)}else if(Ge(n))Ho(r,n.bind(t));else if(At(n))if(ke(n))n.forEach(s=>Zu(s,e,t,i));else{const s=Ge(n.handler)?n.handler.bind(t):e[n.handler];Ge(s)&&Ho(r,s,n)}}function V2(n){const e=n.type,{mixins:t,extends:i}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=n.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!i?l=e:(l={},r.length&&r.forEach(c=>Qs(l,c,o,!0)),Qs(l,e,o)),At(e)&&s.set(e,l),l}function Qs(n,e,t,i=!1){const{mixins:r,extends:s}=e;s&&Qs(n,s,t,!0),r&&r.forEach(o=>Qs(n,o,t,!0));for(const o in e)if(!(i&&o==="expose")){const a=r4[o]||t&&t[o];n[o]=a?a(n[o],e[o]):e[o]}return n}const r4={data:zl,props:kl,emits:kl,methods:fr,computed:fr,beforeCreate:Yt,created:Yt,beforeMount:Yt,mounted:Yt,beforeUpdate:Yt,updated:Yt,beforeDestroy:Yt,beforeUnmount:Yt,destroyed:Yt,unmounted:Yt,activated:Yt,deactivated:Yt,errorCaptured:Yt,serverPrefetch:Yt,components:fr,directives:fr,watch:o4,provide:zl,inject:s4};function zl(n,e){return e?n?function(){return Wt(Ge(n)?n.call(this,this):n,Ge(e)?e.call(this,this):e)}:e:n}function s4(n,e){return fr(Ka(n),Ka(e))}function Ka(n){if(ke(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function Yt(n,e){return n?[...new Set([].concat(n,e))]:e}function fr(n,e){return n?Wt(Object.create(null),n,e):e}function kl(n,e){return n?ke(n)&&ke(e)?[...new Set([...n,...e])]:Wt(Object.create(null),Fl(n),Fl(e??{})):e}function o4(n,e){if(!n)return e;if(!e)return n;const t=Wt(Object.create(null),n);for(const i in e)t[i]=Yt(n[i],e[i]);return t}function Ju(){return{app:null,config:{isNativeTag:O0,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let a4=0;function l4(n,e){return function(i,r=null){Ge(i)||(i=Wt({},i)),r!=null&&!At(r)&&(r=null);const s=Ju(),o=new WeakSet;let a=!1;const l=s.app={_uid:a4++,_component:i,_props:r,_container:null,_context:s,_instance:null,version:k4,get config(){return s.config},set config(c){},use(c,...u){return o.has(c)||(c&&Ge(c.install)?(o.add(c),c.install(l,...u)):Ge(c)&&(o.add(c),c(l,...u))),l},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),l},component(c,u){return u?(s.components[c]=u,l):s.components[c]},directive(c,u){return u?(s.directives[c]=u,l):s.directives[c]},mount(c,u,h){if(!a){const f=qi(i,r);return f.appContext=s,u&&e?e(f,c):n(f,c,h),a=!0,l._container=c,c.__vue_app__=l,j2(f.component)||f.component.proxy}},unmount(){a&&(n(null,l._container),delete l._container.__vue_app__)},provide(c,u){return s.provides[c]=u,l},runWithContext(c){eo=l;try{return c()}finally{eo=null}}};return l}}let eo=null;function c4(n,e){if(Gt){let t=Gt.provides;const i=Gt.parent&&Gt.parent.provides;i===t&&(t=Gt.provides=Object.create(i)),t[n]=e}}function js(n,e,t=!1){const i=Gt||Vn;if(i||eo){const r=i?i.parent==null?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:eo._context.provides;if(r&&n in r)return r[n];if(arguments.length>1)return t&&Ge(e)?e.call(i&&i.proxy):e}}function u4(n,e,t,i=!1){const r={},s={};Zs(s,bo,1),n.propsDefaults=Object.create(null),Qu(n,e,r,s);for(const o in n.propsOptions[0])o in r||(r[o]=void 0);t?n.props=i?r:Mf(r):n.type.props?n.props=r:n.props=s,n.attrs=s}function h4(n,e,t,i){const{props:r,attrs:s,vnode:{patchFlag:o}}=n,a=nt(r),[l]=n.propsOptions;let c=!1;if((i||o>0)&&!(o&16)){if(o&8){const u=n.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(Mo(n.emitsOptions,f))continue;const d=e[f];if(l)if(Je(s,f))d!==s[f]&&(s[f]=d,c=!0);else{const g=O1(f);r[g]=$a(l,a,g,d,n,!1)}else d!==s[f]&&(s[f]=d,c=!0)}}}else{Qu(n,e,r,s)&&(c=!0);let u;for(const h in a)(!e||!Je(e,h)&&((u=q1(h))===h||!Je(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=$a(l,a,h,void 0,n,!0)):delete r[h]);if(s!==a)for(const h in s)(!e||!Je(e,h))&&(delete s[h],c=!0)}c&&ui(n,"set","$attrs")}function Qu(n,e,t,i){const[r,s]=n.propsOptions;let o=!1,a;if(e)for(let l in e){if(Ws(l))continue;const c=e[l];let u;r&&Je(r,u=O1(l))?!s||!s.includes(u)?t[u]=c:(a||(a={}))[u]=c:Mo(n.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,o=!0)}if(s){const l=nt(t),c=a||ht;for(let u=0;u<s.length;u++){const h=s[u];t[h]=$a(r,l,h,c[h],n,!Je(c,h))}}return o}function $a(n,e,t,i,r,s){const o=n[t];if(o!=null){const a=Je(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&Ge(l)){const{propsDefaults:c}=r;t in c?i=c[t]:(B1(r),i=c[t]=l.call(null,e),Yi())}else i=l}o[0]&&(s&&!a?i=!1:o[1]&&(i===""||i===q1(t))&&(i=!0))}return i}function eh(n,e,t=!1){const i=e.propsCache,r=i.get(n);if(r)return r;const s=n.props,o={},a=[];let l=!1;if(!Ge(n)){const u=h=>{l=!0;const[f,d]=eh(h,e,!0);Wt(o,f),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),n.extends&&u(n.extends),n.mixins&&n.mixins.forEach(u)}if(!s&&!l)return At(n)&&i.set(n,R1),R1;if(ke(s))for(let u=0;u<s.length;u++){const h=O1(s[u]);Hl(h)&&(o[h]=ht)}else if(s)for(const u in s){const h=O1(u);if(Hl(h)){const f=s[u],d=o[h]=ke(f)||Ge(f)?{type:f}:Wt({},f);if(d){const g=Wl(Boolean,d.type),v=Wl(String,d.type);d[0]=g>-1,d[1]=v<0||g<v,(g>-1||Je(d,"default"))&&a.push(h)}}}const c=[o,a];return At(n)&&i.set(n,c),c}function Hl(n){return n[0]!=="$"}function Vl(n){const e=n&&n.toString().match(/^\s*(function|class) (\w+)/);return e?e[2]:n===null?"null":""}function Gl(n,e){return Vl(n)===Vl(e)}function Wl(n,e){return ke(e)?e.findIndex(t=>Gl(t,n)):Ge(e)&&Gl(e,n)?0:-1}const th=n=>n[0]==="_"||n==="$stable",G2=n=>ke(n)?n.map(Fn):[Fn(n)],f4=(n,e,t)=>{if(e._n)return e;const i=Of((...r)=>G2(e(...r)),t);return i._c=!1,i},nh=(n,e,t)=>{const i=n._ctx;for(const r in n){if(th(r))continue;const s=n[r];if(Ge(s))e[r]=f4(r,s,i);else if(s!=null){const o=G2(s);e[r]=()=>o}}},ih=(n,e)=>{const t=G2(e);n.slots.default=()=>t},d4=(n,e)=>{if(n.vnode.shapeFlag&32){const t=e._;t?(n.slots=nt(e),Zs(e,"_",t)):nh(e,n.slots={})}else n.slots={},e&&ih(n,e);Zs(n.slots,bo,1)},p4=(n,e,t)=>{const{vnode:i,slots:r}=n;let s=!0,o=ht;if(i.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:(Wt(r,e),!t&&a===1&&delete r._):(s=!e.$stable,nh(e,r)),o=e}else e&&(ih(n,e),o={default:1});if(s)for(const a in r)!th(a)&&o[a]==null&&delete r[a]};function Za(n,e,t,i,r=!1){if(ke(n)){n.forEach((f,d)=>Za(f,e&&(ke(e)?e[d]:e),t,i,r));return}if(Xs(i)&&!r)return;const s=i.shapeFlag&4?j2(i.component)||i.component.proxy:i.el,o=r?null:s,{i:a,r:l}=n,c=e&&e.r,u=a.refs===ht?a.refs={}:a.refs,h=a.setupState;if(c!=null&&c!==l&&(Nt(c)?(u[c]=null,Je(h,c)&&(h[c]=null)):$t(c)&&(c.value=null)),Ge(l))Ci(l,a,12,[o,u]);else{const f=Nt(l),d=$t(l);if(f||d){const g=()=>{if(n.f){const v=f?Je(h,l)?h[l]:u[l]:l.value;r?ke(v)&&C2(v,s):ke(v)?v.includes(s)||v.push(s):f?(u[l]=[s],Je(h,l)&&(h[l]=u[l])):(l.value=[s],n.k&&(u[n.k]=l.value))}else f?(u[l]=o,Je(h,l)&&(h[l]=o)):d&&(l.value=o,n.k&&(u[n.k]=o))};o?(g.id=-1,Qt(g,t)):g()}}}const Qt=Vf;function m4(n){return g4(n)}function g4(n,e){const t=ka();t.__VUE__=!0;const{insert:i,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:d=Gn,insertStaticContent:g}=n,v=(x,P,D,z=null,N=null,Q=null,ee=!1,$=null,se=!!P.dynamicChildren)=>{if(x===P)return;x&&!sr(x,P)&&(z=Re(x),q(x,N,Q,!0),x=null),P.patchFlag===-2&&(se=!1,P.dynamicChildren=null);const{type:ne,ref:Ee,shapeFlag:w}=P;switch(ne){case Eo:m(x,P,D,z);break;case Ir:p(x,P,D,z);break;case Go:x==null&&S(P,D,z,ee);break;case ri:Y(x,P,D,z,N,Q,ee,$,se);break;default:w&1?b(x,P,D,z,N,Q,ee,$,se):w&6?B(x,P,D,z,N,Q,ee,$,se):(w&64||w&128)&&ne.process(x,P,D,z,N,Q,ee,$,se,Be)}Ee!=null&&N&&Za(Ee,x&&x.ref,Q,P||x,!P)},m=(x,P,D,z)=>{if(x==null)i(P.el=a(P.children),D,z);else{const N=P.el=x.el;P.children!==x.children&&c(N,P.children)}},p=(x,P,D,z)=>{x==null?i(P.el=l(P.children||""),D,z):P.el=x.el},S=(x,P,D,z)=>{[x.el,x.anchor]=g(x.children,P,D,z,x.el,x.anchor)},_=({el:x,anchor:P},D,z)=>{let N;for(;x&&x!==P;)N=f(x),i(x,D,z),x=N;i(P,D,z)},y=({el:x,anchor:P})=>{let D;for(;x&&x!==P;)D=f(x),r(x),x=D;r(P)},b=(x,P,D,z,N,Q,ee,$,se)=>{ee=ee||P.type==="svg",x==null?C(P,D,z,N,Q,ee,$,se):E(x,P,N,Q,ee,$,se)},C=(x,P,D,z,N,Q,ee,$)=>{let se,ne;const{type:Ee,props:w,shapeFlag:M,transition:k,dirs:oe}=x;if(se=x.el=o(x.type,Q,w&&w.is,w),M&8?u(se,x.children):M&16&&U(x.children,se,null,z,N,Q&&Ee!=="foreignObject",ee,$),oe&&Ui(x,null,z,"created"),A(se,x,x.scopeId,ee,z),w){for(const ue in w)ue!=="value"&&!Ws(ue)&&s(se,ue,null,w[ue],Q,x.children,z,N,Ae);"value"in w&&s(se,"value",null,w.value),(ne=w.onVnodeBeforeMount)&&Un(ne,z,x)}oe&&Ui(x,null,z,"beforeMount");const ce=v4(N,k);ce&&k.beforeEnter(se),i(se,P,D),((ne=w&&w.onVnodeMounted)||ce||oe)&&Qt(()=>{ne&&Un(ne,z,x),ce&&k.enter(se),oe&&Ui(x,null,z,"mounted")},N)},A=(x,P,D,z,N)=>{if(D&&d(x,D),z)for(let Q=0;Q<z.length;Q++)d(x,z[Q]);if(N){let Q=N.subTree;if(P===Q){const ee=N.vnode;A(x,ee,ee.scopeId,ee.slotScopeIds,N.parent)}}},U=(x,P,D,z,N,Q,ee,$,se=0)=>{for(let ne=se;ne<x.length;ne++){const Ee=x[ne]=$?Ei(x[ne]):Fn(x[ne]);v(null,Ee,P,D,z,N,Q,ee,$)}},E=(x,P,D,z,N,Q,ee)=>{const $=P.el=x.el;let{patchFlag:se,dynamicChildren:ne,dirs:Ee}=P;se|=x.patchFlag&16;const w=x.props||ht,M=P.props||ht;let k;D&&Oi(D,!1),(k=M.onVnodeBeforeUpdate)&&Un(k,D,P,x),Ee&&Ui(P,x,D,"beforeUpdate"),D&&Oi(D,!0);const oe=N&&P.type!=="foreignObject";if(ne?T(x.dynamicChildren,ne,$,D,z,oe,Q):ee||j(x,P,$,null,D,z,oe,Q,!1),se>0){if(se&16)G($,P,w,M,D,z,N);else if(se&2&&w.class!==M.class&&s($,"class",null,M.class,N),se&4&&s($,"style",w.style,M.style,N),se&8){const ce=P.dynamicProps;for(let ue=0;ue<ce.length;ue++){const Me=ce[ue],de=w[Me],J=M[Me];(J!==de||Me==="value")&&s($,Me,de,J,N,x.children,D,z,Ae)}}se&1&&x.children!==P.children&&u($,P.children)}else!ee&&ne==null&&G($,P,w,M,D,z,N);((k=M.onVnodeUpdated)||Ee)&&Qt(()=>{k&&Un(k,D,P,x),Ee&&Ui(P,x,D,"updated")},z)},T=(x,P,D,z,N,Q,ee)=>{for(let $=0;$<P.length;$++){const se=x[$],ne=P[$],Ee=se.el&&(se.type===ri||!sr(se,ne)||se.shapeFlag&70)?h(se.el):D;v(se,ne,Ee,null,z,N,Q,ee,!0)}},G=(x,P,D,z,N,Q,ee)=>{if(D!==z){if(D!==ht)for(const $ in D)!Ws($)&&!($ in z)&&s(x,$,D[$],null,ee,P.children,N,Q,Ae);for(const $ in z){if(Ws($))continue;const se=z[$],ne=D[$];se!==ne&&$!=="value"&&s(x,$,ne,se,ee,P.children,N,Q,Ae)}"value"in z&&s(x,"value",D.value,z.value)}},Y=(x,P,D,z,N,Q,ee,$,se)=>{const ne=P.el=x?x.el:a(""),Ee=P.anchor=x?x.anchor:a("");let{patchFlag:w,dynamicChildren:M,slotScopeIds:k}=P;k&&($=$?$.concat(k):k),x==null?(i(ne,D,z),i(Ee,D,z),U(P.children,D,Ee,N,Q,ee,$,se)):w>0&&w&64&&M&&x.dynamicChildren?(T(x.dynamicChildren,M,D,N,Q,ee,$),(P.key!=null||N&&P===N.subTree)&&rh(x,P,!0)):j(x,P,D,Ee,N,Q,ee,$,se)},B=(x,P,D,z,N,Q,ee,$,se)=>{P.slotScopeIds=$,x==null?P.shapeFlag&512?N.ctx.activate(P,D,z,ee,se):H(P,D,z,N,Q,ee,se):I(x,P,se)},H=(x,P,D,z,N,Q,ee)=>{const $=x.component=L4(x,z,N);if(qu(x)&&($.ctx.renderer=Be),I4($),$.asyncDep){if(N&&N.registerDep($,V),!x.el){const se=$.subTree=qi(Ir);p(null,se,P,D)}return}V($,x,P,D,N,Q,ee)},I=(x,P,D)=>{const z=P.component=x.component;if(Bf(x,P,D))if(z.asyncDep&&!z.asyncResolved){X(z,P,D);return}else z.next=P,Lf(z.update),z.update();else P.el=x.el,z.vnode=P},V=(x,P,D,z,N,Q,ee)=>{const $=()=>{if(x.isMounted){let{next:Ee,bu:w,u:M,parent:k,vnode:oe}=x,ce=Ee,ue;Oi(x,!1),Ee?(Ee.el=oe.el,X(x,Ee,ee)):Ee=oe,w&&zo(w),(ue=Ee.props&&Ee.props.onVnodeBeforeUpdate)&&Un(ue,k,Ee,oe),Oi(x,!0);const Me=ko(x),de=x.subTree;x.subTree=Me,v(de,Me,h(de.el),Re(de),x,N,Q),Ee.el=Me.el,ce===null&&zf(x,Me.el),M&&Qt(M,N),(ue=Ee.props&&Ee.props.onVnodeUpdated)&&Qt(()=>Un(ue,k,Ee,oe),N)}else{let Ee;const{el:w,props:M}=P,{bm:k,m:oe,parent:ce}=x,ue=Xs(P);if(Oi(x,!1),k&&zo(k),!ue&&(Ee=M&&M.onVnodeBeforeMount)&&Un(Ee,ce,P),Oi(x,!0),w&&Ie){const Me=()=>{x.subTree=ko(x),Ie(w,x.subTree,x,N,null)};ue?P.type.__asyncLoader().then(()=>!x.isUnmounted&&Me()):Me()}else{const Me=x.subTree=ko(x);v(null,Me,D,z,x,N,Q),P.el=Me.el}if(oe&&Qt(oe,N),!ue&&(Ee=M&&M.onVnodeMounted)){const Me=P;Qt(()=>Un(Ee,ce,Me),N)}(P.shapeFlag&256||ce&&Xs(ce.vnode)&&ce.vnode.shapeFlag&256)&&x.a&&Qt(x.a,N),x.isMounted=!0,P=D=z=null}},se=x.effect=new D2($,()=>H2(ne),x.scope),ne=x.update=()=>se.run();ne.id=x.uid,Oi(x,!0),ne()},X=(x,P,D)=>{P.component=x;const z=x.vnode.props;x.vnode=P,x.next=null,h4(x,P.props,z,D),p4(x,P.children,D),Y1(),Ol(),K1()},j=(x,P,D,z,N,Q,ee,$,se=!1)=>{const ne=x&&x.children,Ee=x?x.shapeFlag:0,w=P.children,{patchFlag:M,shapeFlag:k}=P;if(M>0){if(M&128){re(ne,w,D,z,N,Q,ee,$,se);return}else if(M&256){ie(ne,w,D,z,N,Q,ee,$,se);return}}k&8?(Ee&16&&Ae(ne,N,Q),w!==ne&&u(D,w)):Ee&16?k&16?re(ne,w,D,z,N,Q,ee,$,se):Ae(ne,N,Q,!0):(Ee&8&&u(D,""),k&16&&U(w,D,z,N,Q,ee,$,se))},ie=(x,P,D,z,N,Q,ee,$,se)=>{x=x||R1,P=P||R1;const ne=x.length,Ee=P.length,w=Math.min(ne,Ee);let M;for(M=0;M<w;M++){const k=P[M]=se?Ei(P[M]):Fn(P[M]);v(x[M],k,D,null,N,Q,ee,$,se)}ne>Ee?Ae(x,N,Q,!0,!1,w):U(P,D,z,N,Q,ee,$,se,w)},re=(x,P,D,z,N,Q,ee,$,se)=>{let ne=0;const Ee=P.length;let w=x.length-1,M=Ee-1;for(;ne<=w&&ne<=M;){const k=x[ne],oe=P[ne]=se?Ei(P[ne]):Fn(P[ne]);if(sr(k,oe))v(k,oe,D,null,N,Q,ee,$,se);else break;ne++}for(;ne<=w&&ne<=M;){const k=x[w],oe=P[M]=se?Ei(P[M]):Fn(P[M]);if(sr(k,oe))v(k,oe,D,null,N,Q,ee,$,se);else break;w--,M--}if(ne>w){if(ne<=M){const k=M+1,oe=k<Ee?P[k].el:z;for(;ne<=M;)v(null,P[ne]=se?Ei(P[ne]):Fn(P[ne]),D,oe,N,Q,ee,$,se),ne++}}else if(ne>M)for(;ne<=w;)q(x[ne],N,Q,!0),ne++;else{const k=ne,oe=ne,ce=new Map;for(ne=oe;ne<=M;ne++){const me=P[ne]=se?Ei(P[ne]):Fn(P[ne]);me.key!=null&&ce.set(me.key,ne)}let ue,Me=0;const de=M-oe+1;let J=!1,O=0;const he=new Array(de);for(ne=0;ne<de;ne++)he[ne]=0;for(ne=k;ne<=w;ne++){const me=x[ne];if(Me>=de){q(me,N,Q,!0);continue}let ve;if(me.key!=null)ve=ce.get(me.key);else for(ue=oe;ue<=M;ue++)if(he[ue-oe]===0&&sr(me,P[ue])){ve=ue;break}ve===void 0?q(me,N,Q,!0):(he[ve-oe]=ne+1,ve>=O?O=ve:J=!0,v(me,P[ve],D,null,N,Q,ee,$,se),Me++)}const be=J?_4(he):R1;for(ue=be.length-1,ne=de-1;ne>=0;ne--){const me=oe+ne,ve=P[me],Ue=me+1<Ee?P[me+1].el:z;he[ne]===0?v(null,ve,D,Ue,N,Q,ee,$,se):J&&(ue<0||ne!==be[ue]?W(ve,D,Ue,2):ue--)}}},W=(x,P,D,z,N=null)=>{const{el:Q,type:ee,transition:$,children:se,shapeFlag:ne}=x;if(ne&6){W(x.component.subTree,P,D,z);return}if(ne&128){x.suspense.move(P,D,z);return}if(ne&64){ee.move(x,P,D,Be);return}if(ee===ri){i(Q,P,D);for(let w=0;w<se.length;w++)W(se[w],P,D,z);i(x.anchor,P,D);return}if(ee===Go){_(x,P,D);return}if(z!==2&&ne&1&&$)if(z===0)$.beforeEnter(Q),i(Q,P,D),Qt(()=>$.enter(Q),N);else{const{leave:w,delayLeave:M,afterLeave:k}=$,oe=()=>i(Q,P,D),ce=()=>{w(Q,()=>{oe(),k&&k()})};M?M(Q,oe,ce):ce()}else i(Q,P,D)},q=(x,P,D,z=!1,N=!1)=>{const{type:Q,props:ee,ref:$,children:se,dynamicChildren:ne,shapeFlag:Ee,patchFlag:w,dirs:M}=x;if($!=null&&Za($,null,D,x,!0),Ee&256){P.ctx.deactivate(x);return}const k=Ee&1&&M,oe=!Xs(x);let ce;if(oe&&(ce=ee&&ee.onVnodeBeforeUnmount)&&Un(ce,P,x),Ee&6)Se(x.component,D,z);else{if(Ee&128){x.suspense.unmount(D,z);return}k&&Ui(x,null,P,"beforeUnmount"),Ee&64?x.type.remove(x,P,D,N,Be,z):ne&&(Q!==ri||w>0&&w&64)?Ae(ne,P,D,!1,!0):(Q===ri&&w&384||!N&&Ee&16)&&Ae(se,P,D),z&&pe(x)}(oe&&(ce=ee&&ee.onVnodeUnmounted)||k)&&Qt(()=>{ce&&Un(ce,P,x),k&&Ui(x,null,P,"unmounted")},D)},pe=x=>{const{type:P,el:D,anchor:z,transition:N}=x;if(P===ri){_e(D,z);return}if(P===Go){y(x);return}const Q=()=>{r(D),N&&!N.persisted&&N.afterLeave&&N.afterLeave()};if(x.shapeFlag&1&&N&&!N.persisted){const{leave:ee,delayLeave:$}=N,se=()=>ee(D,Q);$?$(x.el,Q,se):se()}else Q()},_e=(x,P)=>{let D;for(;x!==P;)D=f(x),r(x),x=D;r(P)},Se=(x,P,D)=>{const{bum:z,scope:N,update:Q,subTree:ee,um:$}=x;z&&zo(z),N.stop(),Q&&(Q.active=!1,q(ee,x,P,D)),$&&Qt($,P),Qt(()=>{x.isUnmounted=!0},P),P&&P.pendingBranch&&!P.isUnmounted&&x.asyncDep&&!x.asyncResolved&&x.suspenseId===P.pendingId&&(P.deps--,P.deps===0&&P.resolve())},Ae=(x,P,D,z=!1,N=!1,Q=0)=>{for(let ee=Q;ee<x.length;ee++)q(x[ee],P,D,z,N)},Re=x=>x.shapeFlag&6?Re(x.component.subTree):x.shapeFlag&128?x.suspense.next():f(x.anchor||x.el),Pe=(x,P,D)=>{x==null?P._vnode&&q(P._vnode,null,null,!0):v(P._vnode||null,x,P,null,null,null,D),Ol(),Hu(),P._vnode=x},Be={p:v,um:q,m:W,r:pe,mt:H,mc:U,pc:j,pbc:T,n:Re,o:n};let et,Ie;return e&&([et,Ie]=e(Be)),{render:Pe,hydrate:et,createApp:l4(Pe,et)}}function Oi({effect:n,update:e},t){n.allowRecurse=e.allowRecurse=t}function v4(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function rh(n,e,t=!1){const i=n.children,r=e.children;if(ke(i)&&ke(r))for(let s=0;s<i.length;s++){const o=i[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Ei(r[s]),a.el=o.el),t||rh(o,a)),a.type===Eo&&(a.el=o.el)}}function _4(n){const e=n.slice(),t=[0];let i,r,s,o,a;const l=n.length;for(i=0;i<l;i++){const c=n[i];if(c!==0){if(r=t[t.length-1],n[r]<c){e[i]=r,t.push(i);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,n[t[a]]<c?s=a+1:o=a;c<n[t[s]]&&(s>0&&(e[i]=t[s-1]),t[s]=i)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}const x4=n=>n.__isTeleport,ri=Symbol.for("v-fgt"),Eo=Symbol.for("v-txt"),Ir=Symbol.for("v-cmt"),Go=Symbol.for("v-stc"),yr=[];let Cn=null;function y4(n=!1){yr.push(Cn=n?null:[])}function M4(){yr.pop(),Cn=yr[yr.length-1]||null}let Dr=1;function Xl(n){Dr+=n}function S4(n){return n.dynamicChildren=Dr>0?Cn||R1:null,M4(),Dr>0&&Cn&&Cn.push(n),n}function E4(n,e,t,i,r,s){return S4(oh(n,e,t,i,r,s,!0))}function b4(n){return n?n.__v_isVNode===!0:!1}function sr(n,e){return n.type===e.type&&n.key===e.key}const bo="__vInternal",sh=({key:n})=>n??null,qs=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?Nt(n)||$t(n)||Ge(n)?{i:Vn,r:n,k:e,f:!!t}:n:null);function oh(n,e=null,t=null,i=0,r=null,s=n===ri?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&sh(e),ref:e&&qs(e),scopeId:Wu,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Vn};return a?(W2(l,t),s&128&&n.normalize(l)):t&&(l.shapeFlag|=Nt(t)?8:16),Dr>0&&!o&&Cn&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Cn.push(l),l}const qi=T4;function T4(n,e=null,t=null,i=0,r=null,s=!1){if((!n||n===kf)&&(n=Ir),b4(n)){const a=F1(n,e,!0);return t&&W2(a,t),Dr>0&&!s&&Cn&&(a.shapeFlag&6?Cn[Cn.indexOf(n)]=a:Cn.push(a)),a.patchFlag|=-2,a}if(N4(n)&&(n=n.__vccOpts),e){e=w4(e);let{class:a,style:l}=e;a&&!Nt(a)&&(e.class=L2(a)),At(l)&&(Nu(l)&&!ke(l)&&(l=Wt({},l)),e.style=P2(l))}const o=Nt(n)?1:Hf(n)?128:x4(n)?64:At(n)?4:Ge(n)?2:0;return oh(n,e,t,i,r,o,s,!0)}function w4(n){return n?Nu(n)||bo in n?Wt({},n):n:null}function F1(n,e,t=!1){const{props:i,ref:r,patchFlag:s,children:o}=n,a=e?C4(i||{},e):i;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:a,key:a&&sh(a),ref:e&&e.ref?t&&r?ke(r)?r.concat(qs(e)):[r,qs(e)]:qs(e):r,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:o,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==ri?s===-1?16:s|16:s,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&F1(n.ssContent),ssFallback:n.ssFallback&&F1(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce}}function A4(n=" ",e=0){return qi(Eo,null,n,e)}function Fn(n){return n==null||typeof n=="boolean"?qi(Ir):ke(n)?qi(ri,null,n.slice()):typeof n=="object"?Ei(n):qi(Eo,null,String(n))}function Ei(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:F1(n)}function W2(n,e){let t=0;const{shapeFlag:i}=n;if(e==null)e=null;else if(ke(e))t=16;else if(typeof e=="object")if(i&65){const r=e.default;r&&(r._c&&(r._d=!1),W2(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!(bo in e)?e._ctx=Vn:r===3&&Vn&&(Vn.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else Ge(e)?(e={default:e,_ctx:Vn},t=32):(e=String(e),i&64?(t=16,e=[A4(e)]):t=8);n.children=e,n.shapeFlag|=t}function C4(...n){const e={};for(let t=0;t<n.length;t++){const i=n[t];for(const r in i)if(r==="class")e.class!==i.class&&(e.class=L2([e.class,i.class]));else if(r==="style")e.style=P2([e.style,i.style]);else if(mo(r)){const s=e[r],o=i[r];o&&s!==o&&!(ke(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=i[r])}return e}function Un(n,e,t,i=null){Rn(n,e,7,[t,i])}const R4=Ju();let P4=0;function L4(n,e,t){const i=n.type,r=(e?e.appContext:n.appContext)||R4,s={uid:P4++,vnode:n,type:i,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new Z0(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:eh(i,r),emitsOptions:Gu(i,r),emit:null,emitted:null,propsDefaults:ht,inheritAttrs:i.inheritAttrs,ctx:ht,data:ht,props:ht,attrs:ht,slots:ht,refs:ht,setupState:ht,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=Uf.bind(null,s),n.ce&&n.ce(s),s}let Gt=null,X2,i1,jl="__VUE_INSTANCE_SETTERS__";(i1=ka()[jl])||(i1=ka()[jl]=[]),i1.push(n=>Gt=n),X2=n=>{i1.length>1?i1.forEach(e=>e(n)):i1[0](n)};const B1=n=>{X2(n),n.scope.on()},Yi=()=>{Gt&&Gt.scope.off(),X2(null)};function ah(n){return n.vnode.shapeFlag&4}let Ur=!1;function I4(n,e=!1){Ur=e;const{props:t,children:i}=n.vnode,r=ah(n);u4(n,t,r,e),d4(n,i);const s=r?D4(n,e):void 0;return Ur=!1,s}function D4(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=Fu(new Proxy(n.ctx,t4));const{setup:i}=t;if(i){const r=n.setupContext=i.length>1?O4(n):null;B1(n),Y1();const s=Ci(i,n,0,[n.props,r]);if(K1(),Yi(),Su(s)){if(s.then(Yi,Yi),e)return s.then(o=>{ql(n,o,e)}).catch(o=>{yo(o,n,0)});n.asyncDep=s}else ql(n,s,e)}else lh(n,e)}function ql(n,e,t){Ge(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:At(e)&&(n.setupState=Bu(e)),lh(n,t)}let Yl;function lh(n,e,t){const i=n.type;if(!n.render){if(!e&&Yl&&!i.render){const r=i.template||V2(n).template;if(r){const{isCustomElement:s,compilerOptions:o}=n.appContext.config,{delimiters:a,compilerOptions:l}=i,c=Wt(Wt({isCustomElement:s,delimiters:a},o),l);i.render=Yl(r,c)}}n.render=i.render||Gn}{B1(n),Y1();try{n4(n)}finally{K1(),Yi()}}}function U4(n){return n.attrsProxy||(n.attrsProxy=new Proxy(n.attrs,{get(e,t){return sn(n,"get","$attrs"),e[t]}}))}function O4(n){const e=t=>{n.exposed=t||{}};return{get attrs(){return U4(n)},slots:n.slots,emit:n.emit,expose:e}}function j2(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(Bu(Fu(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in xr)return xr[t](n)},has(e,t){return t in e||t in xr}}))}function N4(n){return Ge(n)&&"__vccOpts"in n}const F4=(n,e)=>Af(n,e,Ur),B4=Symbol.for("v-scx"),z4=()=>js(B4),k4="3.3.9",H4="http://www.w3.org/2000/svg",Gi=typeof document<"u"?document:null,Kl=Gi&&Gi.createElement("template"),V4={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,i)=>{const r=e?Gi.createElementNS(H4,n):Gi.createElement(n,t?{is:t}:void 0);return n==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:n=>Gi.createTextNode(n),createComment:n=>Gi.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>Gi.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,i,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{Kl.innerHTML=i?`<svg>${n}</svg>`:n;const a=Kl.content;if(i){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},G4=Symbol("_vtc");function W4(n,e,t){const i=n[G4];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const X4=Symbol("_vod");function j4(n,e,t){const i=n.style,r=Nt(t);if(t&&!r){if(e&&!Nt(e))for(const s in e)t[s]==null&&Ja(i,s,"");for(const s in t)Ja(i,s,t[s])}else{const s=i.display;r?e!==t&&(i.cssText=t):e&&n.removeAttribute("style"),X4 in n&&(i.display=s)}}const $l=/\s*!important$/;function Ja(n,e,t){if(ke(t))t.forEach(i=>Ja(n,e,i));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const i=q4(n,e);$l.test(t)?n.setProperty(q1(i),t.replace($l,""),"important"):n[i]=t}}const Zl=["Webkit","Moz","ms"],Wo={};function q4(n,e){const t=Wo[e];if(t)return t;let i=O1(e);if(i!=="filter"&&i in n)return Wo[e]=i;i=Eu(i);for(let r=0;r<Zl.length;r++){const s=Zl[r]+i;if(s in n)return Wo[e]=s}return e}const Jl="http://www.w3.org/1999/xlink";function Y4(n,e,t,i,r){if(i&&e.startsWith("xlink:"))t==null?n.removeAttributeNS(Jl,e.slice(6,e.length)):n.setAttributeNS(Jl,e,t);else{const s=$0(e);t==null||s&&!bu(t)?n.removeAttribute(e):n.setAttribute(e,s?"":t)}}function K4(n,e,t,i,r,s,o){if(e==="innerHTML"||e==="textContent"){i&&o(i,r,s),n[e]=t??"";return}const a=n.tagName;if(e==="value"&&a!=="PROGRESS"&&!a.includes("-")){n._value=t;const c=a==="OPTION"?n.getAttribute("value"):n.value,u=t??"";c!==u&&(n.value=u),t==null&&n.removeAttribute(e);return}let l=!1;if(t===""||t==null){const c=typeof n[e];c==="boolean"?t=bu(t):t==null&&c==="string"?(t="",l=!0):c==="number"&&(t=0,l=!0)}try{n[e]=t}catch{}l&&n.removeAttribute(e)}function $4(n,e,t,i){n.addEventListener(e,t,i)}function Z4(n,e,t,i){n.removeEventListener(e,t,i)}const Ql=Symbol("_vei");function J4(n,e,t,i,r=null){const s=n[Ql]||(n[Ql]={}),o=s[e];if(i&&o)o.value=i;else{const[a,l]=Q4(e);if(i){const c=s[e]=nd(i,r);$4(n,a,c,l)}else o&&(Z4(n,a,o,l),s[e]=void 0)}}const ec=/(?:Once|Passive|Capture)$/;function Q4(n){let e;if(ec.test(n)){e={};let i;for(;i=n.match(ec);)n=n.slice(0,n.length-i[0].length),e[i[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):q1(n.slice(2)),e]}let Xo=0;const ed=Promise.resolve(),td=()=>Xo||(ed.then(()=>Xo=0),Xo=Date.now());function nd(n,e){const t=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=t.attached)return;Rn(id(i,t.value),e,5,[i])};return t.value=n,t.attached=td(),t}function id(n,e){if(ke(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(i=>r=>!r._stopped&&i&&i(r))}else return e}const tc=/^on[a-z]/,rd=(n,e,t,i,r=!1,s,o,a,l)=>{e==="class"?W4(n,i,r):e==="style"?j4(n,t,i):mo(e)?A2(e)||J4(n,e,t,i,o):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):sd(n,e,i,r))?K4(n,e,i,s,o,a,l):(e==="true-value"?n._trueValue=i:e==="false-value"&&(n._falseValue=i),Y4(n,e,i,r))};function sd(n,e,t,i){return i?!!(e==="innerHTML"||e==="textContent"||e in n&&tc.test(e)&&Ge(t)):e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA"||tc.test(e)&&Nt(t)?!1:e in n}const od=Wt({patchProp:rd},V4);let nc;function ad(){return nc||(nc=m4(od))}const ld=(...n)=>{const e=ad().createApp(...n),{mount:t}=e;return e.mount=i=>{const r=cd(i);if(!r)return;const s=e._component;!Ge(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.innerHTML="";const o=t(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e};function cd(n){return Nt(n)?document.querySelector(n):n}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const $1="156",r1={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},s1={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ud=0,ic=1,hd=2,ch=1,uh=2,ni=3,hi=0,Zt=1,tn=2,Pn=0,I1=1,to=2,rc=3,sc=4,fd=5,b1=100,dd=101,pd=102,oc=103,ac=104,md=200,gd=201,vd=202,_d=203,hh=204,fh=205,xd=206,yd=207,Md=208,Sd=209,Ed=210,bd=0,Td=1,wd=2,Qa=3,Ad=4,Cd=5,Rd=6,Pd=7,To=0,Ld=1,Id=2,Ri=0,dh=1,ph=2,mh=3,gh=4,Dd=5,vh=300,z1=301,k1=302,no=303,e2=304,wo=306,H1=1e3,hn=1001,t2=1002,Ut=1003,lc=1004,jo=1005,en=1006,Ud=1007,Or=1008,Pi=1009,Od=1010,Nd=1011,q2=1012,_h=1013,bi=1014,oi=1015,Nr=1016,xh=1017,yh=1018,Ki=1020,Fd=1021,fn=1023,Bd=1024,zd=1025,$i=1026,V1=1027,kd=1028,Mh=1029,Hd=1030,Sh=1031,Eh=1033,qo=33776,Yo=33777,Ko=33778,$o=33779,cc=35840,uc=35841,hc=35842,fc=35843,Vd=36196,dc=37492,pc=37496,mc=37808,gc=37809,vc=37810,_c=37811,xc=37812,yc=37813,Mc=37814,Sc=37815,Ec=37816,bc=37817,Tc=37818,wc=37819,Ac=37820,Cc=37821,Zo=36492,Rc=36494,Pc=36495,Gd=36283,Lc=36284,Ic=36285,Dc=36286,io=2300,ro=2301,Jo=2302,Uc=2400,Oc=2401,Nc=2402,Wd=2500,bh=3e3,Zi=3001,Xd=3200,Th=3201,Ao=0,jd=1,Ji="",ot="srgb",Wn="srgb-linear",Co="display-p3",Qo=7680,qd=519,Yd=512,Kd=513,$d=514,Zd=515,Jd=516,Qd=517,e5=518,t5=519,n2=35044,Fc="300 es",i2=1035,ai=2e3,so=2001;class t1{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Ft=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Bc=1234567;const Mr=Math.PI/180,G1=180/Math.PI;function _n(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ft[n&255]+Ft[n>>8&255]+Ft[n>>16&255]+Ft[n>>24&255]+"-"+Ft[e&255]+Ft[e>>8&255]+"-"+Ft[e>>16&15|64]+Ft[e>>24&255]+"-"+Ft[t&63|128]+Ft[t>>8&255]+"-"+Ft[t>>16&255]+Ft[t>>24&255]+Ft[i&255]+Ft[i>>8&255]+Ft[i>>16&255]+Ft[i>>24&255]).toLowerCase()}function wt(n,e,t){return Math.max(e,Math.min(t,n))}function Y2(n,e){return(n%e+e)%e}function n5(n,e,t,i,r){return i+(n-e)*(r-i)/(t-e)}function i5(n,e,t){return n!==e?(t-n)/(e-n):0}function Sr(n,e,t){return(1-t)*n+t*e}function r5(n,e,t,i){return Sr(n,e,1-Math.exp(-t*i))}function s5(n,e=1){return e-Math.abs(Y2(n,e*2)-e)}function o5(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))}function a5(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))}function l5(n,e){return n+Math.floor(Math.random()*(e-n+1))}function c5(n,e){return n+Math.random()*(e-n)}function u5(n){return n*(.5-Math.random())}function h5(n){n!==void 0&&(Bc=n);let e=Bc+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function f5(n){return n*Mr}function d5(n){return n*G1}function r2(n){return(n&n-1)===0&&n!==0}function wh(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function oo(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function p5(n,e,t,i,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),f=o((e-i)/2),d=s((i-e)/2),g=o((i-e)/2);switch(r){case"XYX":n.set(a*u,l*h,l*f,a*c);break;case"YZY":n.set(l*f,a*u,l*h,a*c);break;case"ZXZ":n.set(l*h,l*f,a*u,a*c);break;case"XZX":n.set(a*u,l*g,l*d,a*c);break;case"YXY":n.set(l*d,a*u,l*g,a*c);break;case"ZYZ":n.set(l*g,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function kn(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function it(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const nn={DEG2RAD:Mr,RAD2DEG:G1,generateUUID:_n,clamp:wt,euclideanModulo:Y2,mapLinear:n5,inverseLerp:i5,lerp:Sr,damp:r5,pingpong:s5,smoothstep:o5,smootherstep:a5,randInt:l5,randFloat:c5,randFloatSpread:u5,seededRandom:h5,degToRad:f5,radToDeg:d5,isPowerOfTwo:r2,ceilPowerOfTwo:wh,floorPowerOfTwo:oo,setQuaternionFromProperEuler:p5,normalize:it,denormalize:kn};class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(wt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ve{constructor(e,t,i,r,s,o,a,l,c){Ve.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,c)}set(e,t,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],f=i[2],d=i[5],g=i[8],v=r[0],m=r[3],p=r[6],S=r[1],_=r[4],y=r[7],b=r[2],C=r[5],A=r[8];return s[0]=o*v+a*S+l*b,s[3]=o*m+a*_+l*C,s[6]=o*p+a*y+l*A,s[1]=c*v+u*S+h*b,s[4]=c*m+u*_+h*C,s[7]=c*p+u*y+h*A,s[2]=f*v+d*S+g*b,s[5]=f*m+d*_+g*C,s[8]=f*p+d*y+g*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,g=t*h+i*f+r*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/g;return e[0]=h*v,e[1]=(r*c-u*i)*v,e[2]=(a*i-r*o)*v,e[3]=f*v,e[4]=(u*t-r*l)*v,e[5]=(r*s-a*t)*v,e[6]=d*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(ea.makeScale(e,t)),this}rotate(e){return this.premultiply(ea.makeRotation(-e)),this}translate(e,t){return this.premultiply(ea.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const ea=new Ve;function Ah(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function Fr(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function m5(){const n=Fr("canvas");return n.style.display="block",n}const zc={};function Er(n){n in zc||(zc[n]=!0,console.warn(n))}function D1(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function ta(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const g5=new Ve().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),v5=new Ve().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function _5(n){return n.convertSRGBToLinear().applyMatrix3(v5)}function x5(n){return n.applyMatrix3(g5).convertLinearToSRGB()}const y5={[Wn]:n=>n,[ot]:n=>n.convertSRGBToLinear(),[Co]:_5},M5={[Wn]:n=>n,[ot]:n=>n.convertLinearToSRGB(),[Co]:x5},yn={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!n},get workingColorSpace(){return Wn},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const i=y5[e],r=M5[t];if(i===void 0||r===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return r(i(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}};let o1;class Ch{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{o1===void 0&&(o1=Fr("canvas")),o1.width=e.width,o1.height=e.height;const i=o1.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=o1}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Fr("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=D1(s[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(D1(t[i]/255)*255):t[i]=D1(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let S5=0;class Rh{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:S5++}),this.uuid=_n(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(na(r[o].image)):s.push(na(r[o]))}else s=na(r);i.url=s}return t||(e.images[this.uuid]=i),i}}function na(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?Ch.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let E5=0;class Ot extends t1{constructor(e=Ot.DEFAULT_IMAGE,t=Ot.DEFAULT_MAPPING,i=hn,r=hn,s=en,o=Or,a=fn,l=Pi,c=Ot.DEFAULT_ANISOTROPY,u=Ji){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:E5++}),this.uuid=_n(),this.name="",this.source=new Rh(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ve,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(Er("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===Zi?ot:Ji),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==vh)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case H1:e.x=e.x-Math.floor(e.x);break;case hn:e.x=e.x<0?0:1;break;case t2:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case H1:e.y=e.y-Math.floor(e.y);break;case hn:e.y=e.y<0?0:1;break;case t2:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Er("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ot?Zi:bh}set encoding(e){Er("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Zi?ot:Ji}}Ot.DEFAULT_IMAGE=null;Ot.DEFAULT_MAPPING=vh;Ot.DEFAULT_ANISOTROPY=1;class Ye{constructor(e=0,t=0,i=0,r=1){Ye.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],g=l[9],v=l[2],m=l[6],p=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-v)<.01&&Math.abs(g-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+v)<.1&&Math.abs(g+m)<.1&&Math.abs(c+d+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,y=(d+1)/2,b=(p+1)/2,C=(u+f)/4,A=(h+v)/4,U=(g+m)/4;return _>y&&_>b?_<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(_),r=C/i,s=A/i):y>b?y<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(y),i=C/r,s=U/r):b<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(b),i=A/s,r=U/s),this.set(i,r,s,t),this}let S=Math.sqrt((m-g)*(m-g)+(h-v)*(h-v)+(f-u)*(f-u));return Math.abs(S)<.001&&(S=1),this.x=(m-g)/S,this.y=(h-v)/S,this.z=(f-u)/S,this.w=Math.acos((c+d+p-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class b5 extends t1{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ye(0,0,e,t),this.scissorTest=!1,this.viewport=new Ye(0,0,e,t);const r={width:e,height:t,depth:1};i.encoding!==void 0&&(Er("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===Zi?ot:Ji),this.texture=new Ot(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:en,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Rh(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class kt extends b5{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class Ph extends Ot{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Ut,this.minFilter=Ut,this.wrapR=hn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class T5 extends Ot{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=Ut,this.minFilter=Ut,this.wrapR=hn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class vn{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const f=s[o+0],d=s[o+1],g=s[o+2],v=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=g,e[t+3]=v;return}if(h!==v||l!==f||c!==d||u!==g){let m=1-a;const p=l*f+c*d+u*g+h*v,S=p>=0?1:-1,_=1-p*p;if(_>Number.EPSILON){const b=Math.sqrt(_),C=Math.atan2(b,p*S);m=Math.sin(m*C)/b,a=Math.sin(a*C)/b}const y=a*S;if(l=l*m+f*y,c=c*m+d*y,u=u*m+g*y,h=h*m+v*y,m===1-a){const b=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=b,c*=b,u*=b,h*=b}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=s[o],f=s[o+1],d=s[o+2],g=s[o+3];return e[t]=a*g+u*h+l*d-c*f,e[t+1]=l*g+u*f+c*h-a*d,e[t+2]=c*g+u*d+a*f-l*h,e[t+3]=u*g-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),h=a(s/2),f=l(i/2),d=l(r/2),g=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*g,this._y=c*d*h-f*u*g,this._z=c*u*g+f*d*h,this._w=c*u*h-f*d*g;break;case"YXZ":this._x=f*u*h+c*d*g,this._y=c*d*h-f*u*g,this._z=c*u*g-f*d*h,this._w=c*u*h+f*d*g;break;case"ZXY":this._x=f*u*h-c*d*g,this._y=c*d*h+f*u*g,this._z=c*u*g+f*d*h,this._w=c*u*h-f*d*g;break;case"ZYX":this._x=f*u*h-c*d*g,this._y=c*d*h+f*u*g,this._z=c*u*g-f*d*h,this._w=c*u*h+f*d*g;break;case"YZX":this._x=f*u*h+c*d*g,this._y=c*d*h+f*u*g,this._z=c*u*g-f*d*h,this._w=c*u*h-f*d*g;break;case"XZY":this._x=f*u*h-c*d*g,this._y=c*d*h-f*u*g,this._z=c*u*g+f*d*h,this._w=c*u*h+f*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=i+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(i>a&&i>h){const d=2*Math.sqrt(1+i-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-i-h);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-i-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*i+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=i*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(s),i*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(e=0,t=0,i=0){L.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(kc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(kc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*r,this.y=s[1]*t+s[4]*i+s[7]*r,this.z=s[2]*t+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*i,u=l*i+a*t-s*r,h=l*r+s*i-o*t,f=-s*t-o*i-a*r;return this.x=c*l+f*-s+u*-a-h*-o,this.y=u*l+f*-o+h*-s-c*-a,this.z=h*l+f*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*r,this.y=s[1]*t+s[5]*i+s[9]*r,this.z=s[2]*t+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return ia.copy(this).projectOnVector(e),this.sub(ia)}reflect(e){return this.sub(ia.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(wt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ia=new L,kc=new vn;class jn{constructor(e=new L(1/0,1/0,1/0),t=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint($n.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint($n.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=$n.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),a1.copy(e.boundingBox),a1.applyMatrix4(e.matrixWorld),this.union(a1);else{const r=e.geometry;if(r!==void 0)if(t&&r.attributes!==void 0&&r.attributes.position!==void 0){const s=r.attributes.position;for(let o=0,a=s.count;o<a;o++)$n.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint($n)}else r.boundingBox===null&&r.computeBoundingBox(),a1.copy(r.boundingBox),a1.applyMatrix4(e.matrixWorld),this.union(a1)}const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,$n),$n.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(or),ss.subVectors(this.max,or),l1.subVectors(e.a,or),c1.subVectors(e.b,or),u1.subVectors(e.c,or),vi.subVectors(c1,l1),_i.subVectors(u1,c1),Ni.subVectors(l1,u1);let t=[0,-vi.z,vi.y,0,-_i.z,_i.y,0,-Ni.z,Ni.y,vi.z,0,-vi.x,_i.z,0,-_i.x,Ni.z,0,-Ni.x,-vi.y,vi.x,0,-_i.y,_i.x,0,-Ni.y,Ni.x,0];return!ra(t,l1,c1,u1,ss)||(t=[1,0,0,0,1,0,0,0,1],!ra(t,l1,c1,u1,ss))?!1:(os.crossVectors(vi,_i),t=[os.x,os.y,os.z],ra(t,l1,c1,u1,ss))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,$n).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize($n).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Kn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Kn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Kn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Kn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Kn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Kn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Kn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Kn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Kn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Kn=[new L,new L,new L,new L,new L,new L,new L,new L],$n=new L,a1=new jn,l1=new L,c1=new L,u1=new L,vi=new L,_i=new L,Ni=new L,or=new L,ss=new L,os=new L,Fi=new L;function ra(n,e,t,i,r){for(let s=0,o=n.length-3;s<=o;s+=3){Fi.fromArray(n,s);const a=r.x*Math.abs(Fi.x)+r.y*Math.abs(Fi.y)+r.z*Math.abs(Fi.z),l=e.dot(Fi),c=t.dot(Fi),u=i.dot(Fi);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const w5=new jn,ar=new L,sa=new L;class pi{constructor(e=new L,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):w5.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ar.subVectors(e,this.center);const t=ar.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.addScaledVector(ar,r/i),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(sa.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ar.copy(e.center).add(sa)),this.expandByPoint(ar.copy(e.center).sub(sa))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Zn=new L,oa=new L,as=new L,xi=new L,aa=new L,ls=new L,la=new L;class Z1{constructor(e=new L,t=new L(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Zn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Zn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Zn.copy(this.origin).addScaledVector(this.direction,t),Zn.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){oa.copy(e).add(t).multiplyScalar(.5),as.copy(t).sub(e).normalize(),xi.copy(this.origin).sub(oa);const s=e.distanceTo(t)*.5,o=-this.direction.dot(as),a=xi.dot(this.direction),l=-xi.dot(as),c=xi.lengthSq(),u=Math.abs(1-o*o);let h,f,d,g;if(u>0)if(h=o*l-a,f=o*a-l,g=s*u,h>=0)if(f>=-g)if(f<=g){const v=1/u;h*=v,f*=v,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-g?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=g?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(oa).addScaledVector(as,f),d}intersectSphere(e,t){Zn.subVectors(e.center,this.origin);const i=Zn.dot(this.direction),r=Zn.dot(Zn)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),i>o||s>r||((s>i||isNaN(i))&&(i=s),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Zn)!==null}intersectTriangle(e,t,i,r,s){aa.subVectors(t,e),ls.subVectors(i,e),la.crossVectors(aa,ls);let o=this.direction.dot(la),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;xi.subVectors(this.origin,e);const l=a*this.direction.dot(ls.crossVectors(xi,ls));if(l<0)return null;const c=a*this.direction.dot(aa.cross(xi));if(c<0||l+c>o)return null;const u=-a*xi.dot(la);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Le{constructor(e,t,i,r,s,o,a,l,c,u,h,f,d,g,v,m){Le.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,r,s,o,a,l,c,u,h,f,d,g,v,m)}set(e,t,i,r,s,o,a,l,c,u,h,f,d,g,v,m){const p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=r,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=u,p[10]=h,p[14]=f,p[3]=d,p[7]=g,p[11]=v,p[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Le().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/h1.setFromMatrixColumn(e,0).length(),s=1/h1.setFromMatrixColumn(e,1).length(),o=1/h1.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,g=a*u,v=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+g*c,t[5]=f-v*c,t[9]=-a*l,t[2]=v-f*c,t[6]=g+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,g=c*u,v=c*h;t[0]=f+v*a,t[4]=g*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-g,t[6]=v+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,g=c*u,v=c*h;t[0]=f-v*a,t[4]=-o*h,t[8]=g+d*a,t[1]=d+g*a,t[5]=o*u,t[9]=v-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,g=a*u,v=a*h;t[0]=l*u,t[4]=g*c-d,t[8]=f*c+v,t[1]=l*h,t[5]=v*c+f,t[9]=d*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,g=a*l,v=a*c;t[0]=l*u,t[4]=v-f*h,t[8]=g*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+g,t[10]=f-v*h}else if(e.order==="XZY"){const f=o*l,d=o*c,g=a*l,v=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+v,t[5]=o*u,t[9]=d*h-g,t[2]=g*h-d,t[6]=a*u,t[10]=v*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(A5,e,C5)}lookAt(e,t,i){const r=this.elements;return ln.subVectors(e,t),ln.lengthSq()===0&&(ln.z=1),ln.normalize(),yi.crossVectors(i,ln),yi.lengthSq()===0&&(Math.abs(i.z)===1?ln.x+=1e-4:ln.z+=1e-4,ln.normalize(),yi.crossVectors(i,ln)),yi.normalize(),cs.crossVectors(ln,yi),r[0]=yi.x,r[4]=cs.x,r[8]=ln.x,r[1]=yi.y,r[5]=cs.y,r[9]=ln.y,r[2]=yi.z,r[6]=cs.z,r[10]=ln.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],f=i[9],d=i[13],g=i[2],v=i[6],m=i[10],p=i[14],S=i[3],_=i[7],y=i[11],b=i[15],C=r[0],A=r[4],U=r[8],E=r[12],T=r[1],G=r[5],Y=r[9],B=r[13],H=r[2],I=r[6],V=r[10],X=r[14],j=r[3],ie=r[7],re=r[11],W=r[15];return s[0]=o*C+a*T+l*H+c*j,s[4]=o*A+a*G+l*I+c*ie,s[8]=o*U+a*Y+l*V+c*re,s[12]=o*E+a*B+l*X+c*W,s[1]=u*C+h*T+f*H+d*j,s[5]=u*A+h*G+f*I+d*ie,s[9]=u*U+h*Y+f*V+d*re,s[13]=u*E+h*B+f*X+d*W,s[2]=g*C+v*T+m*H+p*j,s[6]=g*A+v*G+m*I+p*ie,s[10]=g*U+v*Y+m*V+p*re,s[14]=g*E+v*B+m*X+p*W,s[3]=S*C+_*T+y*H+b*j,s[7]=S*A+_*G+y*I+b*ie,s[11]=S*U+_*Y+y*V+b*re,s[15]=S*E+_*B+y*X+b*W,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],g=e[3],v=e[7],m=e[11],p=e[15];return g*(+s*l*h-r*c*h-s*a*f+i*c*f+r*a*d-i*l*d)+v*(+t*l*d-t*c*f+s*o*f-r*o*d+r*c*u-s*l*u)+m*(+t*c*h-t*a*d-s*o*h+i*o*d+s*a*u-i*c*u)+p*(-r*a*u-t*l*h+t*a*f+r*o*h-i*o*f+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],g=e[12],v=e[13],m=e[14],p=e[15],S=h*m*c-v*f*c+v*l*d-a*m*d-h*l*p+a*f*p,_=g*f*c-u*m*c-g*l*d+o*m*d+u*l*p-o*f*p,y=u*v*c-g*h*c+g*a*d-o*v*d-u*a*p+o*h*p,b=g*h*l-u*v*l-g*a*f+o*v*f+u*a*m-o*h*m,C=t*S+i*_+r*y+s*b;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/C;return e[0]=S*A,e[1]=(v*f*s-h*m*s-v*r*d+i*m*d+h*r*p-i*f*p)*A,e[2]=(a*m*s-v*l*s+v*r*c-i*m*c-a*r*p+i*l*p)*A,e[3]=(h*l*s-a*f*s-h*r*c+i*f*c+a*r*d-i*l*d)*A,e[4]=_*A,e[5]=(u*m*s-g*f*s+g*r*d-t*m*d-u*r*p+t*f*p)*A,e[6]=(g*l*s-o*m*s-g*r*c+t*m*c+o*r*p-t*l*p)*A,e[7]=(o*f*s-u*l*s+u*r*c-t*f*c-o*r*d+t*l*d)*A,e[8]=y*A,e[9]=(g*h*s-u*v*s-g*i*d+t*v*d+u*i*p-t*h*p)*A,e[10]=(o*v*s-g*a*s+g*i*c-t*v*c-o*i*p+t*a*p)*A,e[11]=(u*a*s-o*h*s-u*i*c+t*h*c+o*i*d-t*a*d)*A,e[12]=b*A,e[13]=(u*v*r-g*h*r+g*i*f-t*v*f-u*i*m+t*h*m)*A,e[14]=(g*a*r-o*v*r-g*i*l+t*v*l+o*i*m-t*a*m)*A,e[15]=(o*h*r-u*a*r+u*i*l-t*h*l-o*i*f+t*a*f)*A,this}scale(e){const t=this.elements,i=e.x,r=e.y,s=e.z;return t[0]*=i,t[4]*=r,t[8]*=s,t[1]*=i,t[5]*=r,t[9]*=s,t[2]*=i,t[6]*=r,t[10]*=s,t[3]*=i,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,s,o){return this.set(1,i,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,g=s*h,v=o*u,m=o*h,p=a*h,S=l*c,_=l*u,y=l*h,b=i.x,C=i.y,A=i.z;return r[0]=(1-(v+p))*b,r[1]=(d+y)*b,r[2]=(g-_)*b,r[3]=0,r[4]=(d-y)*C,r[5]=(1-(f+p))*C,r[6]=(m+S)*C,r[7]=0,r[8]=(g+_)*A,r[9]=(m-S)*A,r[10]=(1-(f+v))*A,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let s=h1.set(r[0],r[1],r[2]).length();const o=h1.set(r[4],r[5],r[6]).length(),a=h1.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Mn.copy(this);const c=1/s,u=1/o,h=1/a;return Mn.elements[0]*=c,Mn.elements[1]*=c,Mn.elements[2]*=c,Mn.elements[4]*=u,Mn.elements[5]*=u,Mn.elements[6]*=u,Mn.elements[8]*=h,Mn.elements[9]*=h,Mn.elements[10]*=h,t.setFromRotationMatrix(Mn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,r,s,o,a=ai){const l=this.elements,c=2*s/(t-e),u=2*s/(i-r),h=(t+e)/(t-e),f=(i+r)/(i-r);let d,g;if(a===ai)d=-(o+s)/(o-s),g=-2*o*s/(o-s);else if(a===so)d=-o/(o-s),g=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=g,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,r,s,o,a=ai){const l=this.elements,c=1/(t-e),u=1/(i-r),h=1/(o-s),f=(t+e)*c,d=(i+r)*u;let g,v;if(a===ai)g=(o+s)*h,v=-2*h;else if(a===so)g=s*h,v=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=v,l[14]=-g,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const h1=new L,Mn=new Le,A5=new L(0,0,0),C5=new L(1,1,1),yi=new L,cs=new L,ln=new L,Hc=new Le,Vc=new vn;class li{constructor(e=0,t=0,i=0,r=li.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(wt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-wt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(wt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-wt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(wt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-wt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Hc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Hc,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Vc.setFromEuler(this),this.setFromQuaternion(Vc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}li.DEFAULT_ORDER="XYZ";class K2{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let R5=0;const Gc=new L,f1=new vn,Jn=new Le,us=new L,lr=new L,P5=new L,L5=new vn,Wc=new L(1,0,0),Xc=new L(0,1,0),jc=new L(0,0,1),I5={type:"added"},D5={type:"removed"};class lt extends t1{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:R5++}),this.uuid=_n(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=lt.DEFAULT_UP.clone();const e=new L,t=new li,i=new vn,r=new L(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Le},normalMatrix:{value:new Ve}}),this.matrix=new Le,this.matrixWorld=new Le,this.matrixAutoUpdate=lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new K2,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return f1.setFromAxisAngle(e,t),this.quaternion.multiply(f1),this}rotateOnWorldAxis(e,t){return f1.setFromAxisAngle(e,t),this.quaternion.premultiply(f1),this}rotateX(e){return this.rotateOnAxis(Wc,e)}rotateY(e){return this.rotateOnAxis(Xc,e)}rotateZ(e){return this.rotateOnAxis(jc,e)}translateOnAxis(e,t){return Gc.copy(e).applyQuaternion(this.quaternion),this.position.add(Gc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Wc,e)}translateY(e){return this.translateOnAxis(Xc,e)}translateZ(e){return this.translateOnAxis(jc,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Jn.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?us.copy(e):us.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),lr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Jn.lookAt(lr,us,this.up):Jn.lookAt(us,lr,this.up),this.quaternion.setFromRotationMatrix(Jn),r&&(Jn.extractRotation(r.matrixWorld),f1.setFromRotationMatrix(Jn),this.quaternion.premultiply(f1.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(I5)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(D5)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Jn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Jn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Jn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let i=[];this[e]===t&&i.push(this);for(let r=0,s=this.children.length;r<s;r++){const o=this.children[r].getObjectsByProperty(e,t);o.length>0&&(i=i.concat(o))}return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lr,e,P5),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lr,L5,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const s=t[i];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++){const a=r[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),g=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),f.length>0&&(i.skeletons=f),d.length>0&&(i.animations=d),g.length>0&&(i.nodes=g)}return i.object=r,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}lt.DEFAULT_UP=new L(0,1,0);lt.DEFAULT_MATRIX_AUTO_UPDATE=!0;lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Sn=new L,Qn=new L,ca=new L,ei=new L,d1=new L,p1=new L,qc=new L,ua=new L,ha=new L,fa=new L;let hs=!1;class wn{constructor(e=new L,t=new L,i=new L){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),Sn.subVectors(e,t),r.cross(Sn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,i,r,s){Sn.subVectors(r,t),Qn.subVectors(i,t),ca.subVectors(e,t);const o=Sn.dot(Sn),a=Sn.dot(Qn),l=Sn.dot(ca),c=Qn.dot(Qn),u=Qn.dot(ca),h=o*c-a*a;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,g=(o*u-a*l)*f;return s.set(1-d-g,g,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,ei),ei.x>=0&&ei.y>=0&&ei.x+ei.y<=1}static getUV(e,t,i,r,s,o,a,l){return hs===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),hs=!0),this.getInterpolation(e,t,i,r,s,o,a,l)}static getInterpolation(e,t,i,r,s,o,a,l){return this.getBarycoord(e,t,i,r,ei),l.setScalar(0),l.addScaledVector(s,ei.x),l.addScaledVector(o,ei.y),l.addScaledVector(a,ei.z),l}static isFrontFacing(e,t,i,r){return Sn.subVectors(i,t),Qn.subVectors(e,t),Sn.cross(Qn).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Sn.subVectors(this.c,this.b),Qn.subVectors(this.a,this.b),Sn.cross(Qn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return wn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return wn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,s){return hs===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),hs=!0),wn.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}getInterpolation(e,t,i,r,s){return wn.getInterpolation(e,this.a,this.b,this.c,t,i,r,s)}containsPoint(e){return wn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return wn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,s=this.c;let o,a;d1.subVectors(r,i),p1.subVectors(s,i),ua.subVectors(e,i);const l=d1.dot(ua),c=p1.dot(ua);if(l<=0&&c<=0)return t.copy(i);ha.subVectors(e,r);const u=d1.dot(ha),h=p1.dot(ha);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(d1,o);fa.subVectors(e,s);const d=d1.dot(fa),g=p1.dot(fa);if(g>=0&&d<=g)return t.copy(s);const v=d*c-l*g;if(v<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(i).addScaledVector(p1,a);const m=u*g-d*h;if(m<=0&&h-u>=0&&d-g>=0)return qc.subVectors(s,r),a=(h-u)/(h-u+(d-g)),t.copy(r).addScaledVector(qc,a);const p=1/(m+v+f);return o=v*p,a=f*p,t.copy(i).addScaledVector(d1,o).addScaledVector(p1,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let U5=0;class mi extends t1{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:U5++}),this.uuid=_n(),this.name="",this.type="Material",this.blending=I1,this.side=hi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=hh,this.blendDst=fh,this.blendEquation=b1,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Qa,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=qd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Qo,this.stencilZFail=Qo,this.stencilZPass=Qo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==I1&&(i.blending=this.blending),this.side!==hi&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(i.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let s=0;s!==r;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Lh={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},En={h:0,s:0,l:0},fs={h:0,s:0,l:0};function da(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class we{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ot){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,yn.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=yn.workingColorSpace){return this.r=e,this.g=t,this.b=i,yn.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=yn.workingColorSpace){if(e=Y2(e,1),t=wt(t,0,1),i=wt(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=da(o,s,e+1/3),this.g=da(o,s,e),this.b=da(o,s,e-1/3)}return yn.toWorkingColorSpace(this,r),this}setStyle(e,t=ot){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ot){const i=Lh[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=D1(e.r),this.g=D1(e.g),this.b=D1(e.b),this}copyLinearToSRGB(e){return this.r=ta(e.r),this.g=ta(e.g),this.b=ta(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ot){return yn.fromWorkingColorSpace(Bt.copy(this),e),Math.round(wt(Bt.r*255,0,255))*65536+Math.round(wt(Bt.g*255,0,255))*256+Math.round(wt(Bt.b*255,0,255))}getHexString(e=ot){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=yn.workingColorSpace){yn.fromWorkingColorSpace(Bt.copy(this),t);const i=Bt.r,r=Bt.g,s=Bt.b,o=Math.max(i,r,s),a=Math.min(i,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case i:l=(r-s)/h+(r<s?6:0);break;case r:l=(s-i)/h+2;break;case s:l=(i-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=yn.workingColorSpace){return yn.fromWorkingColorSpace(Bt.copy(this),t),e.r=Bt.r,e.g=Bt.g,e.b=Bt.b,e}getStyle(e=ot){yn.fromWorkingColorSpace(Bt.copy(this),e);const t=Bt.r,i=Bt.g,r=Bt.b;return e!==ot?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(e,t,i){return this.getHSL(En),En.h+=e,En.s+=t,En.l+=i,this.setHSL(En.h,En.s,En.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(En),e.getHSL(fs);const i=Sr(En.h,fs.h,t),r=Sr(En.s,fs.s,t),s=Sr(En.l,fs.l,t);return this.setHSL(i,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*r,this.g=s[1]*t+s[4]*i+s[7]*r,this.b=s[2]*t+s[5]*i+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Bt=new we;we.NAMES=Lh;class ao extends mi{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new we(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=To,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const bt=new L,ds=new fe;class Ln{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=n2,this.updateRange={offset:0,count:-1},this.gpuType=oi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)ds.fromBufferAttribute(this,t),ds.applyMatrix3(e),this.setXY(t,ds.x,ds.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix3(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix4(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)bt.fromBufferAttribute(this,t),bt.applyNormalMatrix(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)bt.fromBufferAttribute(this,t),bt.transformDirection(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=kn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=it(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=kn(t,this.array)),t}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=kn(t,this.array)),t}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=kn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=kn(t,this.array)),t}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),r=it(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),r=it(r,this.array),s=it(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==n2&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class $2 extends Ln{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Ih extends Ln{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class rt extends Ln{constructor(e,t,i){super(new Float32Array(e),t,i)}}let O5=0;const pn=new Le,pa=new lt,m1=new L,cn=new jn,cr=new jn,Lt=new L;class Mt extends t1{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:O5++}),this.uuid=_n(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ah(e)?Ih:$2)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Ve().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return pn.makeRotationFromQuaternion(e),this.applyMatrix4(pn),this}rotateX(e){return pn.makeRotationX(e),this.applyMatrix4(pn),this}rotateY(e){return pn.makeRotationY(e),this.applyMatrix4(pn),this}rotateZ(e){return pn.makeRotationZ(e),this.applyMatrix4(pn),this}translate(e,t,i){return pn.makeTranslation(e,t,i),this.applyMatrix4(pn),this}scale(e,t,i){return pn.makeScale(e,t,i),this.applyMatrix4(pn),this}lookAt(e){return pa.lookAt(e),pa.updateMatrix(),this.applyMatrix4(pa.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(m1).negate(),this.translate(m1.x,m1.y,m1.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const s=e[i];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new rt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new jn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const s=t[i];cn.setFromBufferAttribute(s),this.morphTargetsRelative?(Lt.addVectors(this.boundingBox.min,cn.min),this.boundingBox.expandByPoint(Lt),Lt.addVectors(this.boundingBox.max,cn.max),this.boundingBox.expandByPoint(Lt)):(this.boundingBox.expandByPoint(cn.min),this.boundingBox.expandByPoint(cn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new pi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new L,1/0);return}if(e){const i=this.boundingSphere.center;if(cn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];cr.setFromBufferAttribute(a),this.morphTargetsRelative?(Lt.addVectors(cn.min,cr.min),cn.expandByPoint(Lt),Lt.addVectors(cn.max,cr.max),cn.expandByPoint(Lt)):(cn.expandByPoint(cr.min),cn.expandByPoint(cr.max))}cn.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)Lt.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(Lt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Lt.fromBufferAttribute(a,c),l&&(m1.fromBufferAttribute(e,c),Lt.add(m1)),r=Math.max(r,i.distanceToSquared(Lt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ln(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let T=0;T<a;T++)c[T]=new L,u[T]=new L;const h=new L,f=new L,d=new L,g=new fe,v=new fe,m=new fe,p=new L,S=new L;function _(T,G,Y){h.fromArray(r,T*3),f.fromArray(r,G*3),d.fromArray(r,Y*3),g.fromArray(o,T*2),v.fromArray(o,G*2),m.fromArray(o,Y*2),f.sub(h),d.sub(h),v.sub(g),m.sub(g);const B=1/(v.x*m.y-m.x*v.y);isFinite(B)&&(p.copy(f).multiplyScalar(m.y).addScaledVector(d,-v.y).multiplyScalar(B),S.copy(d).multiplyScalar(v.x).addScaledVector(f,-m.x).multiplyScalar(B),c[T].add(p),c[G].add(p),c[Y].add(p),u[T].add(S),u[G].add(S),u[Y].add(S))}let y=this.groups;y.length===0&&(y=[{start:0,count:i.length}]);for(let T=0,G=y.length;T<G;++T){const Y=y[T],B=Y.start,H=Y.count;for(let I=B,V=B+H;I<V;I+=3)_(i[I+0],i[I+1],i[I+2])}const b=new L,C=new L,A=new L,U=new L;function E(T){A.fromArray(s,T*3),U.copy(A);const G=c[T];b.copy(G),b.sub(A.multiplyScalar(A.dot(G))).normalize(),C.crossVectors(U,G);const B=C.dot(u[T])<0?-1:1;l[T*4]=b.x,l[T*4+1]=b.y,l[T*4+2]=b.z,l[T*4+3]=B}for(let T=0,G=y.length;T<G;++T){const Y=y[T],B=Y.start,H=Y.count;for(let I=B,V=B+H;I<V;I+=3)E(i[I+0]),E(i[I+1]),E(i[I+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ln(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let f=0,d=i.count;f<d;f++)i.setXYZ(f,0,0,0);const r=new L,s=new L,o=new L,a=new L,l=new L,c=new L,u=new L,h=new L;if(e)for(let f=0,d=e.count;f<d;f+=3){const g=e.getX(f+0),v=e.getX(f+1),m=e.getX(f+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,v),o.fromBufferAttribute(t,m),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(i,g),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,m),a.add(u),l.add(u),c.add(u),i.setXYZ(g,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),i.setXYZ(f+0,u.x,u.y,u.z),i.setXYZ(f+1,u.x,u.y,u.z),i.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Lt.fromBufferAttribute(e,t),Lt.normalize(),e.setXYZ(t,Lt.x,Lt.y,Lt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,g=0;for(let v=0,m=l.length;v<m;v++){a.isInterleavedBufferAttribute?d=l[v]*a.data.stride+a.offset:d=l[v]*u;for(let p=0;p<u;p++)f[g++]=c[d++]}return new Ln(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Mt,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,i);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Yc=new Le,Bi=new Z1,ps=new pi,Kc=new L,g1=new L,v1=new L,_1=new L,ma=new L,ms=new L,gs=new fe,vs=new fe,_s=new fe,$c=new L,Zc=new L,Jc=new L,xs=new L,ys=new L;class vt extends lt{constructor(e=new Mt,t=new ao){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,r=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(s&&a){ms.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(ma.fromBufferAttribute(h,e),o?ms.addScaledVector(ma,u):ms.addScaledVector(ma.sub(t),u))}t.add(ms)}return t}raycast(e,t){const i=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ps.copy(i.boundingSphere),ps.applyMatrix4(s),Bi.copy(e.ray).recast(e.near),!(ps.containsPoint(Bi.origin)===!1&&(Bi.intersectSphere(ps,Kc)===null||Bi.origin.distanceToSquared(Kc)>(e.far-e.near)**2))&&(Yc.copy(s).invert(),Bi.copy(e.ray).applyMatrix4(Yc),!(i.boundingBox!==null&&Bi.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Bi)))}_computeIntersections(e,t,i){let r;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,d=s.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,v=f.length;g<v;g++){const m=f[g],p=o[m.materialIndex],S=Math.max(m.start,d.start),_=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let y=S,b=_;y<b;y+=3){const C=a.getX(y),A=a.getX(y+1),U=a.getX(y+2);r=Ms(this,p,e,i,c,u,h,C,A,U),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const g=Math.max(0,d.start),v=Math.min(a.count,d.start+d.count);for(let m=g,p=v;m<p;m+=3){const S=a.getX(m),_=a.getX(m+1),y=a.getX(m+2);r=Ms(this,o,e,i,c,u,h,S,_,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let g=0,v=f.length;g<v;g++){const m=f[g],p=o[m.materialIndex],S=Math.max(m.start,d.start),_=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let y=S,b=_;y<b;y+=3){const C=y,A=y+1,U=y+2;r=Ms(this,p,e,i,c,u,h,C,A,U),r&&(r.faceIndex=Math.floor(y/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const g=Math.max(0,d.start),v=Math.min(l.count,d.start+d.count);for(let m=g,p=v;m<p;m+=3){const S=m,_=m+1,y=m+2;r=Ms(this,o,e,i,c,u,h,S,_,y),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function N5(n,e,t,i,r,s,o,a){let l;if(e.side===Zt?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side===hi,a),l===null)return null;ys.copy(a),ys.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(ys);return c<t.near||c>t.far?null:{distance:c,point:ys.clone(),object:n}}function Ms(n,e,t,i,r,s,o,a,l,c){n.getVertexPosition(a,g1),n.getVertexPosition(l,v1),n.getVertexPosition(c,_1);const u=N5(n,e,t,i,g1,v1,_1,xs);if(u){r&&(gs.fromBufferAttribute(r,a),vs.fromBufferAttribute(r,l),_s.fromBufferAttribute(r,c),u.uv=wn.getInterpolation(xs,g1,v1,_1,gs,vs,_s,new fe)),s&&(gs.fromBufferAttribute(s,a),vs.fromBufferAttribute(s,l),_s.fromBufferAttribute(s,c),u.uv1=wn.getInterpolation(xs,g1,v1,_1,gs,vs,_s,new fe),u.uv2=u.uv1),o&&($c.fromBufferAttribute(o,a),Zc.fromBufferAttribute(o,l),Jc.fromBufferAttribute(o,c),u.normal=wn.getInterpolation(xs,g1,v1,_1,$c,Zc,Jc,new L),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const h={a,b:l,c,normal:new L,materialIndex:0};wn.getNormal(g1,v1,_1,h.normal),u.face=h}return u}class n1 extends Mt{constructor(e=1,t=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;g("z","y","x",-1,-1,i,t,e,o,s,0),g("z","y","x",1,-1,i,t,-e,o,s,1),g("x","z","y",1,1,e,i,t,r,o,2),g("x","z","y",1,-1,e,i,-t,r,o,3),g("x","y","z",1,-1,e,t,i,r,s,4),g("x","y","z",-1,-1,e,t,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new rt(c,3)),this.setAttribute("normal",new rt(u,3)),this.setAttribute("uv",new rt(h,2));function g(v,m,p,S,_,y,b,C,A,U,E){const T=y/A,G=b/U,Y=y/2,B=b/2,H=C/2,I=A+1,V=U+1;let X=0,j=0;const ie=new L;for(let re=0;re<V;re++){const W=re*G-B;for(let q=0;q<I;q++){const pe=q*T-Y;ie[v]=pe*S,ie[m]=W*_,ie[p]=H,c.push(ie.x,ie.y,ie.z),ie[v]=0,ie[m]=0,ie[p]=C>0?1:-1,u.push(ie.x,ie.y,ie.z),h.push(q/A),h.push(1-re/U),X+=1}}for(let re=0;re<U;re++)for(let W=0;W<A;W++){const q=f+W+I*re,pe=f+W+I*(re+1),_e=f+(W+1)+I*(re+1),Se=f+(W+1)+I*re;l.push(q,pe,Se),l.push(pe,_e,Se),j+=6}a.addGroup(d,j,E),d+=j,f+=X}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new n1(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function W1(n){const e={};for(const t in n){e[t]={};for(const i in n[t]){const r=n[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function Kt(n){const e={};for(let t=0;t<n.length;t++){const i=W1(n[t]);for(const r in i)e[r]=i[r]}return e}function F5(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function Dh(n){return n.getRenderTarget()===null?n.outputColorSpace:Wn}const fi={clone:W1,merge:Kt};var B5=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,z5=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class yt extends mi{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=B5,this.fragmentShader=z5,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=W1(e.uniforms),this.uniformsGroups=F5(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Uh extends lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Le,this.projectionMatrix=new Le,this.projectionMatrixInverse=new Le,this.coordinateSystem=ai}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Ht extends Uh{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=G1*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Mr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return G1*2*Math.atan(Math.tan(Mr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Mr*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const x1=-90,y1=1;class k5 extends lt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null;const r=new Ht(x1,y1,e,t);r.layers=this.layers,this.add(r);const s=new Ht(x1,y1,e,t);s.layers=this.layers,this.add(s);const o=new Ht(x1,y1,e,t);o.layers=this.layers,this.add(o);const a=new Ht(x1,y1,e,t);a.layers=this.layers,this.add(a);const l=new Ht(x1,y1,e,t);l.layers=this.layers,this.add(l);const c=new Ht(x1,y1,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,r,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===ai)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===so)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,s,o,a,l,c]=this.children,u=e.getRenderTarget(),h=e.xr.enabled;e.xr.enabled=!1;const f=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,s),e.setRenderTarget(i,2),e.render(t,o),e.setRenderTarget(i,3),e.render(t,a),e.setRenderTarget(i,4),e.render(t,l),i.texture.generateMipmaps=f,e.setRenderTarget(i,5),e.render(t,c),e.setRenderTarget(u),e.xr.enabled=h,i.texture.needsPMREMUpdate=!0}}class Oh extends Ot{constructor(e,t,i,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:z1,super(e,t,i,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class H5 extends kt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];t.encoding!==void 0&&(Er("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Zi?ot:Ji),this.texture=new Oh(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:en}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new n1(5,5,5),s=new yt({name:"CubemapFromEquirect",uniforms:W1(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Zt,blending:Pn});s.uniforms.tEquirect.value=t;const o=new vt(r,s),a=t.minFilter;return t.minFilter===Or&&(t.minFilter=en),new k5(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(s)}}const ga=new L,V5=new L,G5=new Ve;class si{constructor(e=new L(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=ga.subVectors(i,t).cross(V5.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(ga),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||G5.getNormalMatrix(e),r=this.coplanarPoint(ga).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const zi=new pi,Ss=new L;class Z2{constructor(e=new si,t=new si,i=new si,r=new si,s=new si,o=new si){this.planes=[e,t,i,r,s,o]}set(e,t,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=ai){const i=this.planes,r=e.elements,s=r[0],o=r[1],a=r[2],l=r[3],c=r[4],u=r[5],h=r[6],f=r[7],d=r[8],g=r[9],v=r[10],m=r[11],p=r[12],S=r[13],_=r[14],y=r[15];if(i[0].setComponents(l-s,f-c,m-d,y-p).normalize(),i[1].setComponents(l+s,f+c,m+d,y+p).normalize(),i[2].setComponents(l+o,f+u,m+g,y+S).normalize(),i[3].setComponents(l-o,f-u,m-g,y-S).normalize(),i[4].setComponents(l-a,f-h,m-v,y-_).normalize(),t===ai)i[5].setComponents(l+a,f+h,m+v,y+_).normalize();else if(t===so)i[5].setComponents(a,h,v,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),zi.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),zi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(zi)}intersectsSprite(e){return zi.center.set(0,0,0),zi.radius=.7071067811865476,zi.applyMatrix4(e.matrixWorld),this.intersectsSphere(zi)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(Ss.x=r.normal.x>0?e.max.x:e.min.x,Ss.y=r.normal.y>0?e.max.y:e.min.y,Ss.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ss)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Nh(){let n=null,e=!1,t=null,i=null;function r(s,o){t(s,o),i=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){n=s}}}function W5(n,e){const t=e.isWebGL2,i=new WeakMap;function r(c,u){const h=c.array,f=c.usage,d=n.createBuffer();n.bindBuffer(u,d),n.bufferData(u,h,f),c.onUploadCallback();let g;if(h instanceof Float32Array)g=n.FLOAT;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=n.UNSIGNED_SHORT;else if(h instanceof Int16Array)g=n.SHORT;else if(h instanceof Uint32Array)g=n.UNSIGNED_INT;else if(h instanceof Int32Array)g=n.INT;else if(h instanceof Int8Array)g=n.BYTE;else if(h instanceof Uint8Array)g=n.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)g=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;n.bindBuffer(h,c),d.count===-1?n.bufferSubData(h,0,f):(t?n.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):n.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),u.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(n.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h===void 0?i.set(c,r(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class jr extends Mt{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=t/l,d=[],g=[],v=[],m=[];for(let p=0;p<u;p++){const S=p*f-o;for(let _=0;_<c;_++){const y=_*h-s;g.push(y,-S,0),v.push(0,0,1),m.push(_/a),m.push(1-p/l)}}for(let p=0;p<l;p++)for(let S=0;S<a;S++){const _=S+c*p,y=S+c*(p+1),b=S+1+c*(p+1),C=S+1+c*p;d.push(_,y,C),d.push(y,b,C)}this.setIndex(d),this.setAttribute("position",new rt(g,3)),this.setAttribute("normal",new rt(v,3)),this.setAttribute("uv",new rt(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jr(e.width,e.height,e.widthSegments,e.heightSegments)}}var X5=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,j5=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,q5=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Y5=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,K5=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,$5=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Z5=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,J5=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Q5=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,ep=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,tp=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,np=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,ip=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,rp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,sp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,op=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,ap=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,lp=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,cp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,up=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,hp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,fp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,dp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,pp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,mp=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,gp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,vp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,_p=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,xp="gl_FragColor = linearToOutputTexel( gl_FragColor );",yp=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Mp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Sp=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Ep=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,bp=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Tp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,wp=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Ap=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Cp=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Rp=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Pp=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Lp=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Ip=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Dp=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Up=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Op=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Np=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Fp=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Bp=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,zp=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,kp=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Hp=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,Vp=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Gp=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Wp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Xp=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,jp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,qp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Yp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Kp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,$p=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Zp=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Jp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Qp=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,e6=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,t6=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,n6=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,i6=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,r6=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,s6=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,o6=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,a6=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,l6=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,c6=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,u6=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,h6=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,f6=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,d6=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,p6=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,m6=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,g6=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,v6=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,_6=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,x6=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,y6=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,M6=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,S6=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,E6=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,b6=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,T6=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,w6=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,A6=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,C6=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,R6=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,P6=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,L6=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,I6=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,D6=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,U6=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,O6=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,N6=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,F6=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,B6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,z6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,k6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,H6=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const V6=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,G6=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,W6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,X6=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,j6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,q6=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Y6=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,K6=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,$6=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Z6=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,J6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Q6=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,e8=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,t8=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,n8=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,i8=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,r8=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,s8=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,o8=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,a8=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,l8=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,c8=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,u8=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,h8=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,f8=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,d8=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,p8=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,m8=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,g8=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,v8=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,_8=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,x8=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,y8=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,M8=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ze={alphahash_fragment:X5,alphahash_pars_fragment:j5,alphamap_fragment:q5,alphamap_pars_fragment:Y5,alphatest_fragment:K5,alphatest_pars_fragment:$5,aomap_fragment:Z5,aomap_pars_fragment:J5,begin_vertex:Q5,beginnormal_vertex:ep,bsdfs:tp,iridescence_fragment:np,bumpmap_pars_fragment:ip,clipping_planes_fragment:rp,clipping_planes_pars_fragment:sp,clipping_planes_pars_vertex:op,clipping_planes_vertex:ap,color_fragment:lp,color_pars_fragment:cp,color_pars_vertex:up,color_vertex:hp,common:fp,cube_uv_reflection_fragment:dp,defaultnormal_vertex:pp,displacementmap_pars_vertex:mp,displacementmap_vertex:gp,emissivemap_fragment:vp,emissivemap_pars_fragment:_p,colorspace_fragment:xp,colorspace_pars_fragment:yp,envmap_fragment:Mp,envmap_common_pars_fragment:Sp,envmap_pars_fragment:Ep,envmap_pars_vertex:bp,envmap_physical_pars_fragment:Np,envmap_vertex:Tp,fog_vertex:wp,fog_pars_vertex:Ap,fog_fragment:Cp,fog_pars_fragment:Rp,gradientmap_pars_fragment:Pp,lightmap_fragment:Lp,lightmap_pars_fragment:Ip,lights_lambert_fragment:Dp,lights_lambert_pars_fragment:Up,lights_pars_begin:Op,lights_toon_fragment:Fp,lights_toon_pars_fragment:Bp,lights_phong_fragment:zp,lights_phong_pars_fragment:kp,lights_physical_fragment:Hp,lights_physical_pars_fragment:Vp,lights_fragment_begin:Gp,lights_fragment_maps:Wp,lights_fragment_end:Xp,logdepthbuf_fragment:jp,logdepthbuf_pars_fragment:qp,logdepthbuf_pars_vertex:Yp,logdepthbuf_vertex:Kp,map_fragment:$p,map_pars_fragment:Zp,map_particle_fragment:Jp,map_particle_pars_fragment:Qp,metalnessmap_fragment:e6,metalnessmap_pars_fragment:t6,morphcolor_vertex:n6,morphnormal_vertex:i6,morphtarget_pars_vertex:r6,morphtarget_vertex:s6,normal_fragment_begin:o6,normal_fragment_maps:a6,normal_pars_fragment:l6,normal_pars_vertex:c6,normal_vertex:u6,normalmap_pars_fragment:h6,clearcoat_normal_fragment_begin:f6,clearcoat_normal_fragment_maps:d6,clearcoat_pars_fragment:p6,iridescence_pars_fragment:m6,opaque_fragment:g6,packing:v6,premultiplied_alpha_fragment:_6,project_vertex:x6,dithering_fragment:y6,dithering_pars_fragment:M6,roughnessmap_fragment:S6,roughnessmap_pars_fragment:E6,shadowmap_pars_fragment:b6,shadowmap_pars_vertex:T6,shadowmap_vertex:w6,shadowmask_pars_fragment:A6,skinbase_vertex:C6,skinning_pars_vertex:R6,skinning_vertex:P6,skinnormal_vertex:L6,specularmap_fragment:I6,specularmap_pars_fragment:D6,tonemapping_fragment:U6,tonemapping_pars_fragment:O6,transmission_fragment:N6,transmission_pars_fragment:F6,uv_pars_fragment:B6,uv_pars_vertex:z6,uv_vertex:k6,worldpos_vertex:H6,background_vert:V6,background_frag:G6,backgroundCube_vert:W6,backgroundCube_frag:X6,cube_vert:j6,cube_frag:q6,depth_vert:Y6,depth_frag:K6,distanceRGBA_vert:$6,distanceRGBA_frag:Z6,equirect_vert:J6,equirect_frag:Q6,linedashed_vert:e8,linedashed_frag:t8,meshbasic_vert:n8,meshbasic_frag:i8,meshlambert_vert:r8,meshlambert_frag:s8,meshmatcap_vert:o8,meshmatcap_frag:a8,meshnormal_vert:l8,meshnormal_frag:c8,meshphong_vert:u8,meshphong_frag:h8,meshphysical_vert:f8,meshphysical_frag:d8,meshtoon_vert:p8,meshtoon_frag:m8,points_vert:g8,points_frag:v8,shadow_vert:_8,shadow_frag:x8,sprite_vert:y8,sprite_frag:M8},ye={common:{diffuse:{value:new we(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ve},alphaMap:{value:null},alphaMapTransform:{value:new Ve},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ve}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ve}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ve}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ve},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ve},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ve},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ve}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ve}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ve}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new we(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new we(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ve},alphaTest:{value:0},uvTransform:{value:new Ve}},sprite:{diffuse:{value:new we(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ve},alphaMap:{value:null},alphaMapTransform:{value:new Ve},alphaTest:{value:0}}},Bn={basic:{uniforms:Kt([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.fog]),vertexShader:ze.meshbasic_vert,fragmentShader:ze.meshbasic_frag},lambert:{uniforms:Kt([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,ye.lights,{emissive:{value:new we(0)}}]),vertexShader:ze.meshlambert_vert,fragmentShader:ze.meshlambert_frag},phong:{uniforms:Kt([ye.common,ye.specularmap,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,ye.lights,{emissive:{value:new we(0)},specular:{value:new we(1118481)},shininess:{value:30}}]),vertexShader:ze.meshphong_vert,fragmentShader:ze.meshphong_frag},standard:{uniforms:Kt([ye.common,ye.envmap,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.roughnessmap,ye.metalnessmap,ye.fog,ye.lights,{emissive:{value:new we(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ze.meshphysical_vert,fragmentShader:ze.meshphysical_frag},toon:{uniforms:Kt([ye.common,ye.aomap,ye.lightmap,ye.emissivemap,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.gradientmap,ye.fog,ye.lights,{emissive:{value:new we(0)}}]),vertexShader:ze.meshtoon_vert,fragmentShader:ze.meshtoon_frag},matcap:{uniforms:Kt([ye.common,ye.bumpmap,ye.normalmap,ye.displacementmap,ye.fog,{matcap:{value:null}}]),vertexShader:ze.meshmatcap_vert,fragmentShader:ze.meshmatcap_frag},points:{uniforms:Kt([ye.points,ye.fog]),vertexShader:ze.points_vert,fragmentShader:ze.points_frag},dashed:{uniforms:Kt([ye.common,ye.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ze.linedashed_vert,fragmentShader:ze.linedashed_frag},depth:{uniforms:Kt([ye.common,ye.displacementmap]),vertexShader:ze.depth_vert,fragmentShader:ze.depth_frag},normal:{uniforms:Kt([ye.common,ye.bumpmap,ye.normalmap,ye.displacementmap,{opacity:{value:1}}]),vertexShader:ze.meshnormal_vert,fragmentShader:ze.meshnormal_frag},sprite:{uniforms:Kt([ye.sprite,ye.fog]),vertexShader:ze.sprite_vert,fragmentShader:ze.sprite_frag},background:{uniforms:{uvTransform:{value:new Ve},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ze.background_vert,fragmentShader:ze.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ze.backgroundCube_vert,fragmentShader:ze.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ze.cube_vert,fragmentShader:ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ze.equirect_vert,fragmentShader:ze.equirect_frag},distanceRGBA:{uniforms:Kt([ye.common,ye.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ze.distanceRGBA_vert,fragmentShader:ze.distanceRGBA_frag},shadow:{uniforms:Kt([ye.lights,ye.fog,{color:{value:new we(0)},opacity:{value:1}}]),vertexShader:ze.shadow_vert,fragmentShader:ze.shadow_frag}};Bn.physical={uniforms:Kt([Bn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ve},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ve},clearcoatNormalScale:{value:new fe(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ve},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ve},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ve},sheen:{value:0},sheenColor:{value:new we(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ve},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ve},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ve},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ve},attenuationDistance:{value:0},attenuationColor:{value:new we(0)},specularColor:{value:new we(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ve},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ve},anisotropyVector:{value:new fe},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ve}}]),vertexShader:ze.meshphysical_vert,fragmentShader:ze.meshphysical_frag};const Es={r:0,b:0,g:0};function S8(n,e,t,i,r,s,o){const a=new we(0);let l=s===!0?0:1,c,u,h=null,f=0,d=null;function g(m,p){let S=!1,_=p.isScene===!0?p.background:null;_&&_.isTexture&&(_=(p.backgroundBlurriness>0?t:e).get(_)),_===null?v(a,l):_&&_.isColor&&(v(_,1),S=!0);const y=n.xr.getEnvironmentBlendMode();y==="additive"?i.buffers.color.setClear(0,0,0,1,o):y==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(n.autoClear||S)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),_&&(_.isCubeTexture||_.mapping===wo)?(u===void 0&&(u=new vt(new n1(1,1,1),new yt({name:"BackgroundCubeMaterial",uniforms:W1(Bn.backgroundCube.uniforms),vertexShader:Bn.backgroundCube.vertexShader,fragmentShader:Bn.backgroundCube.fragmentShader,side:Zt,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(b,C,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),u.material.uniforms.envMap.value=_,u.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,u.material.toneMapped=_.colorSpace!==ot,(h!==_||f!==_.version||d!==n.toneMapping)&&(u.material.needsUpdate=!0,h=_,f=_.version,d=n.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):_&&_.isTexture&&(c===void 0&&(c=new vt(new jr(2,2),new yt({name:"BackgroundMaterial",uniforms:W1(Bn.background.uniforms),vertexShader:Bn.background.vertexShader,fragmentShader:Bn.background.fragmentShader,side:hi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=_,c.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,c.material.toneMapped=_.colorSpace!==ot,_.matrixAutoUpdate===!0&&_.updateMatrix(),c.material.uniforms.uvTransform.value.copy(_.matrix),(h!==_||f!==_.version||d!==n.toneMapping)&&(c.material.needsUpdate=!0,h=_,f=_.version,d=n.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function v(m,p){m.getRGB(Es,Dh(n)),i.buffers.color.setClear(Es.r,Es.g,Es.b,p,o)}return{getClearColor:function(){return a},setClearColor:function(m,p=1){a.set(m),l=p,v(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,v(a,l)},render:g}}function E8(n,e,t,i){const r=n.getParameter(n.MAX_VERTEX_ATTRIBS),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=m(null);let c=l,u=!1;function h(H,I,V,X,j){let ie=!1;if(o){const re=v(X,V,I);c!==re&&(c=re,d(c.object)),ie=p(H,X,V,j),ie&&S(H,X,V,j)}else{const re=I.wireframe===!0;(c.geometry!==X.id||c.program!==V.id||c.wireframe!==re)&&(c.geometry=X.id,c.program=V.id,c.wireframe=re,ie=!0)}j!==null&&t.update(j,n.ELEMENT_ARRAY_BUFFER),(ie||u)&&(u=!1,U(H,I,V,X),j!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t.get(j).buffer))}function f(){return i.isWebGL2?n.createVertexArray():s.createVertexArrayOES()}function d(H){return i.isWebGL2?n.bindVertexArray(H):s.bindVertexArrayOES(H)}function g(H){return i.isWebGL2?n.deleteVertexArray(H):s.deleteVertexArrayOES(H)}function v(H,I,V){const X=V.wireframe===!0;let j=a[H.id];j===void 0&&(j={},a[H.id]=j);let ie=j[I.id];ie===void 0&&(ie={},j[I.id]=ie);let re=ie[X];return re===void 0&&(re=m(f()),ie[X]=re),re}function m(H){const I=[],V=[],X=[];for(let j=0;j<r;j++)I[j]=0,V[j]=0,X[j]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:V,attributeDivisors:X,object:H,attributes:{},index:null}}function p(H,I,V,X){const j=c.attributes,ie=I.attributes;let re=0;const W=V.getAttributes();for(const q in W)if(W[q].location>=0){const _e=j[q];let Se=ie[q];if(Se===void 0&&(q==="instanceMatrix"&&H.instanceMatrix&&(Se=H.instanceMatrix),q==="instanceColor"&&H.instanceColor&&(Se=H.instanceColor)),_e===void 0||_e.attribute!==Se||Se&&_e.data!==Se.data)return!0;re++}return c.attributesNum!==re||c.index!==X}function S(H,I,V,X){const j={},ie=I.attributes;let re=0;const W=V.getAttributes();for(const q in W)if(W[q].location>=0){let _e=ie[q];_e===void 0&&(q==="instanceMatrix"&&H.instanceMatrix&&(_e=H.instanceMatrix),q==="instanceColor"&&H.instanceColor&&(_e=H.instanceColor));const Se={};Se.attribute=_e,_e&&_e.data&&(Se.data=_e.data),j[q]=Se,re++}c.attributes=j,c.attributesNum=re,c.index=X}function _(){const H=c.newAttributes;for(let I=0,V=H.length;I<V;I++)H[I]=0}function y(H){b(H,0)}function b(H,I){const V=c.newAttributes,X=c.enabledAttributes,j=c.attributeDivisors;V[H]=1,X[H]===0&&(n.enableVertexAttribArray(H),X[H]=1),j[H]!==I&&((i.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,I),j[H]=I)}function C(){const H=c.newAttributes,I=c.enabledAttributes;for(let V=0,X=I.length;V<X;V++)I[V]!==H[V]&&(n.disableVertexAttribArray(V),I[V]=0)}function A(H,I,V,X,j,ie,re){re===!0?n.vertexAttribIPointer(H,I,V,j,ie):n.vertexAttribPointer(H,I,V,X,j,ie)}function U(H,I,V,X){if(i.isWebGL2===!1&&(H.isInstancedMesh||X.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;_();const j=X.attributes,ie=V.getAttributes(),re=I.defaultAttributeValues;for(const W in ie){const q=ie[W];if(q.location>=0){let pe=j[W];if(pe===void 0&&(W==="instanceMatrix"&&H.instanceMatrix&&(pe=H.instanceMatrix),W==="instanceColor"&&H.instanceColor&&(pe=H.instanceColor)),pe!==void 0){const _e=pe.normalized,Se=pe.itemSize,Ae=t.get(pe);if(Ae===void 0)continue;const Re=Ae.buffer,Pe=Ae.type,Be=Ae.bytesPerElement,et=i.isWebGL2===!0&&(Pe===n.INT||Pe===n.UNSIGNED_INT||pe.gpuType===_h);if(pe.isInterleavedBufferAttribute){const Ie=pe.data,x=Ie.stride,P=pe.offset;if(Ie.isInstancedInterleavedBuffer){for(let D=0;D<q.locationSize;D++)b(q.location+D,Ie.meshPerAttribute);H.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=Ie.meshPerAttribute*Ie.count)}else for(let D=0;D<q.locationSize;D++)y(q.location+D);n.bindBuffer(n.ARRAY_BUFFER,Re);for(let D=0;D<q.locationSize;D++)A(q.location+D,Se/q.locationSize,Pe,_e,x*Be,(P+Se/q.locationSize*D)*Be,et)}else{if(pe.isInstancedBufferAttribute){for(let Ie=0;Ie<q.locationSize;Ie++)b(q.location+Ie,pe.meshPerAttribute);H.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=pe.meshPerAttribute*pe.count)}else for(let Ie=0;Ie<q.locationSize;Ie++)y(q.location+Ie);n.bindBuffer(n.ARRAY_BUFFER,Re);for(let Ie=0;Ie<q.locationSize;Ie++)A(q.location+Ie,Se/q.locationSize,Pe,_e,Se*Be,Se/q.locationSize*Ie*Be,et)}}else if(re!==void 0){const _e=re[W];if(_e!==void 0)switch(_e.length){case 2:n.vertexAttrib2fv(q.location,_e);break;case 3:n.vertexAttrib3fv(q.location,_e);break;case 4:n.vertexAttrib4fv(q.location,_e);break;default:n.vertexAttrib1fv(q.location,_e)}}}}C()}function E(){Y();for(const H in a){const I=a[H];for(const V in I){const X=I[V];for(const j in X)g(X[j].object),delete X[j];delete I[V]}delete a[H]}}function T(H){if(a[H.id]===void 0)return;const I=a[H.id];for(const V in I){const X=I[V];for(const j in X)g(X[j].object),delete X[j];delete I[V]}delete a[H.id]}function G(H){for(const I in a){const V=a[I];if(V[H.id]===void 0)continue;const X=V[H.id];for(const j in X)g(X[j].object),delete X[j];delete V[H.id]}}function Y(){B(),u=!0,c!==l&&(c=l,d(c.object))}function B(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:Y,resetDefaultState:B,dispose:E,releaseStatesOfGeometry:T,releaseStatesOfProgram:G,initAttributes:_,enableAttribute:y,disableUnusedAttributes:C}}function b8(n,e,t,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,u){n.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(r)f=n,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),t.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function T8(n,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const A=e.get("EXT_texture_filter_anisotropic");i=n.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function s(A){if(A==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&n.constructor.name==="WebGL2RenderingContext";let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),f=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=n.getParameter(n.MAX_TEXTURE_SIZE),g=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),v=n.getParameter(n.MAX_VERTEX_ATTRIBS),m=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),p=n.getParameter(n.MAX_VARYING_VECTORS),S=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),_=f>0,y=o||e.has("OES_texture_float"),b=_&&y,C=o?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:g,maxAttributes:v,maxVertexUniforms:m,maxVaryings:p,maxFragmentUniforms:S,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:b,maxSamples:C}}function w8(n){const e=this;let t=null,i=0,r=!1,s=!1;const o=new si,a=new Ve,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const d=h.length!==0||f||i!==0||r;return r=f,i=h.length,d},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){t=u(h,f,0)},this.setState=function(h,f,d){const g=h.clippingPlanes,v=h.clipIntersection,m=h.clipShadows,p=n.get(h);if(!r||g===null||g.length===0||s&&!m)s?u(null):c();else{const S=s?0:i,_=S*4;let y=p.clippingState||null;l.value=y,y=u(g,f,_,d);for(let b=0;b!==_;++b)y[b]=t[b];p.clippingState=y,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=S}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,f,d,g){const v=h!==null?h.length:0;let m=null;if(v!==0){if(m=l.value,g!==!0||m===null){const p=d+v*4,S=f.matrixWorldInverse;a.getNormalMatrix(S),(m===null||m.length<p)&&(m=new Float32Array(p));for(let _=0,y=d;_!==v;++_,y+=4)o.copy(h[_]).applyMatrix4(S,a),o.normal.toArray(m,y),m[y+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,m}}function A8(n){let e=new WeakMap;function t(o,a){return a===no?o.mapping=z1:a===e2&&(o.mapping=k1),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===no||a===e2)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new H5(l.height/2);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}class qr extends Uh{constructor(e=-1,t=1,i=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const w1=4,Qc=[.125,.215,.35,.446,.526,.582],Wi=20,va=new qr,e3=new we;let _a=null;const Hi=(1+Math.sqrt(5))/2,M1=1/Hi,t3=[new L(1,1,1),new L(-1,1,1),new L(1,1,-1),new L(-1,1,-1),new L(0,Hi,M1),new L(0,Hi,-M1),new L(M1,0,Hi),new L(-M1,0,Hi),new L(Hi,M1,0),new L(-Hi,M1,0)];class s2{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){_a=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=r3(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=i3(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(_a),e.scissorTest=!1,bs(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===z1||e.mapping===k1?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),_a=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:en,minFilter:en,generateMipmaps:!1,type:Nr,format:fn,colorSpace:Wn,depthBuffer:!1},r=n3(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=n3(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=C8(s)),this._blurMaterial=R8(s,e,t)}return r}_compileMaterial(e){const t=new vt(this._lodPlanes[0],e);this._renderer.compile(t,va)}_sceneToCubeUV(e,t,i,r){const a=new Ht(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(e3),u.toneMapping=Ri,u.autoClear=!1;const d=new ao({name:"PMREM.Background",side:Zt,depthWrite:!1,depthTest:!1}),g=new vt(new n1,d);let v=!1;const m=e.background;m?m.isColor&&(d.color.copy(m),e.background=null,v=!0):(d.color.copy(e3),v=!0);for(let p=0;p<6;p++){const S=p%3;S===0?(a.up.set(0,l[p],0),a.lookAt(c[p],0,0)):S===1?(a.up.set(0,0,l[p]),a.lookAt(0,c[p],0)):(a.up.set(0,l[p],0),a.lookAt(0,0,c[p]));const _=this._cubeSize;bs(r,S*_,p>2?_:0,_,_),u.setRenderTarget(r),v&&u.render(g,a),u.render(e,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=m}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===z1||e.mapping===k1;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=r3()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=i3());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new vt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;bs(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,va)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=t3[(r-1)%t3.length];this._blur(e,r-1,r,s,o)}t.autoClear=i}_blur(e,t,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,t,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new vt(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[i]-1,g=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Wi-1),v=s/g,m=isFinite(s)?1+Math.floor(u*v):Wi;m>Wi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Wi}`);const p=[];let S=0;for(let A=0;A<Wi;++A){const U=A/v,E=Math.exp(-U*U/2);p.push(E),A===0?S+=E:A<m&&(S+=2*E)}for(let A=0;A<p.length;A++)p[A]=p[A]/S;f.envMap.value=e.texture,f.samples.value=m,f.weights.value=p,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:_}=this;f.dTheta.value=g,f.mipInt.value=_-i;const y=this._sizeLods[r],b=3*y*(r>_-w1?r-_+w1:0),C=4*(this._cubeSize-y);bs(t,b,C,3*y,2*y),l.setRenderTarget(t),l.render(h,va)}}function C8(n){const e=[],t=[],i=[];let r=n;const s=n-w1+1+Qc.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-w1?l=Qc[o-n+w1-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,g=6,v=3,m=2,p=1,S=new Float32Array(v*g*d),_=new Float32Array(m*g*d),y=new Float32Array(p*g*d);for(let C=0;C<d;C++){const A=C%3*2/3-1,U=C>2?0:-1,E=[A,U,0,A+2/3,U,0,A+2/3,U+1,0,A,U,0,A+2/3,U+1,0,A,U+1,0];S.set(E,v*g*C),_.set(f,m*g*C);const T=[C,C,C,C,C,C];y.set(T,p*g*C)}const b=new Mt;b.setAttribute("position",new Ln(S,v)),b.setAttribute("uv",new Ln(_,m)),b.setAttribute("faceIndex",new Ln(y,p)),e.push(b),r>w1&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function n3(n,e,t){const i=new kt(n,e,t);return i.texture.mapping=wo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function bs(n,e,t,i,r){n.viewport.set(e,t,i,r),n.scissor.set(e,t,i,r)}function R8(n,e,t){const i=new Float32Array(Wi),r=new L(0,1,0);return new yt({name:"SphericalGaussianBlur",defines:{n:Wi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:J2(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Pn,depthTest:!1,depthWrite:!1})}function i3(){return new yt({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:J2(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Pn,depthTest:!1,depthWrite:!1})}function r3(){return new yt({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:J2(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Pn,depthTest:!1,depthWrite:!1})}function J2(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function P8(n){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===no||l===e2,u=l===z1||l===k1;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new s2(n)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&r(h)){t===null&&(t=new s2(n));const f=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function L8(n){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function I8(n,e,t,i){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const g in f.attributes)e.remove(f.attributes[g]);for(const g in f.morphAttributes){const v=f.morphAttributes[g];for(let m=0,p=v.length;m<p;m++)e.remove(v[m])}f.removeEventListener("dispose",o),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const g in f)e.update(f[g],n.ARRAY_BUFFER);const d=h.morphAttributes;for(const g in d){const v=d[g];for(let m=0,p=v.length;m<p;m++)e.update(v[m],n.ARRAY_BUFFER)}}function c(h){const f=[],d=h.index,g=h.attributes.position;let v=0;if(d!==null){const S=d.array;v=d.version;for(let _=0,y=S.length;_<y;_+=3){const b=S[_+0],C=S[_+1],A=S[_+2];f.push(b,C,C,A,A,b)}}else if(g!==void 0){const S=g.array;v=g.version;for(let _=0,y=S.length/3-1;_<y;_+=3){const b=_+0,C=_+1,A=_+2;f.push(b,C,C,A,A,b)}}else return;const m=new(Ah(f)?Ih:$2)(f,1);m.version=v;const p=s.get(h);p&&e.remove(p),s.set(h,m)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function D8(n,e,t,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){n.drawElements(s,d,a,f*l),t.update(d,s,1)}function h(f,d,g){if(g===0)return;let v,m;if(r)v=n,m="drawElementsInstanced";else if(v=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[m](s,d,a,f*l,g),t.update(d,s,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function U8(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case n.TRIANGLES:t.triangles+=a*(s/3);break;case n.LINES:t.lines+=a*(s/2);break;case n.LINE_STRIP:t.lines+=a*(s-1);break;case n.LINE_LOOP:t.lines+=a*s;break;case n.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function O8(n,e){return n[0]-e[0]}function N8(n,e){return Math.abs(e[1])-Math.abs(n[1])}function F8(n,e,t){const i={},r=new Float32Array(8),s=new WeakMap,o=new Ye,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h){const f=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,v=g!==void 0?g.length:0;let m=s.get(u);if(m===void 0||m.count!==v){let I=function(){B.dispose(),s.delete(u),u.removeEventListener("dispose",I)};var d=I;m!==void 0&&m.texture.dispose();const _=u.morphAttributes.position!==void 0,y=u.morphAttributes.normal!==void 0,b=u.morphAttributes.color!==void 0,C=u.morphAttributes.position||[],A=u.morphAttributes.normal||[],U=u.morphAttributes.color||[];let E=0;_===!0&&(E=1),y===!0&&(E=2),b===!0&&(E=3);let T=u.attributes.position.count*E,G=1;T>e.maxTextureSize&&(G=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const Y=new Float32Array(T*G*4*v),B=new Ph(Y,T,G,v);B.type=oi,B.needsUpdate=!0;const H=E*4;for(let V=0;V<v;V++){const X=C[V],j=A[V],ie=U[V],re=T*G*4*V;for(let W=0;W<X.count;W++){const q=W*H;_===!0&&(o.fromBufferAttribute(X,W),Y[re+q+0]=o.x,Y[re+q+1]=o.y,Y[re+q+2]=o.z,Y[re+q+3]=0),y===!0&&(o.fromBufferAttribute(j,W),Y[re+q+4]=o.x,Y[re+q+5]=o.y,Y[re+q+6]=o.z,Y[re+q+7]=0),b===!0&&(o.fromBufferAttribute(ie,W),Y[re+q+8]=o.x,Y[re+q+9]=o.y,Y[re+q+10]=o.z,Y[re+q+11]=ie.itemSize===4?o.w:1)}}m={count:v,texture:B,size:new fe(T,G)},s.set(u,m),u.addEventListener("dispose",I)}let p=0;for(let _=0;_<f.length;_++)p+=f[_];const S=u.morphTargetsRelative?1:1-p;h.getUniforms().setValue(n,"morphTargetBaseInfluence",S),h.getUniforms().setValue(n,"morphTargetInfluences",f),h.getUniforms().setValue(n,"morphTargetsTexture",m.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",m.size)}else{const g=f===void 0?0:f.length;let v=i[u.id];if(v===void 0||v.length!==g){v=[];for(let y=0;y<g;y++)v[y]=[y,0];i[u.id]=v}for(let y=0;y<g;y++){const b=v[y];b[0]=y,b[1]=f[y]}v.sort(N8);for(let y=0;y<8;y++)y<g&&v[y][1]?(a[y][0]=v[y][0],a[y][1]=v[y][1]):(a[y][0]=Number.MAX_SAFE_INTEGER,a[y][1]=0);a.sort(O8);const m=u.morphAttributes.position,p=u.morphAttributes.normal;let S=0;for(let y=0;y<8;y++){const b=a[y],C=b[0],A=b[1];C!==Number.MAX_SAFE_INTEGER&&A?(m&&u.getAttribute("morphTarget"+y)!==m[C]&&u.setAttribute("morphTarget"+y,m[C]),p&&u.getAttribute("morphNormal"+y)!==p[C]&&u.setAttribute("morphNormal"+y,p[C]),r[y]=A,S+=A):(m&&u.hasAttribute("morphTarget"+y)===!0&&u.deleteAttribute("morphTarget"+y),p&&u.hasAttribute("morphNormal"+y)===!0&&u.deleteAttribute("morphNormal"+y),r[y]=0)}const _=u.morphTargetsRelative?1:1-S;h.getUniforms().setValue(n,"morphTargetBaseInfluence",_),h.getUniforms().setValue(n,"morphTargetInfluences",r)}}return{update:l}}function B8(n,e,t,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const Fh=new Ot,Bh=new Ph,zh=new T5,kh=new Oh,s3=[],o3=[],a3=new Float32Array(16),l3=new Float32Array(9),c3=new Float32Array(4);function J1(n,e,t){const i=n[0];if(i<=0||i>0)return n;const r=e*t;let s=s3[r];if(s===void 0&&(s=new Float32Array(r),s3[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(s,a)}return s}function Rt(n,e){if(n.length!==e.length)return!1;for(let t=0,i=n.length;t<i;t++)if(n[t]!==e[t])return!1;return!0}function Pt(n,e){for(let t=0,i=e.length;t<i;t++)n[t]=e[t]}function Ro(n,e){let t=o3[e];t===void 0&&(t=new Int32Array(e),o3[e]=t);for(let i=0;i!==e;++i)t[i]=n.allocateTextureUnit();return t}function z8(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function k8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rt(t,e))return;n.uniform2fv(this.addr,e),Pt(t,e)}}function H8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Rt(t,e))return;n.uniform3fv(this.addr,e),Pt(t,e)}}function V8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rt(t,e))return;n.uniform4fv(this.addr,e),Pt(t,e)}}function G8(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Rt(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),Pt(t,e)}else{if(Rt(t,i))return;c3.set(i),n.uniformMatrix2fv(this.addr,!1,c3),Pt(t,i)}}function W8(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Rt(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),Pt(t,e)}else{if(Rt(t,i))return;l3.set(i),n.uniformMatrix3fv(this.addr,!1,l3),Pt(t,i)}}function X8(n,e){const t=this.cache,i=e.elements;if(i===void 0){if(Rt(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),Pt(t,e)}else{if(Rt(t,i))return;a3.set(i),n.uniformMatrix4fv(this.addr,!1,a3),Pt(t,i)}}function j8(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function q8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rt(t,e))return;n.uniform2iv(this.addr,e),Pt(t,e)}}function Y8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Rt(t,e))return;n.uniform3iv(this.addr,e),Pt(t,e)}}function K8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rt(t,e))return;n.uniform4iv(this.addr,e),Pt(t,e)}}function $8(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Z8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Rt(t,e))return;n.uniform2uiv(this.addr,e),Pt(t,e)}}function J8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Rt(t,e))return;n.uniform3uiv(this.addr,e),Pt(t,e)}}function Q8(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Rt(t,e))return;n.uniform4uiv(this.addr,e),Pt(t,e)}}function e7(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||Fh,r)}function t7(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||zh,r)}function n7(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||kh,r)}function i7(n,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(n.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||Bh,r)}function r7(n){switch(n){case 5126:return z8;case 35664:return k8;case 35665:return H8;case 35666:return V8;case 35674:return G8;case 35675:return W8;case 35676:return X8;case 5124:case 35670:return j8;case 35667:case 35671:return q8;case 35668:case 35672:return Y8;case 35669:case 35673:return K8;case 5125:return $8;case 36294:return Z8;case 36295:return J8;case 36296:return Q8;case 35678:case 36198:case 36298:case 36306:case 35682:return e7;case 35679:case 36299:case 36307:return t7;case 35680:case 36300:case 36308:case 36293:return n7;case 36289:case 36303:case 36311:case 36292:return i7}}function s7(n,e){n.uniform1fv(this.addr,e)}function o7(n,e){const t=J1(e,this.size,2);n.uniform2fv(this.addr,t)}function a7(n,e){const t=J1(e,this.size,3);n.uniform3fv(this.addr,t)}function l7(n,e){const t=J1(e,this.size,4);n.uniform4fv(this.addr,t)}function c7(n,e){const t=J1(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function u7(n,e){const t=J1(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function h7(n,e){const t=J1(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function f7(n,e){n.uniform1iv(this.addr,e)}function d7(n,e){n.uniform2iv(this.addr,e)}function p7(n,e){n.uniform3iv(this.addr,e)}function m7(n,e){n.uniform4iv(this.addr,e)}function g7(n,e){n.uniform1uiv(this.addr,e)}function v7(n,e){n.uniform2uiv(this.addr,e)}function _7(n,e){n.uniform3uiv(this.addr,e)}function x7(n,e){n.uniform4uiv(this.addr,e)}function y7(n,e,t){const i=this.cache,r=e.length,s=Ro(t,r);Rt(i,s)||(n.uniform1iv(this.addr,s),Pt(i,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||Fh,s[o])}function M7(n,e,t){const i=this.cache,r=e.length,s=Ro(t,r);Rt(i,s)||(n.uniform1iv(this.addr,s),Pt(i,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||zh,s[o])}function S7(n,e,t){const i=this.cache,r=e.length,s=Ro(t,r);Rt(i,s)||(n.uniform1iv(this.addr,s),Pt(i,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||kh,s[o])}function E7(n,e,t){const i=this.cache,r=e.length,s=Ro(t,r);Rt(i,s)||(n.uniform1iv(this.addr,s),Pt(i,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||Bh,s[o])}function b7(n){switch(n){case 5126:return s7;case 35664:return o7;case 35665:return a7;case 35666:return l7;case 35674:return c7;case 35675:return u7;case 35676:return h7;case 5124:case 35670:return f7;case 35667:case 35671:return d7;case 35668:case 35672:return p7;case 35669:case 35673:return m7;case 5125:return g7;case 36294:return v7;case 36295:return _7;case 36296:return x7;case 35678:case 36198:case 36298:case 36306:case 35682:return y7;case 35679:case 36299:case 36307:return M7;case 35680:case 36300:case 36308:case 36293:return S7;case 36289:case 36303:case 36311:case 36292:return E7}}class T7{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=r7(t.type)}}class w7{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=b7(t.type)}}class A7{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],i)}}}const xa=/(\w+)(\])?(\[|\.)?/g;function u3(n,e){n.seq.push(e),n.map[e.id]=e}function C7(n,e,t){const i=n.name,r=i.length;for(xa.lastIndex=0;;){const s=xa.exec(i),o=xa.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){u3(t,c===void 0?new T7(a,n,e):new w7(a,n,e));break}else{let h=t.map[a];h===void 0&&(h=new A7(a),u3(t,h)),t=h}}}class Ys{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);C7(s,o,this)}}setValue(e,t,i,r){const s=this.map[t];s!==void 0&&s.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&i.push(o)}return i}}function h3(n,e,t){const i=n.createShader(e);return n.shaderSource(i,t),n.compileShader(i),i}let R7=0;function P7(n,e){const t=n.split(`
`),i=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}function L7(n){switch(n){case Wn:return["Linear","( value )"];case ot:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),["Linear","( value )"]}}function f3(n,e,t){const i=n.getShaderParameter(e,n.COMPILE_STATUS),r=n.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+P7(n.getShaderSource(e),o)}else return r}function I7(n,e){const t=L7(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function D7(n,e){let t;switch(e){case dh:t="Linear";break;case ph:t="Reinhard";break;case mh:t="OptimizedCineon";break;case gh:t="ACESFilmic";break;case Dd:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function U7(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(dr).join(`
`)}function O7(n){const e=[];for(const t in n){const i=n[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function N7(n,e){const t={},i=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const s=n.getActiveAttrib(e,r),o=s.name;let a=1;s.type===n.FLOAT_MAT2&&(a=2),s.type===n.FLOAT_MAT3&&(a=3),s.type===n.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function dr(n){return n!==""}function d3(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function p3(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const F7=/^[ \t]*#include +<([\w\d./]+)>/gm;function o2(n){return n.replace(F7,z7)}const B7=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function z7(n,e){let t=ze[e];if(t===void 0){const i=B7.get(e);if(i!==void 0)t=ze[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return o2(t)}const k7=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function m3(n){return n.replace(k7,H7)}function H7(n,e,t,i){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function g3(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function V7(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===ch?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===uh?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===ni&&(e="SHADOWMAP_TYPE_VSM"),e}function G7(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case z1:case k1:e="ENVMAP_TYPE_CUBE";break;case wo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function W7(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case k1:e="ENVMAP_MODE_REFRACTION";break}return e}function X7(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case To:e="ENVMAP_BLENDING_MULTIPLY";break;case Ld:e="ENVMAP_BLENDING_MIX";break;case Id:e="ENVMAP_BLENDING_ADD";break}return e}function j7(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function q7(n,e,t,i){const r=n.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=V7(t),c=G7(t),u=W7(t),h=X7(t),f=j7(t),d=t.isWebGL2?"":U7(t),g=O7(s),v=r.createProgram();let m,p,S=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(dr).join(`
`),m.length>0&&(m+=`
`),p=[d,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g].filter(dr).join(`
`),p.length>0&&(p+=`
`)):(m=[g3(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(dr).join(`
`),p=[d,g3(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ri?"#define TONE_MAPPING":"",t.toneMapping!==Ri?ze.tonemapping_pars_fragment:"",t.toneMapping!==Ri?D7("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ze.colorspace_pars_fragment,I7("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(dr).join(`
`)),o=o2(o),o=d3(o,t),o=p3(o,t),a=o2(a),a=d3(a,t),a=p3(a,t),o=m3(o),a=m3(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(S=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,p=["#define varying in",t.glslVersion===Fc?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Fc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const _=S+m+o,y=S+p+a,b=h3(r,r.VERTEX_SHADER,_),C=h3(r,r.FRAGMENT_SHADER,y);if(r.attachShader(v,b),r.attachShader(v,C),t.index0AttributeName!==void 0?r.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v),n.debug.checkShaderErrors){const E=r.getProgramInfoLog(v).trim(),T=r.getShaderInfoLog(b).trim(),G=r.getShaderInfoLog(C).trim();let Y=!0,B=!0;if(r.getProgramParameter(v,r.LINK_STATUS)===!1)if(Y=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,v,b,C);else{const H=f3(r,b,"vertex"),I=f3(r,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(v,r.VALIDATE_STATUS)+`

Program Info Log: `+E+`
`+H+`
`+I)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(T===""||G==="")&&(B=!1);B&&(this.diagnostics={runnable:Y,programLog:E,vertexShader:{log:T,prefix:m},fragmentShader:{log:G,prefix:p}})}r.deleteShader(b),r.deleteShader(C);let A;this.getUniforms=function(){return A===void 0&&(A=new Ys(r,v)),A};let U;return this.getAttributes=function(){return U===void 0&&(U=N7(r,v)),U},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=R7++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=b,this.fragmentShader=C,this}let Y7=0;class K7{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new $7(e),t.set(e,i)),i}}class $7{constructor(e){this.id=Y7++,this.code=e,this.usedTimes=0}}function Z7(n,e,t,i,r,s,o){const a=new K2,l=new K7,c=[],u=r.isWebGL2,h=r.logarithmicDepthBuffer,f=r.vertexTextures;let d=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(E){return E===0?"uv":`uv${E}`}function m(E,T,G,Y,B){const H=Y.fog,I=B.geometry,V=E.isMeshStandardMaterial?Y.environment:null,X=(E.isMeshStandardMaterial?t:e).get(E.envMap||V),j=X&&X.mapping===wo?X.image.height:null,ie=g[E.type];E.precision!==null&&(d=r.getMaxPrecision(E.precision),d!==E.precision&&console.warn("THREE.WebGLProgram.getParameters:",E.precision,"not supported, using",d,"instead."));const re=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,W=re!==void 0?re.length:0;let q=0;I.morphAttributes.position!==void 0&&(q=1),I.morphAttributes.normal!==void 0&&(q=2),I.morphAttributes.color!==void 0&&(q=3);let pe,_e,Se,Ae;if(ie){const ct=Bn[ie];pe=ct.vertexShader,_e=ct.fragmentShader}else pe=E.vertexShader,_e=E.fragmentShader,l.update(E),Se=l.getVertexShaderID(E),Ae=l.getFragmentShaderID(E);const Re=n.getRenderTarget(),Pe=B.isInstancedMesh===!0,Be=!!E.map,et=!!E.matcap,Ie=!!X,x=!!E.aoMap,P=!!E.lightMap,D=!!E.bumpMap,z=!!E.normalMap,N=!!E.displacementMap,Q=!!E.emissiveMap,ee=!!E.metalnessMap,$=!!E.roughnessMap,se=E.anisotropy>0,ne=E.clearcoat>0,Ee=E.iridescence>0,w=E.sheen>0,M=E.transmission>0,k=se&&!!E.anisotropyMap,oe=ne&&!!E.clearcoatMap,ce=ne&&!!E.clearcoatNormalMap,ue=ne&&!!E.clearcoatRoughnessMap,Me=Ee&&!!E.iridescenceMap,de=Ee&&!!E.iridescenceThicknessMap,J=w&&!!E.sheenColorMap,O=w&&!!E.sheenRoughnessMap,he=!!E.specularMap,be=!!E.specularColorMap,me=!!E.specularIntensityMap,ve=M&&!!E.transmissionMap,Ue=M&&!!E.thicknessMap,$e=!!E.gradientMap,F=!!E.alphaMap,Te=E.alphaTest>0,te=!!E.alphaHash,ge=!!E.extensions,xe=!!I.attributes.uv1,We=!!I.attributes.uv2,tt=!!I.attributes.uv3;let st=Ri;return E.toneMapped&&(Re===null||Re.isXRRenderTarget===!0)&&(st=n.toneMapping),{isWebGL2:u,shaderID:ie,shaderType:E.type,shaderName:E.name,vertexShader:pe,fragmentShader:_e,defines:E.defines,customVertexShaderID:Se,customFragmentShaderID:Ae,isRawShaderMaterial:E.isRawShaderMaterial===!0,glslVersion:E.glslVersion,precision:d,instancing:Pe,instancingColor:Pe&&B.instanceColor!==null,supportsVertexTextures:f,outputColorSpace:Re===null?n.outputColorSpace:Re.isXRRenderTarget===!0?Re.texture.colorSpace:Wn,map:Be,matcap:et,envMap:Ie,envMapMode:Ie&&X.mapping,envMapCubeUVHeight:j,aoMap:x,lightMap:P,bumpMap:D,normalMap:z,displacementMap:f&&N,emissiveMap:Q,normalMapObjectSpace:z&&E.normalMapType===jd,normalMapTangentSpace:z&&E.normalMapType===Ao,metalnessMap:ee,roughnessMap:$,anisotropy:se,anisotropyMap:k,clearcoat:ne,clearcoatMap:oe,clearcoatNormalMap:ce,clearcoatRoughnessMap:ue,iridescence:Ee,iridescenceMap:Me,iridescenceThicknessMap:de,sheen:w,sheenColorMap:J,sheenRoughnessMap:O,specularMap:he,specularColorMap:be,specularIntensityMap:me,transmission:M,transmissionMap:ve,thicknessMap:Ue,gradientMap:$e,opaque:E.transparent===!1&&E.blending===I1,alphaMap:F,alphaTest:Te,alphaHash:te,combine:E.combine,mapUv:Be&&v(E.map.channel),aoMapUv:x&&v(E.aoMap.channel),lightMapUv:P&&v(E.lightMap.channel),bumpMapUv:D&&v(E.bumpMap.channel),normalMapUv:z&&v(E.normalMap.channel),displacementMapUv:N&&v(E.displacementMap.channel),emissiveMapUv:Q&&v(E.emissiveMap.channel),metalnessMapUv:ee&&v(E.metalnessMap.channel),roughnessMapUv:$&&v(E.roughnessMap.channel),anisotropyMapUv:k&&v(E.anisotropyMap.channel),clearcoatMapUv:oe&&v(E.clearcoatMap.channel),clearcoatNormalMapUv:ce&&v(E.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ue&&v(E.clearcoatRoughnessMap.channel),iridescenceMapUv:Me&&v(E.iridescenceMap.channel),iridescenceThicknessMapUv:de&&v(E.iridescenceThicknessMap.channel),sheenColorMapUv:J&&v(E.sheenColorMap.channel),sheenRoughnessMapUv:O&&v(E.sheenRoughnessMap.channel),specularMapUv:he&&v(E.specularMap.channel),specularColorMapUv:be&&v(E.specularColorMap.channel),specularIntensityMapUv:me&&v(E.specularIntensityMap.channel),transmissionMapUv:ve&&v(E.transmissionMap.channel),thicknessMapUv:Ue&&v(E.thicknessMap.channel),alphaMapUv:F&&v(E.alphaMap.channel),vertexTangents:!!I.attributes.tangent&&(z||se),vertexColors:E.vertexColors,vertexAlphas:E.vertexColors===!0&&!!I.attributes.color&&I.attributes.color.itemSize===4,vertexUv1s:xe,vertexUv2s:We,vertexUv3s:tt,pointsUvs:B.isPoints===!0&&!!I.attributes.uv&&(Be||F),fog:!!H,useFog:E.fog===!0,fogExp2:H&&H.isFogExp2,flatShading:E.flatShading===!0,sizeAttenuation:E.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:B.isSkinnedMesh===!0,morphTargets:I.morphAttributes.position!==void 0,morphNormals:I.morphAttributes.normal!==void 0,morphColors:I.morphAttributes.color!==void 0,morphTargetsCount:W,morphTextureStride:q,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:E.dithering,shadowMapEnabled:n.shadowMap.enabled&&G.length>0,shadowMapType:n.shadowMap.type,toneMapping:st,useLegacyLights:n._useLegacyLights,decodeVideoTexture:Be&&E.map.isVideoTexture===!0&&E.map.colorSpace===ot,premultipliedAlpha:E.premultipliedAlpha,doubleSided:E.side===tn,flipSided:E.side===Zt,useDepthPacking:E.depthPacking>=0,depthPacking:E.depthPacking||0,index0AttributeName:E.index0AttributeName,extensionDerivatives:ge&&E.extensions.derivatives===!0,extensionFragDepth:ge&&E.extensions.fragDepth===!0,extensionDrawBuffers:ge&&E.extensions.drawBuffers===!0,extensionShaderTextureLOD:ge&&E.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:E.customProgramCacheKey()}}function p(E){const T=[];if(E.shaderID?T.push(E.shaderID):(T.push(E.customVertexShaderID),T.push(E.customFragmentShaderID)),E.defines!==void 0)for(const G in E.defines)T.push(G),T.push(E.defines[G]);return E.isRawShaderMaterial===!1&&(S(T,E),_(T,E),T.push(n.outputColorSpace)),T.push(E.customProgramCacheKey),T.join()}function S(E,T){E.push(T.precision),E.push(T.outputColorSpace),E.push(T.envMapMode),E.push(T.envMapCubeUVHeight),E.push(T.mapUv),E.push(T.alphaMapUv),E.push(T.lightMapUv),E.push(T.aoMapUv),E.push(T.bumpMapUv),E.push(T.normalMapUv),E.push(T.displacementMapUv),E.push(T.emissiveMapUv),E.push(T.metalnessMapUv),E.push(T.roughnessMapUv),E.push(T.anisotropyMapUv),E.push(T.clearcoatMapUv),E.push(T.clearcoatNormalMapUv),E.push(T.clearcoatRoughnessMapUv),E.push(T.iridescenceMapUv),E.push(T.iridescenceThicknessMapUv),E.push(T.sheenColorMapUv),E.push(T.sheenRoughnessMapUv),E.push(T.specularMapUv),E.push(T.specularColorMapUv),E.push(T.specularIntensityMapUv),E.push(T.transmissionMapUv),E.push(T.thicknessMapUv),E.push(T.combine),E.push(T.fogExp2),E.push(T.sizeAttenuation),E.push(T.morphTargetsCount),E.push(T.morphAttributeCount),E.push(T.numDirLights),E.push(T.numPointLights),E.push(T.numSpotLights),E.push(T.numSpotLightMaps),E.push(T.numHemiLights),E.push(T.numRectAreaLights),E.push(T.numDirLightShadows),E.push(T.numPointLightShadows),E.push(T.numSpotLightShadows),E.push(T.numSpotLightShadowsWithMaps),E.push(T.shadowMapType),E.push(T.toneMapping),E.push(T.numClippingPlanes),E.push(T.numClipIntersection),E.push(T.depthPacking)}function _(E,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.matcap&&a.enable(4),T.envMap&&a.enable(5),T.normalMapObjectSpace&&a.enable(6),T.normalMapTangentSpace&&a.enable(7),T.clearcoat&&a.enable(8),T.iridescence&&a.enable(9),T.alphaTest&&a.enable(10),T.vertexColors&&a.enable(11),T.vertexAlphas&&a.enable(12),T.vertexUv1s&&a.enable(13),T.vertexUv2s&&a.enable(14),T.vertexUv3s&&a.enable(15),T.vertexTangents&&a.enable(16),T.anisotropy&&a.enable(17),E.push(a.mask),a.disableAll(),T.fog&&a.enable(0),T.useFog&&a.enable(1),T.flatShading&&a.enable(2),T.logarithmicDepthBuffer&&a.enable(3),T.skinning&&a.enable(4),T.morphTargets&&a.enable(5),T.morphNormals&&a.enable(6),T.morphColors&&a.enable(7),T.premultipliedAlpha&&a.enable(8),T.shadowMapEnabled&&a.enable(9),T.useLegacyLights&&a.enable(10),T.doubleSided&&a.enable(11),T.flipSided&&a.enable(12),T.useDepthPacking&&a.enable(13),T.dithering&&a.enable(14),T.transmission&&a.enable(15),T.sheen&&a.enable(16),T.opaque&&a.enable(17),T.pointsUvs&&a.enable(18),T.decodeVideoTexture&&a.enable(19),E.push(a.mask)}function y(E){const T=g[E.type];let G;if(T){const Y=Bn[T];G=fi.clone(Y.uniforms)}else G=E.uniforms;return G}function b(E,T){let G;for(let Y=0,B=c.length;Y<B;Y++){const H=c[Y];if(H.cacheKey===T){G=H,++G.usedTimes;break}}return G===void 0&&(G=new q7(n,T,E,s),c.push(G)),G}function C(E){if(--E.usedTimes===0){const T=c.indexOf(E);c[T]=c[c.length-1],c.pop(),E.destroy()}}function A(E){l.remove(E)}function U(){l.dispose()}return{getParameters:m,getProgramCacheKey:p,getUniforms:y,acquireProgram:b,releaseProgram:C,releaseShaderCache:A,programs:c,dispose:U}}function J7(){let n=new WeakMap;function e(s){let o=n.get(s);return o===void 0&&(o={},n.set(s,o)),o}function t(s){n.delete(s)}function i(s,o,a){n.get(s)[o]=a}function r(){n=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function Q7(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function v3(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function _3(){const n=[];let e=0;const t=[],i=[],r=[];function s(){e=0,t.length=0,i.length=0,r.length=0}function o(h,f,d,g,v,m){let p=n[e];return p===void 0?(p={id:h.id,object:h,geometry:f,material:d,groupOrder:g,renderOrder:h.renderOrder,z:v,group:m},n[e]=p):(p.id=h.id,p.object=h,p.geometry=f,p.material=d,p.groupOrder=g,p.renderOrder=h.renderOrder,p.z=v,p.group=m),e++,p}function a(h,f,d,g,v,m){const p=o(h,f,d,g,v,m);d.transmission>0?i.push(p):d.transparent===!0?r.push(p):t.push(p)}function l(h,f,d,g,v,m){const p=o(h,f,d,g,v,m);d.transmission>0?i.unshift(p):d.transparent===!0?r.unshift(p):t.unshift(p)}function c(h,f){t.length>1&&t.sort(h||Q7),i.length>1&&i.sort(f||v3),r.length>1&&r.sort(f||v3)}function u(){for(let h=e,f=n.length;h<f;h++){const d=n[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:i,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function e9(){let n=new WeakMap;function e(i,r){const s=n.get(i);let o;return s===void 0?(o=new _3,n.set(i,[o])):r>=s.length?(o=new _3,s.push(o)):o=s[r],o}function t(){n=new WeakMap}return{get:e,dispose:t}}function t9(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new L,color:new we};break;case"SpotLight":t={position:new L,direction:new L,color:new we,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new L,color:new we,distance:0,decay:0};break;case"HemisphereLight":t={direction:new L,skyColor:new we,groundColor:new we};break;case"RectAreaLight":t={color:new we,position:new L,halfWidth:new L,halfHeight:new L};break}return n[e.id]=t,t}}}function n9(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let i9=0;function r9(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function s9(n,e){const t=new t9,i=n9(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)r.probe.push(new L);const s=new L,o=new Le,a=new Le;function l(u,h){let f=0,d=0,g=0;for(let G=0;G<9;G++)r.probe[G].set(0,0,0);let v=0,m=0,p=0,S=0,_=0,y=0,b=0,C=0,A=0,U=0;u.sort(r9);const E=h===!0?Math.PI:1;for(let G=0,Y=u.length;G<Y;G++){const B=u[G],H=B.color,I=B.intensity,V=B.distance,X=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)f+=H.r*I*E,d+=H.g*I*E,g+=H.b*I*E;else if(B.isLightProbe)for(let j=0;j<9;j++)r.probe[j].addScaledVector(B.sh.coefficients[j],I);else if(B.isDirectionalLight){const j=t.get(B);if(j.color.copy(B.color).multiplyScalar(B.intensity*E),B.castShadow){const ie=B.shadow,re=i.get(B);re.shadowBias=ie.bias,re.shadowNormalBias=ie.normalBias,re.shadowRadius=ie.radius,re.shadowMapSize=ie.mapSize,r.directionalShadow[v]=re,r.directionalShadowMap[v]=X,r.directionalShadowMatrix[v]=B.shadow.matrix,y++}r.directional[v]=j,v++}else if(B.isSpotLight){const j=t.get(B);j.position.setFromMatrixPosition(B.matrixWorld),j.color.copy(H).multiplyScalar(I*E),j.distance=V,j.coneCos=Math.cos(B.angle),j.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),j.decay=B.decay,r.spot[p]=j;const ie=B.shadow;if(B.map&&(r.spotLightMap[A]=B.map,A++,ie.updateMatrices(B),B.castShadow&&U++),r.spotLightMatrix[p]=ie.matrix,B.castShadow){const re=i.get(B);re.shadowBias=ie.bias,re.shadowNormalBias=ie.normalBias,re.shadowRadius=ie.radius,re.shadowMapSize=ie.mapSize,r.spotShadow[p]=re,r.spotShadowMap[p]=X,C++}p++}else if(B.isRectAreaLight){const j=t.get(B);j.color.copy(H).multiplyScalar(I),j.halfWidth.set(B.width*.5,0,0),j.halfHeight.set(0,B.height*.5,0),r.rectArea[S]=j,S++}else if(B.isPointLight){const j=t.get(B);if(j.color.copy(B.color).multiplyScalar(B.intensity*E),j.distance=B.distance,j.decay=B.decay,B.castShadow){const ie=B.shadow,re=i.get(B);re.shadowBias=ie.bias,re.shadowNormalBias=ie.normalBias,re.shadowRadius=ie.radius,re.shadowMapSize=ie.mapSize,re.shadowCameraNear=ie.camera.near,re.shadowCameraFar=ie.camera.far,r.pointShadow[m]=re,r.pointShadowMap[m]=X,r.pointShadowMatrix[m]=B.shadow.matrix,b++}r.point[m]=j,m++}else if(B.isHemisphereLight){const j=t.get(B);j.skyColor.copy(B.color).multiplyScalar(I*E),j.groundColor.copy(B.groundColor).multiplyScalar(I*E),r.hemi[_]=j,_++}}S>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=ye.LTC_FLOAT_1,r.rectAreaLTC2=ye.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=ye.LTC_HALF_1,r.rectAreaLTC2=ye.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=d,r.ambient[2]=g;const T=r.hash;(T.directionalLength!==v||T.pointLength!==m||T.spotLength!==p||T.rectAreaLength!==S||T.hemiLength!==_||T.numDirectionalShadows!==y||T.numPointShadows!==b||T.numSpotShadows!==C||T.numSpotMaps!==A)&&(r.directional.length=v,r.spot.length=p,r.rectArea.length=S,r.point.length=m,r.hemi.length=_,r.directionalShadow.length=y,r.directionalShadowMap.length=y,r.pointShadow.length=b,r.pointShadowMap.length=b,r.spotShadow.length=C,r.spotShadowMap.length=C,r.directionalShadowMatrix.length=y,r.pointShadowMatrix.length=b,r.spotLightMatrix.length=C+A-U,r.spotLightMap.length=A,r.numSpotLightShadowsWithMaps=U,T.directionalLength=v,T.pointLength=m,T.spotLength=p,T.rectAreaLength=S,T.hemiLength=_,T.numDirectionalShadows=y,T.numPointShadows=b,T.numSpotShadows=C,T.numSpotMaps=A,r.version=i9++)}function c(u,h){let f=0,d=0,g=0,v=0,m=0;const p=h.matrixWorldInverse;for(let S=0,_=u.length;S<_;S++){const y=u[S];if(y.isDirectionalLight){const b=r.directional[f];b.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(p),f++}else if(y.isSpotLight){const b=r.spot[g];b.position.setFromMatrixPosition(y.matrixWorld),b.position.applyMatrix4(p),b.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(p),g++}else if(y.isRectAreaLight){const b=r.rectArea[v];b.position.setFromMatrixPosition(y.matrixWorld),b.position.applyMatrix4(p),a.identity(),o.copy(y.matrixWorld),o.premultiply(p),a.extractRotation(o),b.halfWidth.set(y.width*.5,0,0),b.halfHeight.set(0,y.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),v++}else if(y.isPointLight){const b=r.point[d];b.position.setFromMatrixPosition(y.matrixWorld),b.position.applyMatrix4(p),d++}else if(y.isHemisphereLight){const b=r.hemi[m];b.direction.setFromMatrixPosition(y.matrixWorld),b.direction.transformDirection(p),m++}}}return{setup:l,setupView:c,state:r}}function x3(n,e){const t=new s9(n,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(h){i.push(h)}function a(h){r.push(h)}function l(h){t.setup(i,h)}function c(h){t.setupView(i,h)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function o9(n,e){let t=new WeakMap;function i(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new x3(n,e),t.set(s,[l])):o>=a.length?(l=new x3(n,e),a.push(l)):l=a[o],l}function r(){t=new WeakMap}return{get:i,dispose:r}}class Hh extends mi{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Xd,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class a9 extends mi{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const l9=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,c9=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function u9(n,e,t){let i=new Z2;const r=new fe,s=new fe,o=new Ye,a=new Hh({depthPacking:Th}),l=new a9,c={},u=t.maxTextureSize,h={[hi]:Zt,[Zt]:hi,[tn]:tn},f=new yt({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:l9,fragmentShader:c9}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const g=new Mt;g.setAttribute("position",new Ln(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new vt(g,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ch;let p=this.type;this.render=function(b,C,A){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||b.length===0)return;const U=n.getRenderTarget(),E=n.getActiveCubeFace(),T=n.getActiveMipmapLevel(),G=n.state;G.setBlending(Pn),G.buffers.color.setClear(1,1,1,1),G.buffers.depth.setTest(!0),G.setScissorTest(!1);const Y=p!==ni&&this.type===ni,B=p===ni&&this.type!==ni;for(let H=0,I=b.length;H<I;H++){const V=b[H],X=V.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",V,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;r.copy(X.mapSize);const j=X.getFrameExtents();if(r.multiply(j),s.copy(X.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/j.x),r.x=s.x*j.x,X.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/j.y),r.y=s.y*j.y,X.mapSize.y=s.y)),X.map===null||Y===!0||B===!0){const re=this.type!==ni?{minFilter:Ut,magFilter:Ut}:{};X.map!==null&&X.map.dispose(),X.map=new kt(r.x,r.y,re),X.map.texture.name=V.name+".shadowMap",X.camera.updateProjectionMatrix()}n.setRenderTarget(X.map),n.clear();const ie=X.getViewportCount();for(let re=0;re<ie;re++){const W=X.getViewport(re);o.set(s.x*W.x,s.y*W.y,s.x*W.z,s.y*W.w),G.viewport(o),X.updateMatrices(V,re),i=X.getFrustum(),y(C,A,X.camera,V,this.type)}X.isPointLightShadow!==!0&&this.type===ni&&S(X,A),X.needsUpdate=!1}p=this.type,m.needsUpdate=!1,n.setRenderTarget(U,E,T)};function S(b,C){const A=e.update(v);f.defines.VSM_SAMPLES!==b.blurSamples&&(f.defines.VSM_SAMPLES=b.blurSamples,d.defines.VSM_SAMPLES=b.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new kt(r.x,r.y)),f.uniforms.shadow_pass.value=b.map.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,n.setRenderTarget(b.mapPass),n.clear(),n.renderBufferDirect(C,null,A,f,v,null),d.uniforms.shadow_pass.value=b.mapPass.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,n.setRenderTarget(b.map),n.clear(),n.renderBufferDirect(C,null,A,d,v,null)}function _(b,C,A,U){let E=null;const T=A.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(T!==void 0)E=T;else if(E=A.isPointLight===!0?l:a,n.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const G=E.uuid,Y=C.uuid;let B=c[G];B===void 0&&(B={},c[G]=B);let H=B[Y];H===void 0&&(H=E.clone(),B[Y]=H),E=H}if(E.visible=C.visible,E.wireframe=C.wireframe,U===ni?E.side=C.shadowSide!==null?C.shadowSide:C.side:E.side=C.shadowSide!==null?C.shadowSide:h[C.side],E.alphaMap=C.alphaMap,E.alphaTest=C.alphaTest,E.map=C.map,E.clipShadows=C.clipShadows,E.clippingPlanes=C.clippingPlanes,E.clipIntersection=C.clipIntersection,E.displacementMap=C.displacementMap,E.displacementScale=C.displacementScale,E.displacementBias=C.displacementBias,E.wireframeLinewidth=C.wireframeLinewidth,E.linewidth=C.linewidth,A.isPointLight===!0&&E.isMeshDistanceMaterial===!0){const G=n.properties.get(E);G.light=A}return E}function y(b,C,A,U,E){if(b.visible===!1)return;if(b.layers.test(C.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&E===ni)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,b.matrixWorld);const Y=e.update(b),B=b.material;if(Array.isArray(B)){const H=Y.groups;for(let I=0,V=H.length;I<V;I++){const X=H[I],j=B[X.materialIndex];if(j&&j.visible){const ie=_(b,j,U,E);n.renderBufferDirect(A,null,Y,ie,b,X)}}}else if(B.visible){const H=_(b,B,U,E);n.renderBufferDirect(A,null,Y,H,b,null)}}const G=b.children;for(let Y=0,B=G.length;Y<B;Y++)y(G[Y],C,A,U,E)}}function h9(n,e,t){const i=t.isWebGL2;function r(){let F=!1;const Te=new Ye;let te=null;const ge=new Ye(0,0,0,0);return{setMask:function(xe){te!==xe&&!F&&(n.colorMask(xe,xe,xe,xe),te=xe)},setLocked:function(xe){F=xe},setClear:function(xe,We,tt,st,on){on===!0&&(xe*=st,We*=st,tt*=st),Te.set(xe,We,tt,st),ge.equals(Te)===!1&&(n.clearColor(xe,We,tt,st),ge.copy(Te))},reset:function(){F=!1,te=null,ge.set(-1,0,0,0)}}}function s(){let F=!1,Te=null,te=null,ge=null;return{setTest:function(xe){xe?Re(n.DEPTH_TEST):Pe(n.DEPTH_TEST)},setMask:function(xe){Te!==xe&&!F&&(n.depthMask(xe),Te=xe)},setFunc:function(xe){if(te!==xe){switch(xe){case bd:n.depthFunc(n.NEVER);break;case Td:n.depthFunc(n.ALWAYS);break;case wd:n.depthFunc(n.LESS);break;case Qa:n.depthFunc(n.LEQUAL);break;case Ad:n.depthFunc(n.EQUAL);break;case Cd:n.depthFunc(n.GEQUAL);break;case Rd:n.depthFunc(n.GREATER);break;case Pd:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}te=xe}},setLocked:function(xe){F=xe},setClear:function(xe){ge!==xe&&(n.clearDepth(xe),ge=xe)},reset:function(){F=!1,Te=null,te=null,ge=null}}}function o(){let F=!1,Te=null,te=null,ge=null,xe=null,We=null,tt=null,st=null,on=null;return{setTest:function(ct){F||(ct?Re(n.STENCIL_TEST):Pe(n.STENCIL_TEST))},setMask:function(ct){Te!==ct&&!F&&(n.stencilMask(ct),Te=ct)},setFunc:function(ct,Dn,Xt){(te!==ct||ge!==Dn||xe!==Xt)&&(n.stencilFunc(ct,Dn,Xt),te=ct,ge=Dn,xe=Xt)},setOp:function(ct,Dn,Xt){(We!==ct||tt!==Dn||st!==Xt)&&(n.stencilOp(ct,Dn,Xt),We=ct,tt=Dn,st=Xt)},setLocked:function(ct){F=ct},setClear:function(ct){on!==ct&&(n.clearStencil(ct),on=ct)},reset:function(){F=!1,Te=null,te=null,ge=null,xe=null,We=null,tt=null,st=null,on=null}}}const a=new r,l=new s,c=new o,u=new WeakMap,h=new WeakMap;let f={},d={},g=new WeakMap,v=[],m=null,p=!1,S=null,_=null,y=null,b=null,C=null,A=null,U=null,E=!1,T=null,G=null,Y=null,B=null,H=null;const I=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let V=!1,X=0;const j=n.getParameter(n.VERSION);j.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(j)[1]),V=X>=1):j.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(j)[1]),V=X>=2);let ie=null,re={};const W=n.getParameter(n.SCISSOR_BOX),q=n.getParameter(n.VIEWPORT),pe=new Ye().fromArray(W),_e=new Ye().fromArray(q);function Se(F,Te,te,ge){const xe=new Uint8Array(4),We=n.createTexture();n.bindTexture(F,We),n.texParameteri(F,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(F,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let tt=0;tt<te;tt++)i&&(F===n.TEXTURE_3D||F===n.TEXTURE_2D_ARRAY)?n.texImage3D(Te,0,n.RGBA,1,1,ge,0,n.RGBA,n.UNSIGNED_BYTE,xe):n.texImage2D(Te+tt,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,xe);return We}const Ae={};Ae[n.TEXTURE_2D]=Se(n.TEXTURE_2D,n.TEXTURE_2D,1),Ae[n.TEXTURE_CUBE_MAP]=Se(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(Ae[n.TEXTURE_2D_ARRAY]=Se(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),Ae[n.TEXTURE_3D]=Se(n.TEXTURE_3D,n.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Re(n.DEPTH_TEST),l.setFunc(Qa),N(!1),Q(ic),Re(n.CULL_FACE),D(Pn);function Re(F){f[F]!==!0&&(n.enable(F),f[F]=!0)}function Pe(F){f[F]!==!1&&(n.disable(F),f[F]=!1)}function Be(F,Te){return d[F]!==Te?(n.bindFramebuffer(F,Te),d[F]=Te,i&&(F===n.DRAW_FRAMEBUFFER&&(d[n.FRAMEBUFFER]=Te),F===n.FRAMEBUFFER&&(d[n.DRAW_FRAMEBUFFER]=Te)),!0):!1}function et(F,Te){let te=v,ge=!1;if(F)if(te=g.get(Te),te===void 0&&(te=[],g.set(Te,te)),F.isWebGLMultipleRenderTargets){const xe=F.texture;if(te.length!==xe.length||te[0]!==n.COLOR_ATTACHMENT0){for(let We=0,tt=xe.length;We<tt;We++)te[We]=n.COLOR_ATTACHMENT0+We;te.length=xe.length,ge=!0}}else te[0]!==n.COLOR_ATTACHMENT0&&(te[0]=n.COLOR_ATTACHMENT0,ge=!0);else te[0]!==n.BACK&&(te[0]=n.BACK,ge=!0);ge&&(t.isWebGL2?n.drawBuffers(te):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(te))}function Ie(F){return m!==F?(n.useProgram(F),m=F,!0):!1}const x={[b1]:n.FUNC_ADD,[dd]:n.FUNC_SUBTRACT,[pd]:n.FUNC_REVERSE_SUBTRACT};if(i)x[oc]=n.MIN,x[ac]=n.MAX;else{const F=e.get("EXT_blend_minmax");F!==null&&(x[oc]=F.MIN_EXT,x[ac]=F.MAX_EXT)}const P={[md]:n.ZERO,[gd]:n.ONE,[vd]:n.SRC_COLOR,[hh]:n.SRC_ALPHA,[Ed]:n.SRC_ALPHA_SATURATE,[Md]:n.DST_COLOR,[xd]:n.DST_ALPHA,[_d]:n.ONE_MINUS_SRC_COLOR,[fh]:n.ONE_MINUS_SRC_ALPHA,[Sd]:n.ONE_MINUS_DST_COLOR,[yd]:n.ONE_MINUS_DST_ALPHA};function D(F,Te,te,ge,xe,We,tt,st){if(F===Pn){p===!0&&(Pe(n.BLEND),p=!1);return}if(p===!1&&(Re(n.BLEND),p=!0),F!==fd){if(F!==S||st!==E){if((_!==b1||C!==b1)&&(n.blendEquation(n.FUNC_ADD),_=b1,C=b1),st)switch(F){case I1:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case to:n.blendFunc(n.ONE,n.ONE);break;case rc:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case sc:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case I1:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case to:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case rc:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case sc:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}y=null,b=null,A=null,U=null,S=F,E=st}return}xe=xe||Te,We=We||te,tt=tt||ge,(Te!==_||xe!==C)&&(n.blendEquationSeparate(x[Te],x[xe]),_=Te,C=xe),(te!==y||ge!==b||We!==A||tt!==U)&&(n.blendFuncSeparate(P[te],P[ge],P[We],P[tt]),y=te,b=ge,A=We,U=tt),S=F,E=!1}function z(F,Te){F.side===tn?Pe(n.CULL_FACE):Re(n.CULL_FACE);let te=F.side===Zt;Te&&(te=!te),N(te),F.blending===I1&&F.transparent===!1?D(Pn):D(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.premultipliedAlpha),l.setFunc(F.depthFunc),l.setTest(F.depthTest),l.setMask(F.depthWrite),a.setMask(F.colorWrite);const ge=F.stencilWrite;c.setTest(ge),ge&&(c.setMask(F.stencilWriteMask),c.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),c.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),$(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?Re(n.SAMPLE_ALPHA_TO_COVERAGE):Pe(n.SAMPLE_ALPHA_TO_COVERAGE)}function N(F){T!==F&&(F?n.frontFace(n.CW):n.frontFace(n.CCW),T=F)}function Q(F){F!==ud?(Re(n.CULL_FACE),F!==G&&(F===ic?n.cullFace(n.BACK):F===hd?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):Pe(n.CULL_FACE),G=F}function ee(F){F!==Y&&(V&&n.lineWidth(F),Y=F)}function $(F,Te,te){F?(Re(n.POLYGON_OFFSET_FILL),(B!==Te||H!==te)&&(n.polygonOffset(Te,te),B=Te,H=te)):Pe(n.POLYGON_OFFSET_FILL)}function se(F){F?Re(n.SCISSOR_TEST):Pe(n.SCISSOR_TEST)}function ne(F){F===void 0&&(F=n.TEXTURE0+I-1),ie!==F&&(n.activeTexture(F),ie=F)}function Ee(F,Te,te){te===void 0&&(ie===null?te=n.TEXTURE0+I-1:te=ie);let ge=re[te];ge===void 0&&(ge={type:void 0,texture:void 0},re[te]=ge),(ge.type!==F||ge.texture!==Te)&&(ie!==te&&(n.activeTexture(te),ie=te),n.bindTexture(F,Te||Ae[F]),ge.type=F,ge.texture=Te)}function w(){const F=re[ie];F!==void 0&&F.type!==void 0&&(n.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function M(){try{n.compressedTexImage2D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function k(){try{n.compressedTexImage3D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function oe(){try{n.texSubImage2D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ce(){try{n.texSubImage3D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ue(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Me(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function de(){try{n.texStorage2D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function J(){try{n.texStorage3D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function O(){try{n.texImage2D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function he(){try{n.texImage3D.apply(n,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function be(F){pe.equals(F)===!1&&(n.scissor(F.x,F.y,F.z,F.w),pe.copy(F))}function me(F){_e.equals(F)===!1&&(n.viewport(F.x,F.y,F.z,F.w),_e.copy(F))}function ve(F,Te){let te=h.get(Te);te===void 0&&(te=new WeakMap,h.set(Te,te));let ge=te.get(F);ge===void 0&&(ge=n.getUniformBlockIndex(Te,F.name),te.set(F,ge))}function Ue(F,Te){const ge=h.get(Te).get(F);u.get(Te)!==ge&&(n.uniformBlockBinding(Te,ge,F.__bindingPointIndex),u.set(Te,ge))}function $e(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),i===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),f={},ie=null,re={},d={},g=new WeakMap,v=[],m=null,p=!1,S=null,_=null,y=null,b=null,C=null,A=null,U=null,E=!1,T=null,G=null,Y=null,B=null,H=null,pe.set(0,0,n.canvas.width,n.canvas.height),_e.set(0,0,n.canvas.width,n.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Re,disable:Pe,bindFramebuffer:Be,drawBuffers:et,useProgram:Ie,setBlending:D,setMaterial:z,setFlipSided:N,setCullFace:Q,setLineWidth:ee,setPolygonOffset:$,setScissorTest:se,activeTexture:ne,bindTexture:Ee,unbindTexture:w,compressedTexImage2D:M,compressedTexImage3D:k,texImage2D:O,texImage3D:he,updateUBOMapping:ve,uniformBlockBinding:Ue,texStorage2D:de,texStorage3D:J,texSubImage2D:oe,texSubImage3D:ce,compressedTexSubImage2D:ue,compressedTexSubImage3D:Me,scissor:be,viewport:me,reset:$e}}function f9(n,e,t,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let v;const m=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function S(w,M){return p?new OffscreenCanvas(w,M):Fr("canvas")}function _(w,M,k,oe){let ce=1;if((w.width>oe||w.height>oe)&&(ce=oe/Math.max(w.width,w.height)),ce<1||M===!0)if(typeof HTMLImageElement<"u"&&w instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&w instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&w instanceof ImageBitmap){const ue=M?oo:Math.floor,Me=ue(ce*w.width),de=ue(ce*w.height);v===void 0&&(v=S(Me,de));const J=k?S(Me,de):v;return J.width=Me,J.height=de,J.getContext("2d").drawImage(w,0,0,Me,de),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+w.width+"x"+w.height+") to ("+Me+"x"+de+")."),J}else return"data"in w&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+w.width+"x"+w.height+")."),w;return w}function y(w){return r2(w.width)&&r2(w.height)}function b(w){return a?!1:w.wrapS!==hn||w.wrapT!==hn||w.minFilter!==Ut&&w.minFilter!==en}function C(w,M){return w.generateMipmaps&&M&&w.minFilter!==Ut&&w.minFilter!==en}function A(w){n.generateMipmap(w)}function U(w,M,k,oe,ce=!1){if(a===!1)return M;if(w!==null){if(n[w]!==void 0)return n[w];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+w+"'")}let ue=M;return M===n.RED&&(k===n.FLOAT&&(ue=n.R32F),k===n.HALF_FLOAT&&(ue=n.R16F),k===n.UNSIGNED_BYTE&&(ue=n.R8)),M===n.RED_INTEGER&&(k===n.UNSIGNED_BYTE&&(ue=n.R8UI),k===n.UNSIGNED_SHORT&&(ue=n.R16UI),k===n.UNSIGNED_INT&&(ue=n.R32UI),k===n.BYTE&&(ue=n.R8I),k===n.SHORT&&(ue=n.R16I),k===n.INT&&(ue=n.R32I)),M===n.RG&&(k===n.FLOAT&&(ue=n.RG32F),k===n.HALF_FLOAT&&(ue=n.RG16F),k===n.UNSIGNED_BYTE&&(ue=n.RG8)),M===n.RGBA&&(k===n.FLOAT&&(ue=n.RGBA32F),k===n.HALF_FLOAT&&(ue=n.RGBA16F),k===n.UNSIGNED_BYTE&&(ue=oe===ot&&ce===!1?n.SRGB8_ALPHA8:n.RGBA8),k===n.UNSIGNED_SHORT_4_4_4_4&&(ue=n.RGBA4),k===n.UNSIGNED_SHORT_5_5_5_1&&(ue=n.RGB5_A1)),(ue===n.R16F||ue===n.R32F||ue===n.RG16F||ue===n.RG32F||ue===n.RGBA16F||ue===n.RGBA32F)&&e.get("EXT_color_buffer_float"),ue}function E(w,M,k){return C(w,k)===!0||w.isFramebufferTexture&&w.minFilter!==Ut&&w.minFilter!==en?Math.log2(Math.max(M.width,M.height))+1:w.mipmaps!==void 0&&w.mipmaps.length>0?w.mipmaps.length:w.isCompressedTexture&&Array.isArray(w.image)?M.mipmaps.length:1}function T(w){return w===Ut||w===lc||w===jo?n.NEAREST:n.LINEAR}function G(w){const M=w.target;M.removeEventListener("dispose",G),B(M),M.isVideoTexture&&g.delete(M)}function Y(w){const M=w.target;M.removeEventListener("dispose",Y),I(M)}function B(w){const M=i.get(w);if(M.__webglInit===void 0)return;const k=w.source,oe=m.get(k);if(oe){const ce=oe[M.__cacheKey];ce.usedTimes--,ce.usedTimes===0&&H(w),Object.keys(oe).length===0&&m.delete(k)}i.remove(w)}function H(w){const M=i.get(w);n.deleteTexture(M.__webglTexture);const k=w.source,oe=m.get(k);delete oe[M.__cacheKey],o.memory.textures--}function I(w){const M=w.texture,k=i.get(w),oe=i.get(M);if(oe.__webglTexture!==void 0&&(n.deleteTexture(oe.__webglTexture),o.memory.textures--),w.depthTexture&&w.depthTexture.dispose(),w.isWebGLCubeRenderTarget)for(let ce=0;ce<6;ce++){if(Array.isArray(k.__webglFramebuffer[ce]))for(let ue=0;ue<k.__webglFramebuffer[ce].length;ue++)n.deleteFramebuffer(k.__webglFramebuffer[ce][ue]);else n.deleteFramebuffer(k.__webglFramebuffer[ce]);k.__webglDepthbuffer&&n.deleteRenderbuffer(k.__webglDepthbuffer[ce])}else{if(Array.isArray(k.__webglFramebuffer))for(let ce=0;ce<k.__webglFramebuffer.length;ce++)n.deleteFramebuffer(k.__webglFramebuffer[ce]);else n.deleteFramebuffer(k.__webglFramebuffer);if(k.__webglDepthbuffer&&n.deleteRenderbuffer(k.__webglDepthbuffer),k.__webglMultisampledFramebuffer&&n.deleteFramebuffer(k.__webglMultisampledFramebuffer),k.__webglColorRenderbuffer)for(let ce=0;ce<k.__webglColorRenderbuffer.length;ce++)k.__webglColorRenderbuffer[ce]&&n.deleteRenderbuffer(k.__webglColorRenderbuffer[ce]);k.__webglDepthRenderbuffer&&n.deleteRenderbuffer(k.__webglDepthRenderbuffer)}if(w.isWebGLMultipleRenderTargets)for(let ce=0,ue=M.length;ce<ue;ce++){const Me=i.get(M[ce]);Me.__webglTexture&&(n.deleteTexture(Me.__webglTexture),o.memory.textures--),i.remove(M[ce])}i.remove(M),i.remove(w)}let V=0;function X(){V=0}function j(){const w=V;return w>=l&&console.warn("THREE.WebGLTextures: Trying to use "+w+" texture units while this GPU supports only "+l),V+=1,w}function ie(w){const M=[];return M.push(w.wrapS),M.push(w.wrapT),M.push(w.wrapR||0),M.push(w.magFilter),M.push(w.minFilter),M.push(w.anisotropy),M.push(w.internalFormat),M.push(w.format),M.push(w.type),M.push(w.generateMipmaps),M.push(w.premultiplyAlpha),M.push(w.flipY),M.push(w.unpackAlignment),M.push(w.colorSpace),M.join()}function re(w,M){const k=i.get(w);if(w.isVideoTexture&&ne(w),w.isRenderTargetTexture===!1&&w.version>0&&k.__version!==w.version){const oe=w.image;if(oe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(oe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Be(k,w,M);return}}t.bindTexture(n.TEXTURE_2D,k.__webglTexture,n.TEXTURE0+M)}function W(w,M){const k=i.get(w);if(w.version>0&&k.__version!==w.version){Be(k,w,M);return}t.bindTexture(n.TEXTURE_2D_ARRAY,k.__webglTexture,n.TEXTURE0+M)}function q(w,M){const k=i.get(w);if(w.version>0&&k.__version!==w.version){Be(k,w,M);return}t.bindTexture(n.TEXTURE_3D,k.__webglTexture,n.TEXTURE0+M)}function pe(w,M){const k=i.get(w);if(w.version>0&&k.__version!==w.version){et(k,w,M);return}t.bindTexture(n.TEXTURE_CUBE_MAP,k.__webglTexture,n.TEXTURE0+M)}const _e={[H1]:n.REPEAT,[hn]:n.CLAMP_TO_EDGE,[t2]:n.MIRRORED_REPEAT},Se={[Ut]:n.NEAREST,[lc]:n.NEAREST_MIPMAP_NEAREST,[jo]:n.NEAREST_MIPMAP_LINEAR,[en]:n.LINEAR,[Ud]:n.LINEAR_MIPMAP_NEAREST,[Or]:n.LINEAR_MIPMAP_LINEAR},Ae={[Yd]:n.NEVER,[t5]:n.ALWAYS,[Kd]:n.LESS,[Zd]:n.LEQUAL,[$d]:n.EQUAL,[e5]:n.GEQUAL,[Jd]:n.GREATER,[Qd]:n.NOTEQUAL};function Re(w,M,k){if(k?(n.texParameteri(w,n.TEXTURE_WRAP_S,_e[M.wrapS]),n.texParameteri(w,n.TEXTURE_WRAP_T,_e[M.wrapT]),(w===n.TEXTURE_3D||w===n.TEXTURE_2D_ARRAY)&&n.texParameteri(w,n.TEXTURE_WRAP_R,_e[M.wrapR]),n.texParameteri(w,n.TEXTURE_MAG_FILTER,Se[M.magFilter]),n.texParameteri(w,n.TEXTURE_MIN_FILTER,Se[M.minFilter])):(n.texParameteri(w,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(w,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(w===n.TEXTURE_3D||w===n.TEXTURE_2D_ARRAY)&&n.texParameteri(w,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(M.wrapS!==hn||M.wrapT!==hn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(w,n.TEXTURE_MAG_FILTER,T(M.magFilter)),n.texParameteri(w,n.TEXTURE_MIN_FILTER,T(M.minFilter)),M.minFilter!==Ut&&M.minFilter!==en&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),M.compareFunction&&(n.texParameteri(w,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(w,n.TEXTURE_COMPARE_FUNC,Ae[M.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const oe=e.get("EXT_texture_filter_anisotropic");if(M.magFilter===Ut||M.minFilter!==jo&&M.minFilter!==Or||M.type===oi&&e.has("OES_texture_float_linear")===!1||a===!1&&M.type===Nr&&e.has("OES_texture_half_float_linear")===!1)return;(M.anisotropy>1||i.get(M).__currentAnisotropy)&&(n.texParameterf(w,oe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,r.getMaxAnisotropy())),i.get(M).__currentAnisotropy=M.anisotropy)}}function Pe(w,M){let k=!1;w.__webglInit===void 0&&(w.__webglInit=!0,M.addEventListener("dispose",G));const oe=M.source;let ce=m.get(oe);ce===void 0&&(ce={},m.set(oe,ce));const ue=ie(M);if(ue!==w.__cacheKey){ce[ue]===void 0&&(ce[ue]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,k=!0),ce[ue].usedTimes++;const Me=ce[w.__cacheKey];Me!==void 0&&(ce[w.__cacheKey].usedTimes--,Me.usedTimes===0&&H(M)),w.__cacheKey=ue,w.__webglTexture=ce[ue].texture}return k}function Be(w,M,k){let oe=n.TEXTURE_2D;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(oe=n.TEXTURE_2D_ARRAY),M.isData3DTexture&&(oe=n.TEXTURE_3D);const ce=Pe(w,M),ue=M.source;t.bindTexture(oe,w.__webglTexture,n.TEXTURE0+k);const Me=i.get(ue);if(ue.version!==Me.__version||ce===!0){t.activeTexture(n.TEXTURE0+k),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,M.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,M.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,M.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const de=b(M)&&y(M.image)===!1;let J=_(M.image,de,!1,u);J=Ee(M,J);const O=y(J)||a,he=s.convert(M.format,M.colorSpace);let be=s.convert(M.type),me=U(M.internalFormat,he,be,M.colorSpace,M.isVideoTexture);Re(oe,M,O);let ve;const Ue=M.mipmaps,$e=a&&M.isVideoTexture!==!0,F=Me.__version===void 0||ce===!0,Te=E(M,J,O);if(M.isDepthTexture)me=n.DEPTH_COMPONENT,a?M.type===oi?me=n.DEPTH_COMPONENT32F:M.type===bi?me=n.DEPTH_COMPONENT24:M.type===Ki?me=n.DEPTH24_STENCIL8:me=n.DEPTH_COMPONENT16:M.type===oi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===$i&&me===n.DEPTH_COMPONENT&&M.type!==q2&&M.type!==bi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=bi,be=s.convert(M.type)),M.format===V1&&me===n.DEPTH_COMPONENT&&(me=n.DEPTH_STENCIL,M.type!==Ki&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=Ki,be=s.convert(M.type))),F&&($e?t.texStorage2D(n.TEXTURE_2D,1,me,J.width,J.height):t.texImage2D(n.TEXTURE_2D,0,me,J.width,J.height,0,he,be,null));else if(M.isDataTexture)if(Ue.length>0&&O){$e&&F&&t.texStorage2D(n.TEXTURE_2D,Te,me,Ue[0].width,Ue[0].height);for(let te=0,ge=Ue.length;te<ge;te++)ve=Ue[te],$e?t.texSubImage2D(n.TEXTURE_2D,te,0,0,ve.width,ve.height,he,be,ve.data):t.texImage2D(n.TEXTURE_2D,te,me,ve.width,ve.height,0,he,be,ve.data);M.generateMipmaps=!1}else $e?(F&&t.texStorage2D(n.TEXTURE_2D,Te,me,J.width,J.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,J.width,J.height,he,be,J.data)):t.texImage2D(n.TEXTURE_2D,0,me,J.width,J.height,0,he,be,J.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){$e&&F&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Te,me,Ue[0].width,Ue[0].height,J.depth);for(let te=0,ge=Ue.length;te<ge;te++)ve=Ue[te],M.format!==fn?he!==null?$e?t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,te,0,0,0,ve.width,ve.height,J.depth,he,ve.data,0,0):t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,te,me,ve.width,ve.height,J.depth,0,ve.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):$e?t.texSubImage3D(n.TEXTURE_2D_ARRAY,te,0,0,0,ve.width,ve.height,J.depth,he,be,ve.data):t.texImage3D(n.TEXTURE_2D_ARRAY,te,me,ve.width,ve.height,J.depth,0,he,be,ve.data)}else{$e&&F&&t.texStorage2D(n.TEXTURE_2D,Te,me,Ue[0].width,Ue[0].height);for(let te=0,ge=Ue.length;te<ge;te++)ve=Ue[te],M.format!==fn?he!==null?$e?t.compressedTexSubImage2D(n.TEXTURE_2D,te,0,0,ve.width,ve.height,he,ve.data):t.compressedTexImage2D(n.TEXTURE_2D,te,me,ve.width,ve.height,0,ve.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):$e?t.texSubImage2D(n.TEXTURE_2D,te,0,0,ve.width,ve.height,he,be,ve.data):t.texImage2D(n.TEXTURE_2D,te,me,ve.width,ve.height,0,he,be,ve.data)}else if(M.isDataArrayTexture)$e?(F&&t.texStorage3D(n.TEXTURE_2D_ARRAY,Te,me,J.width,J.height,J.depth),t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,J.width,J.height,J.depth,he,be,J.data)):t.texImage3D(n.TEXTURE_2D_ARRAY,0,me,J.width,J.height,J.depth,0,he,be,J.data);else if(M.isData3DTexture)$e?(F&&t.texStorage3D(n.TEXTURE_3D,Te,me,J.width,J.height,J.depth),t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,J.width,J.height,J.depth,he,be,J.data)):t.texImage3D(n.TEXTURE_3D,0,me,J.width,J.height,J.depth,0,he,be,J.data);else if(M.isFramebufferTexture){if(F)if($e)t.texStorage2D(n.TEXTURE_2D,Te,me,J.width,J.height);else{let te=J.width,ge=J.height;for(let xe=0;xe<Te;xe++)t.texImage2D(n.TEXTURE_2D,xe,me,te,ge,0,he,be,null),te>>=1,ge>>=1}}else if(Ue.length>0&&O){$e&&F&&t.texStorage2D(n.TEXTURE_2D,Te,me,Ue[0].width,Ue[0].height);for(let te=0,ge=Ue.length;te<ge;te++)ve=Ue[te],$e?t.texSubImage2D(n.TEXTURE_2D,te,0,0,he,be,ve):t.texImage2D(n.TEXTURE_2D,te,me,he,be,ve);M.generateMipmaps=!1}else $e?(F&&t.texStorage2D(n.TEXTURE_2D,Te,me,J.width,J.height),t.texSubImage2D(n.TEXTURE_2D,0,0,0,he,be,J)):t.texImage2D(n.TEXTURE_2D,0,me,he,be,J);C(M,O)&&A(oe),Me.__version=ue.version,M.onUpdate&&M.onUpdate(M)}w.__version=M.version}function et(w,M,k){if(M.image.length!==6)return;const oe=Pe(w,M),ce=M.source;t.bindTexture(n.TEXTURE_CUBE_MAP,w.__webglTexture,n.TEXTURE0+k);const ue=i.get(ce);if(ce.version!==ue.__version||oe===!0){t.activeTexture(n.TEXTURE0+k),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,M.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,M.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,M.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const Me=M.isCompressedTexture||M.image[0].isCompressedTexture,de=M.image[0]&&M.image[0].isDataTexture,J=[];for(let te=0;te<6;te++)!Me&&!de?J[te]=_(M.image[te],!1,!0,c):J[te]=de?M.image[te].image:M.image[te],J[te]=Ee(M,J[te]);const O=J[0],he=y(O)||a,be=s.convert(M.format,M.colorSpace),me=s.convert(M.type),ve=U(M.internalFormat,be,me,M.colorSpace),Ue=a&&M.isVideoTexture!==!0,$e=ue.__version===void 0||oe===!0;let F=E(M,O,he);Re(n.TEXTURE_CUBE_MAP,M,he);let Te;if(Me){Ue&&$e&&t.texStorage2D(n.TEXTURE_CUBE_MAP,F,ve,O.width,O.height);for(let te=0;te<6;te++){Te=J[te].mipmaps;for(let ge=0;ge<Te.length;ge++){const xe=Te[ge];M.format!==fn?be!==null?Ue?t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,0,0,xe.width,xe.height,be,xe.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,ve,xe.width,xe.height,0,xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ue?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,0,0,xe.width,xe.height,be,me,xe.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge,ve,xe.width,xe.height,0,be,me,xe.data)}}}else{Te=M.mipmaps,Ue&&$e&&(Te.length>0&&F++,t.texStorage2D(n.TEXTURE_CUBE_MAP,F,ve,J[0].width,J[0].height));for(let te=0;te<6;te++)if(de){Ue?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,J[te].width,J[te].height,be,me,J[te].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,ve,J[te].width,J[te].height,0,be,me,J[te].data);for(let ge=0;ge<Te.length;ge++){const We=Te[ge].image[te].image;Ue?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,0,0,We.width,We.height,be,me,We.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,ve,We.width,We.height,0,be,me,We.data)}}else{Ue?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,0,0,be,me,J[te]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,0,ve,be,me,J[te]);for(let ge=0;ge<Te.length;ge++){const xe=Te[ge];Ue?t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,0,0,be,me,xe.image[te]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+te,ge+1,ve,be,me,xe.image[te])}}}C(M,he)&&A(n.TEXTURE_CUBE_MAP),ue.__version=ce.version,M.onUpdate&&M.onUpdate(M)}w.__version=M.version}function Ie(w,M,k,oe,ce,ue){const Me=s.convert(k.format,k.colorSpace),de=s.convert(k.type),J=U(k.internalFormat,Me,de,k.colorSpace);if(!i.get(M).__hasExternalTextures){const he=Math.max(1,M.width>>ue),be=Math.max(1,M.height>>ue);ce===n.TEXTURE_3D||ce===n.TEXTURE_2D_ARRAY?t.texImage3D(ce,ue,J,he,be,M.depth,0,Me,de,null):t.texImage2D(ce,ue,J,he,be,0,Me,de,null)}t.bindFramebuffer(n.FRAMEBUFFER,w),se(M)?f.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,oe,ce,i.get(k).__webglTexture,0,$(M)):(ce===n.TEXTURE_2D||ce>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&ce<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,oe,ce,i.get(k).__webglTexture,ue),t.bindFramebuffer(n.FRAMEBUFFER,null)}function x(w,M,k){if(n.bindRenderbuffer(n.RENDERBUFFER,w),M.depthBuffer&&!M.stencilBuffer){let oe=n.DEPTH_COMPONENT16;if(k||se(M)){const ce=M.depthTexture;ce&&ce.isDepthTexture&&(ce.type===oi?oe=n.DEPTH_COMPONENT32F:ce.type===bi&&(oe=n.DEPTH_COMPONENT24));const ue=$(M);se(M)?f.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,ue,oe,M.width,M.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,ue,oe,M.width,M.height)}else n.renderbufferStorage(n.RENDERBUFFER,oe,M.width,M.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,w)}else if(M.depthBuffer&&M.stencilBuffer){const oe=$(M);k&&se(M)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,oe,n.DEPTH24_STENCIL8,M.width,M.height):se(M)?f.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,oe,n.DEPTH24_STENCIL8,M.width,M.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,M.width,M.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,w)}else{const oe=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let ce=0;ce<oe.length;ce++){const ue=oe[ce],Me=s.convert(ue.format,ue.colorSpace),de=s.convert(ue.type),J=U(ue.internalFormat,Me,de,ue.colorSpace),O=$(M);k&&se(M)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,O,J,M.width,M.height):se(M)?f.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,O,J,M.width,M.height):n.renderbufferStorage(n.RENDERBUFFER,J,M.width,M.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function P(w,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,w),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),re(M.depthTexture,0);const oe=i.get(M.depthTexture).__webglTexture,ce=$(M);if(M.depthTexture.format===$i)se(M)?f.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,oe,0,ce):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,oe,0);else if(M.depthTexture.format===V1)se(M)?f.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,oe,0,ce):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,oe,0);else throw new Error("Unknown depthTexture format")}function D(w){const M=i.get(w),k=w.isWebGLCubeRenderTarget===!0;if(w.depthTexture&&!M.__autoAllocateDepthBuffer){if(k)throw new Error("target.depthTexture not supported in Cube render targets");P(M.__webglFramebuffer,w)}else if(k){M.__webglDepthbuffer=[];for(let oe=0;oe<6;oe++)t.bindFramebuffer(n.FRAMEBUFFER,M.__webglFramebuffer[oe]),M.__webglDepthbuffer[oe]=n.createRenderbuffer(),x(M.__webglDepthbuffer[oe],w,!1)}else t.bindFramebuffer(n.FRAMEBUFFER,M.__webglFramebuffer),M.__webglDepthbuffer=n.createRenderbuffer(),x(M.__webglDepthbuffer,w,!1);t.bindFramebuffer(n.FRAMEBUFFER,null)}function z(w,M,k){const oe=i.get(w);M!==void 0&&Ie(oe.__webglFramebuffer,w,w.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),k!==void 0&&D(w)}function N(w){const M=w.texture,k=i.get(w),oe=i.get(M);w.addEventListener("dispose",Y),w.isWebGLMultipleRenderTargets!==!0&&(oe.__webglTexture===void 0&&(oe.__webglTexture=n.createTexture()),oe.__version=M.version,o.memory.textures++);const ce=w.isWebGLCubeRenderTarget===!0,ue=w.isWebGLMultipleRenderTargets===!0,Me=y(w)||a;if(ce){k.__webglFramebuffer=[];for(let de=0;de<6;de++)if(a&&M.mipmaps&&M.mipmaps.length>0){k.__webglFramebuffer[de]=[];for(let J=0;J<M.mipmaps.length;J++)k.__webglFramebuffer[de][J]=n.createFramebuffer()}else k.__webglFramebuffer[de]=n.createFramebuffer()}else{if(a&&M.mipmaps&&M.mipmaps.length>0){k.__webglFramebuffer=[];for(let de=0;de<M.mipmaps.length;de++)k.__webglFramebuffer[de]=n.createFramebuffer()}else k.__webglFramebuffer=n.createFramebuffer();if(ue)if(r.drawBuffers){const de=w.texture;for(let J=0,O=de.length;J<O;J++){const he=i.get(de[J]);he.__webglTexture===void 0&&(he.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&w.samples>0&&se(w)===!1){const de=ue?M:[M];k.__webglMultisampledFramebuffer=n.createFramebuffer(),k.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,k.__webglMultisampledFramebuffer);for(let J=0;J<de.length;J++){const O=de[J];k.__webglColorRenderbuffer[J]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,k.__webglColorRenderbuffer[J]);const he=s.convert(O.format,O.colorSpace),be=s.convert(O.type),me=U(O.internalFormat,he,be,O.colorSpace,w.isXRRenderTarget===!0),ve=$(w);n.renderbufferStorageMultisample(n.RENDERBUFFER,ve,me,w.width,w.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+J,n.RENDERBUFFER,k.__webglColorRenderbuffer[J])}n.bindRenderbuffer(n.RENDERBUFFER,null),w.depthBuffer&&(k.__webglDepthRenderbuffer=n.createRenderbuffer(),x(k.__webglDepthRenderbuffer,w,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(ce){t.bindTexture(n.TEXTURE_CUBE_MAP,oe.__webglTexture),Re(n.TEXTURE_CUBE_MAP,M,Me);for(let de=0;de<6;de++)if(a&&M.mipmaps&&M.mipmaps.length>0)for(let J=0;J<M.mipmaps.length;J++)Ie(k.__webglFramebuffer[de][J],w,M,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+de,J);else Ie(k.__webglFramebuffer[de],w,M,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+de,0);C(M,Me)&&A(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(ue){const de=w.texture;for(let J=0,O=de.length;J<O;J++){const he=de[J],be=i.get(he);t.bindTexture(n.TEXTURE_2D,be.__webglTexture),Re(n.TEXTURE_2D,he,Me),Ie(k.__webglFramebuffer,w,he,n.COLOR_ATTACHMENT0+J,n.TEXTURE_2D,0),C(he,Me)&&A(n.TEXTURE_2D)}t.unbindTexture()}else{let de=n.TEXTURE_2D;if((w.isWebGL3DRenderTarget||w.isWebGLArrayRenderTarget)&&(a?de=w.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(de,oe.__webglTexture),Re(de,M,Me),a&&M.mipmaps&&M.mipmaps.length>0)for(let J=0;J<M.mipmaps.length;J++)Ie(k.__webglFramebuffer[J],w,M,n.COLOR_ATTACHMENT0,de,J);else Ie(k.__webglFramebuffer,w,M,n.COLOR_ATTACHMENT0,de,0);C(M,Me)&&A(de),t.unbindTexture()}w.depthBuffer&&D(w)}function Q(w){const M=y(w)||a,k=w.isWebGLMultipleRenderTargets===!0?w.texture:[w.texture];for(let oe=0,ce=k.length;oe<ce;oe++){const ue=k[oe];if(C(ue,M)){const Me=w.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,de=i.get(ue).__webglTexture;t.bindTexture(Me,de),A(Me),t.unbindTexture()}}}function ee(w){if(a&&w.samples>0&&se(w)===!1){const M=w.isWebGLMultipleRenderTargets?w.texture:[w.texture],k=w.width,oe=w.height;let ce=n.COLOR_BUFFER_BIT;const ue=[],Me=w.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,de=i.get(w),J=w.isWebGLMultipleRenderTargets===!0;if(J)for(let O=0;O<M.length;O++)t.bindFramebuffer(n.FRAMEBUFFER,de.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+O,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,de.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+O,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,de.__webglMultisampledFramebuffer),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,de.__webglFramebuffer);for(let O=0;O<M.length;O++){ue.push(n.COLOR_ATTACHMENT0+O),w.depthBuffer&&ue.push(Me);const he=de.__ignoreDepthValues!==void 0?de.__ignoreDepthValues:!1;if(he===!1&&(w.depthBuffer&&(ce|=n.DEPTH_BUFFER_BIT),w.stencilBuffer&&(ce|=n.STENCIL_BUFFER_BIT)),J&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,de.__webglColorRenderbuffer[O]),he===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[Me]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[Me])),J){const be=i.get(M[O]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,be,0)}n.blitFramebuffer(0,0,k,oe,0,0,k,oe,ce,n.NEAREST),d&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,ue)}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),J)for(let O=0;O<M.length;O++){t.bindFramebuffer(n.FRAMEBUFFER,de.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+O,n.RENDERBUFFER,de.__webglColorRenderbuffer[O]);const he=i.get(M[O]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,de.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+O,n.TEXTURE_2D,he,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,de.__webglMultisampledFramebuffer)}}function $(w){return Math.min(h,w.samples)}function se(w){const M=i.get(w);return a&&w.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function ne(w){const M=o.render.frame;g.get(w)!==M&&(g.set(w,M),w.update())}function Ee(w,M){const k=w.colorSpace,oe=w.format,ce=w.type;return w.isCompressedTexture===!0||w.isVideoTexture===!0||w.format===i2||k!==Wn&&k!==Ji&&(k===ot||k===Co?a===!1?e.has("EXT_sRGB")===!0&&oe===fn?(w.format=i2,w.minFilter=en,w.generateMipmaps=!1):M=Ch.sRGBToLinear(M):(oe!==fn||ce!==Pi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",k)),M}this.allocateTextureUnit=j,this.resetTextureUnits=X,this.setTexture2D=re,this.setTexture2DArray=W,this.setTexture3D=q,this.setTextureCube=pe,this.rebindTextures=z,this.setupRenderTarget=N,this.updateRenderTargetMipmap=Q,this.updateMultisampleRenderTarget=ee,this.setupDepthRenderbuffer=D,this.setupFrameBufferTexture=Ie,this.useMultisampledRTT=se}const d9=0,Ct=1;function p9(n,e,t){const i=t.isWebGL2;function r(s,o=Ji){let a;const l=o===ot||o===Co?Ct:d9;if(s===Pi)return n.UNSIGNED_BYTE;if(s===xh)return n.UNSIGNED_SHORT_4_4_4_4;if(s===yh)return n.UNSIGNED_SHORT_5_5_5_1;if(s===Od)return n.BYTE;if(s===Nd)return n.SHORT;if(s===q2)return n.UNSIGNED_SHORT;if(s===_h)return n.INT;if(s===bi)return n.UNSIGNED_INT;if(s===oi)return n.FLOAT;if(s===Nr)return i?n.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===Fd)return n.ALPHA;if(s===fn)return n.RGBA;if(s===Bd)return n.LUMINANCE;if(s===zd)return n.LUMINANCE_ALPHA;if(s===$i)return n.DEPTH_COMPONENT;if(s===V1)return n.DEPTH_STENCIL;if(s===i2)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===kd)return n.RED;if(s===Mh)return n.RED_INTEGER;if(s===Hd)return n.RG;if(s===Sh)return n.RG_INTEGER;if(s===Eh)return n.RGBA_INTEGER;if(s===qo||s===Yo||s===Ko||s===$o)if(l===Ct)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===qo)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Yo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ko)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===$o)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===qo)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Yo)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ko)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===$o)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===cc||s===uc||s===hc||s===fc)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===cc)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===uc)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===hc)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===fc)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Vd)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===dc||s===pc)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===dc)return l===Ct?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===pc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===mc||s===gc||s===vc||s===_c||s===xc||s===yc||s===Mc||s===Sc||s===Ec||s===bc||s===Tc||s===wc||s===Ac||s===Cc)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===mc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===gc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===vc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===_c)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===xc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===yc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Mc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Sc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Ec)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===bc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Tc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===wc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Ac)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Cc)return l===Ct?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Zo||s===Rc||s===Pc)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Zo)return l===Ct?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Rc)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===Pc)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===Gd||s===Lc||s===Ic||s===Dc)if(a=e.get("EXT_texture_compression_rgtc"),a!==null){if(s===Zo)return a.COMPRESSED_RED_RGTC1_EXT;if(s===Lc)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===Ic)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Dc)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Ki?i?n.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):n[s]!==void 0?n[s]:null}return{convert:r}}class m9 extends Ht{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}let ci=class extends lt{constructor(){super(),this.isGroup=!0,this.type="Group"}};const g9={type:"move"};class ya{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ci,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ci,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ci,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const m=t.getJointPose(v,i),p=this._getHandJoint(c,v);m!==null&&(p.matrix.fromArray(m.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=m.radius),p.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,g=.005;c.inputState.pinching&&f>d+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(g9)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new ci;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class v9 extends Ot{constructor(e,t,i,r,s,o,a,l,c,u){if(u=u!==void 0?u:$i,u!==$i&&u!==V1)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===$i&&(i=bi),i===void 0&&u===V1&&(i=Ki),super(null,r,s,o,a,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Ut,this.minFilter=l!==void 0?l:Ut,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class _9 extends t1{constructor(e,t){super();const i=this;let r=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,f=null,d=null,g=null;const v=t.getContextAttributes();let m=null,p=null;const S=[],_=[],y=new Ht;y.layers.enable(1),y.viewport=new Ye;const b=new Ht;b.layers.enable(2),b.viewport=new Ye;const C=[y,b],A=new m9;A.layers.enable(1),A.layers.enable(2);let U=null,E=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let q=S[W];return q===void 0&&(q=new ya,S[W]=q),q.getTargetRaySpace()},this.getControllerGrip=function(W){let q=S[W];return q===void 0&&(q=new ya,S[W]=q),q.getGripSpace()},this.getHand=function(W){let q=S[W];return q===void 0&&(q=new ya,S[W]=q),q.getHandSpace()};function T(W){const q=_.indexOf(W.inputSource);if(q===-1)return;const pe=S[q];pe!==void 0&&(pe.update(W.inputSource,W.frame,c||o),pe.dispatchEvent({type:W.type,data:W.inputSource}))}function G(){r.removeEventListener("select",T),r.removeEventListener("selectstart",T),r.removeEventListener("selectend",T),r.removeEventListener("squeeze",T),r.removeEventListener("squeezestart",T),r.removeEventListener("squeezeend",T),r.removeEventListener("end",G),r.removeEventListener("inputsourceschange",Y);for(let W=0;W<S.length;W++){const q=_[W];q!==null&&(_[W]=null,S[W].disconnect(q))}U=null,E=null,e.setRenderTarget(m),d=null,f=null,h=null,r=null,p=null,re.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){s=W,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){a=W,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(W){c=W},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return h},this.getFrame=function(){return g},this.getSession=function(){return r},this.setSession=async function(W){if(r=W,r!==null){if(m=e.getRenderTarget(),r.addEventListener("select",T),r.addEventListener("selectstart",T),r.addEventListener("selectend",T),r.addEventListener("squeeze",T),r.addEventListener("squeezestart",T),r.addEventListener("squeezeend",T),r.addEventListener("end",G),r.addEventListener("inputsourceschange",Y),v.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const q={antialias:r.renderState.layers===void 0?v.antialias:!0,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,q),r.updateRenderState({baseLayer:d}),p=new kt(d.framebufferWidth,d.framebufferHeight,{format:fn,type:Pi,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let q=null,pe=null,_e=null;v.depth&&(_e=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,q=v.stencil?V1:$i,pe=v.stencil?Ki:bi);const Se={colorFormat:t.RGBA8,depthFormat:_e,scaleFactor:s};h=new XRWebGLBinding(r,t),f=h.createProjectionLayer(Se),r.updateRenderState({layers:[f]}),p=new kt(f.textureWidth,f.textureHeight,{format:fn,type:Pi,depthTexture:new v9(f.textureWidth,f.textureHeight,pe,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0});const Ae=e.properties.get(p);Ae.__ignoreDepthValues=f.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),re.setContext(r),re.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function Y(W){for(let q=0;q<W.removed.length;q++){const pe=W.removed[q],_e=_.indexOf(pe);_e>=0&&(_[_e]=null,S[_e].disconnect(pe))}for(let q=0;q<W.added.length;q++){const pe=W.added[q];let _e=_.indexOf(pe);if(_e===-1){for(let Ae=0;Ae<S.length;Ae++)if(Ae>=_.length){_.push(pe),_e=Ae;break}else if(_[Ae]===null){_[Ae]=pe,_e=Ae;break}if(_e===-1)break}const Se=S[_e];Se&&Se.connect(pe)}}const B=new L,H=new L;function I(W,q,pe){B.setFromMatrixPosition(q.matrixWorld),H.setFromMatrixPosition(pe.matrixWorld);const _e=B.distanceTo(H),Se=q.projectionMatrix.elements,Ae=pe.projectionMatrix.elements,Re=Se[14]/(Se[10]-1),Pe=Se[14]/(Se[10]+1),Be=(Se[9]+1)/Se[5],et=(Se[9]-1)/Se[5],Ie=(Se[8]-1)/Se[0],x=(Ae[8]+1)/Ae[0],P=Re*Ie,D=Re*x,z=_e/(-Ie+x),N=z*-Ie;q.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(N),W.translateZ(z),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const Q=Re+z,ee=Pe+z,$=P-N,se=D+(_e-N),ne=Be*Pe/ee*Q,Ee=et*Pe/ee*Q;W.projectionMatrix.makePerspective($,se,ne,Ee,Q,ee),W.projectionMatrixInverse.copy(W.projectionMatrix).invert()}function V(W,q){q===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(q.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(r===null)return;A.near=b.near=y.near=W.near,A.far=b.far=y.far=W.far,(U!==A.near||E!==A.far)&&(r.updateRenderState({depthNear:A.near,depthFar:A.far}),U=A.near,E=A.far);const q=W.parent,pe=A.cameras;V(A,q);for(let _e=0;_e<pe.length;_e++)V(pe[_e],q);pe.length===2?I(A,y,b):A.projectionMatrix.copy(y.projectionMatrix),X(W,A,q)};function X(W,q,pe){pe===null?W.matrix.copy(q.matrixWorld):(W.matrix.copy(pe.matrixWorld),W.matrix.invert(),W.matrix.multiply(q.matrixWorld)),W.matrix.decompose(W.position,W.quaternion,W.scale),W.updateMatrixWorld(!0),W.projectionMatrix.copy(q.projectionMatrix),W.projectionMatrixInverse.copy(q.projectionMatrixInverse),W.isPerspectiveCamera&&(W.fov=G1*2*Math.atan(1/W.projectionMatrix.elements[5]),W.zoom=1)}this.getCamera=function(){return A},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(W){l=W,f!==null&&(f.fixedFoveation=W),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=W)};let j=null;function ie(W,q){if(u=q.getViewerPose(c||o),g=q,u!==null){const pe=u.views;d!==null&&(e.setRenderTargetFramebuffer(p,d.framebuffer),e.setRenderTarget(p));let _e=!1;pe.length!==A.cameras.length&&(A.cameras.length=0,_e=!0);for(let Se=0;Se<pe.length;Se++){const Ae=pe[Se];let Re=null;if(d!==null)Re=d.getViewport(Ae);else{const Be=h.getViewSubImage(f,Ae);Re=Be.viewport,Se===0&&(e.setRenderTargetTextures(p,Be.colorTexture,f.ignoreDepthValues?void 0:Be.depthStencilTexture),e.setRenderTarget(p))}let Pe=C[Se];Pe===void 0&&(Pe=new Ht,Pe.layers.enable(Se),Pe.viewport=new Ye,C[Se]=Pe),Pe.matrix.fromArray(Ae.transform.matrix),Pe.matrix.decompose(Pe.position,Pe.quaternion,Pe.scale),Pe.projectionMatrix.fromArray(Ae.projectionMatrix),Pe.projectionMatrixInverse.copy(Pe.projectionMatrix).invert(),Pe.viewport.set(Re.x,Re.y,Re.width,Re.height),Se===0&&(A.matrix.copy(Pe.matrix),A.matrix.decompose(A.position,A.quaternion,A.scale)),_e===!0&&A.cameras.push(Pe)}}for(let pe=0;pe<S.length;pe++){const _e=_[pe],Se=S[pe];_e!==null&&Se!==void 0&&Se.update(_e,q,c||o)}j&&j(W,q),q.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:q}),g=null}const re=new Nh;re.setAnimationLoop(ie),this.setAnimationLoop=function(W){j=W},this.dispose=function(){}}}function x9(n,e){function t(m,p){m.matrixAutoUpdate===!0&&m.updateMatrix(),p.value.copy(m.matrix)}function i(m,p){p.color.getRGB(m.fogColor.value,Dh(n)),p.isFog?(m.fogNear.value=p.near,m.fogFar.value=p.far):p.isFogExp2&&(m.fogDensity.value=p.density)}function r(m,p,S,_,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(m,p):p.isMeshToonMaterial?(s(m,p),h(m,p)):p.isMeshPhongMaterial?(s(m,p),u(m,p)):p.isMeshStandardMaterial?(s(m,p),f(m,p),p.isMeshPhysicalMaterial&&d(m,p,y)):p.isMeshMatcapMaterial?(s(m,p),g(m,p)):p.isMeshDepthMaterial?s(m,p):p.isMeshDistanceMaterial?(s(m,p),v(m,p)):p.isMeshNormalMaterial?s(m,p):p.isLineBasicMaterial?(o(m,p),p.isLineDashedMaterial&&a(m,p)):p.isPointsMaterial?l(m,p,S,_):p.isSpriteMaterial?c(m,p):p.isShadowMaterial?(m.color.value.copy(p.color),m.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(m,p){m.opacity.value=p.opacity,p.color&&m.diffuse.value.copy(p.color),p.emissive&&m.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(m.map.value=p.map,t(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.bumpMap&&(m.bumpMap.value=p.bumpMap,t(p.bumpMap,m.bumpMapTransform),m.bumpScale.value=p.bumpScale,p.side===Zt&&(m.bumpScale.value*=-1)),p.normalMap&&(m.normalMap.value=p.normalMap,t(p.normalMap,m.normalMapTransform),m.normalScale.value.copy(p.normalScale),p.side===Zt&&m.normalScale.value.negate()),p.displacementMap&&(m.displacementMap.value=p.displacementMap,t(p.displacementMap,m.displacementMapTransform),m.displacementScale.value=p.displacementScale,m.displacementBias.value=p.displacementBias),p.emissiveMap&&(m.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,m.emissiveMapTransform)),p.specularMap&&(m.specularMap.value=p.specularMap,t(p.specularMap,m.specularMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest);const S=e.get(p).envMap;if(S&&(m.envMap.value=S,m.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=p.reflectivity,m.ior.value=p.ior,m.refractionRatio.value=p.refractionRatio),p.lightMap){m.lightMap.value=p.lightMap;const _=n._useLegacyLights===!0?Math.PI:1;m.lightMapIntensity.value=p.lightMapIntensity*_,t(p.lightMap,m.lightMapTransform)}p.aoMap&&(m.aoMap.value=p.aoMap,m.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,m.aoMapTransform))}function o(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,p.map&&(m.map.value=p.map,t(p.map,m.mapTransform))}function a(m,p){m.dashSize.value=p.dashSize,m.totalSize.value=p.dashSize+p.gapSize,m.scale.value=p.scale}function l(m,p,S,_){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.size.value=p.size*S,m.scale.value=_*.5,p.map&&(m.map.value=p.map,t(p.map,m.uvTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function c(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.rotation.value=p.rotation,p.map&&(m.map.value=p.map,t(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,t(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function u(m,p){m.specular.value.copy(p.specular),m.shininess.value=Math.max(p.shininess,1e-4)}function h(m,p){p.gradientMap&&(m.gradientMap.value=p.gradientMap)}function f(m,p){m.metalness.value=p.metalness,p.metalnessMap&&(m.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,m.metalnessMapTransform)),m.roughness.value=p.roughness,p.roughnessMap&&(m.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,m.roughnessMapTransform)),e.get(p).envMap&&(m.envMapIntensity.value=p.envMapIntensity)}function d(m,p,S){m.ior.value=p.ior,p.sheen>0&&(m.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),m.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(m.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,m.sheenColorMapTransform)),p.sheenRoughnessMap&&(m.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,m.sheenRoughnessMapTransform))),p.clearcoat>0&&(m.clearcoat.value=p.clearcoat,m.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(m.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,m.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(m.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===Zt&&m.clearcoatNormalScale.value.negate())),p.iridescence>0&&(m.iridescence.value=p.iridescence,m.iridescenceIOR.value=p.iridescenceIOR,m.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(m.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,m.iridescenceMapTransform)),p.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),p.transmission>0&&(m.transmission.value=p.transmission,m.transmissionSamplerMap.value=S.texture,m.transmissionSamplerSize.value.set(S.width,S.height),p.transmissionMap&&(m.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,m.transmissionMapTransform)),m.thickness.value=p.thickness,p.thicknessMap&&(m.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=p.attenuationDistance,m.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(m.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(m.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=p.specularIntensity,m.specularColor.value.copy(p.specularColor),p.specularColorMap&&(m.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,m.specularColorMapTransform)),p.specularIntensityMap&&(m.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,m.specularIntensityMapTransform))}function g(m,p){p.matcap&&(m.matcap.value=p.matcap)}function v(m,p){const S=e.get(p).light;m.referencePosition.value.setFromMatrixPosition(S.matrixWorld),m.nearDistance.value=S.shadow.camera.near,m.farDistance.value=S.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function y9(n,e,t,i){let r={},s={},o=[];const a=t.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(S,_){const y=_.program;i.uniformBlockBinding(S,y)}function c(S,_){let y=r[S.id];y===void 0&&(g(S),y=u(S),r[S.id]=y,S.addEventListener("dispose",m));const b=_.program;i.updateUBOMapping(S,b);const C=e.render.frame;s[S.id]!==C&&(f(S),s[S.id]=C)}function u(S){const _=h();S.__bindingPointIndex=_;const y=n.createBuffer(),b=S.__size,C=S.usage;return n.bindBuffer(n.UNIFORM_BUFFER,y),n.bufferData(n.UNIFORM_BUFFER,b,C),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,_,y),y}function h(){for(let S=0;S<a;S++)if(o.indexOf(S)===-1)return o.push(S),S;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(S){const _=r[S.id],y=S.uniforms,b=S.__cache;n.bindBuffer(n.UNIFORM_BUFFER,_);for(let C=0,A=y.length;C<A;C++){const U=y[C];if(d(U,C,b)===!0){const E=U.__offset,T=Array.isArray(U.value)?U.value:[U.value];let G=0;for(let Y=0;Y<T.length;Y++){const B=T[Y],H=v(B);typeof B=="number"?(U.__data[0]=B,n.bufferSubData(n.UNIFORM_BUFFER,E+G,U.__data)):B.isMatrix3?(U.__data[0]=B.elements[0],U.__data[1]=B.elements[1],U.__data[2]=B.elements[2],U.__data[3]=B.elements[0],U.__data[4]=B.elements[3],U.__data[5]=B.elements[4],U.__data[6]=B.elements[5],U.__data[7]=B.elements[0],U.__data[8]=B.elements[6],U.__data[9]=B.elements[7],U.__data[10]=B.elements[8],U.__data[11]=B.elements[0]):(B.toArray(U.__data,G),G+=H.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,E,U.__data)}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function d(S,_,y){const b=S.value;if(y[_]===void 0){if(typeof b=="number")y[_]=b;else{const C=Array.isArray(b)?b:[b],A=[];for(let U=0;U<C.length;U++)A.push(C[U].clone());y[_]=A}return!0}else if(typeof b=="number"){if(y[_]!==b)return y[_]=b,!0}else{const C=Array.isArray(y[_])?y[_]:[y[_]],A=Array.isArray(b)?b:[b];for(let U=0;U<C.length;U++){const E=C[U];if(E.equals(A[U])===!1)return E.copy(A[U]),!0}}return!1}function g(S){const _=S.uniforms;let y=0;const b=16;let C=0;for(let A=0,U=_.length;A<U;A++){const E=_[A],T={boundary:0,storage:0},G=Array.isArray(E.value)?E.value:[E.value];for(let Y=0,B=G.length;Y<B;Y++){const H=G[Y],I=v(H);T.boundary+=I.boundary,T.storage+=I.storage}if(E.__data=new Float32Array(T.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=y,A>0){C=y%b;const Y=b-C;C!==0&&Y-T.boundary<0&&(y+=b-C,E.__offset=y)}y+=T.storage}return C=y%b,C>0&&(y+=b-C),S.__size=y,S.__cache={},this}function v(S){const _={boundary:0,storage:0};return typeof S=="number"?(_.boundary=4,_.storage=4):S.isVector2?(_.boundary=8,_.storage=8):S.isVector3||S.isColor?(_.boundary=16,_.storage=12):S.isVector4?(_.boundary=16,_.storage=16):S.isMatrix3?(_.boundary=48,_.storage=48):S.isMatrix4?(_.boundary=64,_.storage=64):S.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",S),_}function m(S){const _=S.target;_.removeEventListener("dispose",m);const y=o.indexOf(_.__bindingPointIndex);o.splice(y,1),n.deleteBuffer(r[_.id]),delete r[_.id],delete s[_.id]}function p(){for(const S in r)n.deleteBuffer(r[S]);o=[],r={},s={}}return{bind:l,update:c,dispose:p}}class Vh{constructor(e={}){const{canvas:t=m5(),context:i=null,depth:r=!0,stencil:s=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=e;this.isWebGLRenderer=!0;let f;i!==null?f=i.getContextAttributes().alpha:f=o;const d=new Uint32Array(4),g=new Int32Array(4);let v=null,m=null;const p=[],S=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ot,this._useLegacyLights=!1,this.toneMapping=Ri,this.toneMappingExposure=1;const _=this;let y=!1,b=0,C=0,A=null,U=-1,E=null;const T=new Ye,G=new Ye;let Y=null;const B=new we(0);let H=0,I=t.width,V=t.height,X=1,j=null,ie=null;const re=new Ye(0,0,I,V),W=new Ye(0,0,I,V);let q=!1;const pe=new Z2;let _e=!1,Se=!1,Ae=null;const Re=new Le,Pe=new fe,Be=new L,et={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ie(){return A===null?X:1}let x=i;function P(R,K){for(let ae=0;ae<R.length;ae++){const Z=R[ae],le=t.getContext(Z,K);if(le!==null)return le}return null}try{const R={alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${$1}`),t.addEventListener("webglcontextlost",Te,!1),t.addEventListener("webglcontextrestored",te,!1),t.addEventListener("webglcontextcreationerror",ge,!1),x===null){const K=["webgl2","webgl","experimental-webgl"];if(_.isWebGL1Renderer===!0&&K.shift(),x=P(K,R),x===null)throw P(K)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&x instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),x.getShaderPrecisionFormat===void 0&&(x.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let D,z,N,Q,ee,$,se,ne,Ee,w,M,k,oe,ce,ue,Me,de,J,O,he,be,me,ve,Ue;function $e(){D=new L8(x),z=new T8(x,D,e),D.init(z),me=new p9(x,D,z),N=new h9(x,D,z),Q=new U8(x),ee=new J7,$=new f9(x,D,N,ee,z,me,Q),se=new A8(_),ne=new P8(_),Ee=new W5(x,z),ve=new E8(x,D,Ee,z),w=new I8(x,Ee,Q,ve),M=new B8(x,w,Ee,Q),O=new F8(x,z,$),Me=new w8(ee),k=new Z7(_,se,ne,D,z,ve,Me),oe=new x9(_,ee),ce=new e9,ue=new o9(D,z),J=new S8(_,se,ne,N,M,f,l),de=new u9(_,M,z),Ue=new y9(x,Q,z,N),he=new b8(x,D,Q,z),be=new D8(x,D,Q,z),Q.programs=k.programs,_.capabilities=z,_.extensions=D,_.properties=ee,_.renderLists=ce,_.shadowMap=de,_.state=N,_.info=Q}$e();const F=new _9(_,x);this.xr=F,this.getContext=function(){return x},this.getContextAttributes=function(){return x.getContextAttributes()},this.forceContextLoss=function(){const R=D.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=D.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(R){R!==void 0&&(X=R,this.setSize(I,V,!1))},this.getSize=function(R){return R.set(I,V)},this.setSize=function(R,K,ae=!0){if(F.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}I=R,V=K,t.width=Math.floor(R*X),t.height=Math.floor(K*X),ae===!0&&(t.style.width=R+"px",t.style.height=K+"px"),this.setViewport(0,0,R,K)},this.getDrawingBufferSize=function(R){return R.set(I*X,V*X).floor()},this.setDrawingBufferSize=function(R,K,ae){I=R,V=K,X=ae,t.width=Math.floor(R*ae),t.height=Math.floor(K*ae),this.setViewport(0,0,R,K)},this.getCurrentViewport=function(R){return R.copy(T)},this.getViewport=function(R){return R.copy(re)},this.setViewport=function(R,K,ae,Z){R.isVector4?re.set(R.x,R.y,R.z,R.w):re.set(R,K,ae,Z),N.viewport(T.copy(re).multiplyScalar(X).floor())},this.getScissor=function(R){return R.copy(W)},this.setScissor=function(R,K,ae,Z){R.isVector4?W.set(R.x,R.y,R.z,R.w):W.set(R,K,ae,Z),N.scissor(G.copy(W).multiplyScalar(X).floor())},this.getScissorTest=function(){return q},this.setScissorTest=function(R){N.setScissorTest(q=R)},this.setOpaqueSort=function(R){j=R},this.setTransparentSort=function(R){ie=R},this.getClearColor=function(R){return R.copy(J.getClearColor())},this.setClearColor=function(){J.setClearColor.apply(J,arguments)},this.getClearAlpha=function(){return J.getClearAlpha()},this.setClearAlpha=function(){J.setClearAlpha.apply(J,arguments)},this.clear=function(R=!0,K=!0,ae=!0){let Z=0;if(R){let le=!1;if(A!==null){const Ce=A.texture.format;le=Ce===Eh||Ce===Sh||Ce===Mh}if(le){const Ce=A.texture.type,De=Ce===Pi||Ce===bi||Ce===q2||Ce===Ki||Ce===xh||Ce===yh,Ne=J.getClearColor(),Fe=J.getClearAlpha(),Xe=Ne.r,Oe=Ne.g,He=Ne.b;De?(d[0]=Xe,d[1]=Oe,d[2]=He,d[3]=Fe,x.clearBufferuiv(x.COLOR,0,d)):(g[0]=Xe,g[1]=Oe,g[2]=He,g[3]=Fe,x.clearBufferiv(x.COLOR,0,g))}else Z|=x.COLOR_BUFFER_BIT}K&&(Z|=x.DEPTH_BUFFER_BIT),ae&&(Z|=x.STENCIL_BUFFER_BIT),x.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Te,!1),t.removeEventListener("webglcontextrestored",te,!1),t.removeEventListener("webglcontextcreationerror",ge,!1),ce.dispose(),ue.dispose(),ee.dispose(),se.dispose(),ne.dispose(),M.dispose(),ve.dispose(),Ue.dispose(),k.dispose(),F.dispose(),F.removeEventListener("sessionstart",ct),F.removeEventListener("sessionend",Dn),Ae&&(Ae.dispose(),Ae=null),Xt.stop()};function Te(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function te(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const R=Q.autoReset,K=de.enabled,ae=de.autoUpdate,Z=de.needsUpdate,le=de.type;$e(),Q.autoReset=R,de.enabled=K,de.autoUpdate=ae,de.needsUpdate=Z,de.type=le}function ge(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function xe(R){const K=R.target;K.removeEventListener("dispose",xe),We(K)}function We(R){tt(R),ee.remove(R)}function tt(R){const K=ee.get(R).programs;K!==void 0&&(K.forEach(function(ae){k.releaseProgram(ae)}),R.isShaderMaterial&&k.releaseShaderCache(R))}this.renderBufferDirect=function(R,K,ae,Z,le,Ce){K===null&&(K=et);const De=le.isMesh&&le.matrixWorld.determinant()<0,Ne=R0(R,K,ae,Z,le);N.setMaterial(Z,De);let Fe=ae.index,Xe=1;if(Z.wireframe===!0){if(Fe=w.getWireframeAttribute(ae),Fe===void 0)return;Xe=2}const Oe=ae.drawRange,He=ae.attributes.position;let dt=Oe.start*Xe,mt=(Oe.start+Oe.count)*Xe;Ce!==null&&(dt=Math.max(dt,Ce.start*Xe),mt=Math.min(mt,(Ce.start+Ce.count)*Xe)),Fe!==null?(dt=Math.max(dt,0),mt=Math.min(mt,Fe.count)):He!=null&&(dt=Math.max(dt,0),mt=Math.min(mt,He.count));const dn=mt-dt;if(dn<0||dn===1/0)return;ve.setup(le,Z,Ne,ae,Fe);let Yn,St=he;if(Fe!==null&&(Yn=Ee.get(Fe),St=be,St.setIndex(Yn)),le.isMesh)Z.wireframe===!0?(N.setLineWidth(Z.wireframeLinewidth*Ie()),St.setMode(x.LINES)):St.setMode(x.TRIANGLES);else if(le.isLine){let Ke=Z.linewidth;Ke===void 0&&(Ke=1),N.setLineWidth(Ke*Ie()),le.isLineSegments?St.setMode(x.LINES):le.isLineLoop?St.setMode(x.LINE_LOOP):St.setMode(x.LINE_STRIP)}else le.isPoints?St.setMode(x.POINTS):le.isSprite&&St.setMode(x.TRIANGLES);if(le.isInstancedMesh)St.renderInstances(dt,dn,le.count);else if(ae.isInstancedBufferGeometry){const Ke=ae._maxInstanceCount!==void 0?ae._maxInstanceCount:1/0,Uo=Math.min(ae.instanceCount,Ke);St.renderInstances(dt,dn,Uo)}else St.render(dt,dn)},this.compile=function(R,K){function ae(Z,le,Ce){Z.transparent===!0&&Z.side===tn&&Z.forceSinglePass===!1?(Z.side=Zt,Z.needsUpdate=!0,Jr(Z,le,Ce),Z.side=hi,Z.needsUpdate=!0,Jr(Z,le,Ce),Z.side=tn):Jr(Z,le,Ce)}m=ue.get(R),m.init(),S.push(m),R.traverseVisible(function(Z){Z.isLight&&Z.layers.test(K.layers)&&(m.pushLight(Z),Z.castShadow&&m.pushShadow(Z))}),m.setupLights(_._useLegacyLights),R.traverse(function(Z){const le=Z.material;if(le)if(Array.isArray(le))for(let Ce=0;Ce<le.length;Ce++){const De=le[Ce];ae(De,R,Z)}else ae(le,R,Z)}),S.pop(),m=null};let st=null;function on(R){st&&st(R)}function ct(){Xt.stop()}function Dn(){Xt.start()}const Xt=new Nh;Xt.setAnimationLoop(on),typeof self<"u"&&Xt.setContext(self),this.setAnimationLoop=function(R){st=R,F.setAnimationLoop(R),R===null?Xt.stop():Xt.start()},F.addEventListener("sessionstart",ct),F.addEventListener("sessionend",Dn),this.render=function(R,K){if(K!==void 0&&K.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(y===!0)return;R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),K.parent===null&&K.matrixWorldAutoUpdate===!0&&K.updateMatrixWorld(),F.enabled===!0&&F.isPresenting===!0&&(F.cameraAutoUpdate===!0&&F.updateCamera(K),K=F.getCamera()),R.isScene===!0&&R.onBeforeRender(_,R,K,A),m=ue.get(R,S.length),m.init(),S.push(m),Re.multiplyMatrices(K.projectionMatrix,K.matrixWorldInverse),pe.setFromProjectionMatrix(Re),Se=this.localClippingEnabled,_e=Me.init(this.clippingPlanes,Se),v=ce.get(R,p.length),v.init(),p.push(v),Ml(R,K,0,_.sortObjects),v.finish(),_.sortObjects===!0&&v.sort(j,ie),this.info.render.frame++,_e===!0&&Me.beginShadows();const ae=m.state.shadowsArray;if(de.render(ae,R,K),_e===!0&&Me.endShadows(),this.info.autoReset===!0&&this.info.reset(),J.render(v,R),m.setupLights(_._useLegacyLights),K.isArrayCamera){const Z=K.cameras;for(let le=0,Ce=Z.length;le<Ce;le++){const De=Z[le];Sl(v,R,De,De.viewport)}}else Sl(v,R,K);A!==null&&($.updateMultisampleRenderTarget(A),$.updateRenderTargetMipmap(A)),R.isScene===!0&&R.onAfterRender(_,R,K),ve.resetDefaultState(),U=-1,E=null,S.pop(),S.length>0?m=S[S.length-1]:m=null,p.pop(),p.length>0?v=p[p.length-1]:v=null};function Ml(R,K,ae,Z){if(R.visible===!1)return;if(R.layers.test(K.layers)){if(R.isGroup)ae=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(K);else if(R.isLight)m.pushLight(R),R.castShadow&&m.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||pe.intersectsSprite(R)){Z&&Be.setFromMatrixPosition(R.matrixWorld).applyMatrix4(Re);const De=M.update(R),Ne=R.material;Ne.visible&&v.push(R,De,Ne,ae,Be.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||pe.intersectsObject(R))){const De=M.update(R),Ne=R.material;if(Z&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),Be.copy(R.boundingSphere.center)):(De.boundingSphere===null&&De.computeBoundingSphere(),Be.copy(De.boundingSphere.center)),Be.applyMatrix4(R.matrixWorld).applyMatrix4(Re)),Array.isArray(Ne)){const Fe=De.groups;for(let Xe=0,Oe=Fe.length;Xe<Oe;Xe++){const He=Fe[Xe],dt=Ne[He.materialIndex];dt&&dt.visible&&v.push(R,De,dt,ae,Be.z,He)}}else Ne.visible&&v.push(R,De,Ne,ae,Be.z,null)}}const Ce=R.children;for(let De=0,Ne=Ce.length;De<Ne;De++)Ml(Ce[De],K,ae,Z)}function Sl(R,K,ae,Z){const le=R.opaque,Ce=R.transmissive,De=R.transparent;m.setupLightsView(ae),_e===!0&&Me.setGlobalState(_.clippingPlanes,ae),Ce.length>0&&C0(le,Ce,K,ae),Z&&N.viewport(T.copy(Z)),le.length>0&&Zr(le,K,ae),Ce.length>0&&Zr(Ce,K,ae),De.length>0&&Zr(De,K,ae),N.buffers.depth.setTest(!0),N.buffers.depth.setMask(!0),N.buffers.color.setMask(!0),N.setPolygonOffset(!1)}function C0(R,K,ae,Z){const le=z.isWebGL2;Ae===null&&(Ae=new kt(1,1,{generateMipmaps:!0,type:D.has("EXT_color_buffer_half_float")?Nr:Pi,minFilter:Or,samples:le?4:0})),_.getDrawingBufferSize(Pe),le?Ae.setSize(Pe.x,Pe.y):Ae.setSize(oo(Pe.x),oo(Pe.y));const Ce=_.getRenderTarget();_.setRenderTarget(Ae),_.getClearColor(B),H=_.getClearAlpha(),H<1&&_.setClearColor(16777215,.5),_.clear();const De=_.toneMapping;_.toneMapping=Ri,Zr(R,ae,Z),$.updateMultisampleRenderTarget(Ae),$.updateRenderTargetMipmap(Ae);let Ne=!1;for(let Fe=0,Xe=K.length;Fe<Xe;Fe++){const Oe=K[Fe],He=Oe.object,dt=Oe.geometry,mt=Oe.material,dn=Oe.group;if(mt.side===tn&&He.layers.test(Z.layers)){const Yn=mt.side;mt.side=Zt,mt.needsUpdate=!0,El(He,ae,Z,dt,mt,dn),mt.side=Yn,mt.needsUpdate=!0,Ne=!0}}Ne===!0&&($.updateMultisampleRenderTarget(Ae),$.updateRenderTargetMipmap(Ae)),_.setRenderTarget(Ce),_.setClearColor(B,H),_.toneMapping=De}function Zr(R,K,ae){const Z=K.isScene===!0?K.overrideMaterial:null;for(let le=0,Ce=R.length;le<Ce;le++){const De=R[le],Ne=De.object,Fe=De.geometry,Xe=Z===null?De.material:Z,Oe=De.group;Ne.layers.test(ae.layers)&&El(Ne,K,ae,Fe,Xe,Oe)}}function El(R,K,ae,Z,le,Ce){R.onBeforeRender(_,K,ae,Z,le,Ce),R.modelViewMatrix.multiplyMatrices(ae.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),le.onBeforeRender(_,K,ae,Z,R,Ce),le.transparent===!0&&le.side===tn&&le.forceSinglePass===!1?(le.side=Zt,le.needsUpdate=!0,_.renderBufferDirect(ae,K,Z,le,R,Ce),le.side=hi,le.needsUpdate=!0,_.renderBufferDirect(ae,K,Z,le,R,Ce),le.side=tn):_.renderBufferDirect(ae,K,Z,le,R,Ce),R.onAfterRender(_,K,ae,Z,le,Ce)}function Jr(R,K,ae){K.isScene!==!0&&(K=et);const Z=ee.get(R),le=m.state.lights,Ce=m.state.shadowsArray,De=le.state.version,Ne=k.getParameters(R,le.state,Ce,K,ae),Fe=k.getProgramCacheKey(Ne);let Xe=Z.programs;Z.environment=R.isMeshStandardMaterial?K.environment:null,Z.fog=K.fog,Z.envMap=(R.isMeshStandardMaterial?ne:se).get(R.envMap||Z.environment),Xe===void 0&&(R.addEventListener("dispose",xe),Xe=new Map,Z.programs=Xe);let Oe=Xe.get(Fe);if(Oe!==void 0){if(Z.currentProgram===Oe&&Z.lightsStateVersion===De)return bl(R,Ne),Oe}else Ne.uniforms=k.getUniforms(R),R.onBuild(ae,Ne,_),R.onBeforeCompile(Ne,_),Oe=k.acquireProgram(Ne,Fe),Xe.set(Fe,Oe),Z.uniforms=Ne.uniforms;const He=Z.uniforms;(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(He.clippingPlanes=Me.uniform),bl(R,Ne),Z.needsLights=L0(R),Z.lightsStateVersion=De,Z.needsLights&&(He.ambientLightColor.value=le.state.ambient,He.lightProbe.value=le.state.probe,He.directionalLights.value=le.state.directional,He.directionalLightShadows.value=le.state.directionalShadow,He.spotLights.value=le.state.spot,He.spotLightShadows.value=le.state.spotShadow,He.rectAreaLights.value=le.state.rectArea,He.ltc_1.value=le.state.rectAreaLTC1,He.ltc_2.value=le.state.rectAreaLTC2,He.pointLights.value=le.state.point,He.pointLightShadows.value=le.state.pointShadow,He.hemisphereLights.value=le.state.hemi,He.directionalShadowMap.value=le.state.directionalShadowMap,He.directionalShadowMatrix.value=le.state.directionalShadowMatrix,He.spotShadowMap.value=le.state.spotShadowMap,He.spotLightMatrix.value=le.state.spotLightMatrix,He.spotLightMap.value=le.state.spotLightMap,He.pointShadowMap.value=le.state.pointShadowMap,He.pointShadowMatrix.value=le.state.pointShadowMatrix);const dt=Oe.getUniforms(),mt=Ys.seqWithValue(dt.seq,He);return Z.currentProgram=Oe,Z.uniformsList=mt,Oe}function bl(R,K){const ae=ee.get(R);ae.outputColorSpace=K.outputColorSpace,ae.instancing=K.instancing,ae.instancingColor=K.instancingColor,ae.skinning=K.skinning,ae.morphTargets=K.morphTargets,ae.morphNormals=K.morphNormals,ae.morphColors=K.morphColors,ae.morphTargetsCount=K.morphTargetsCount,ae.numClippingPlanes=K.numClippingPlanes,ae.numIntersection=K.numClipIntersection,ae.vertexAlphas=K.vertexAlphas,ae.vertexTangents=K.vertexTangents,ae.toneMapping=K.toneMapping}function R0(R,K,ae,Z,le){K.isScene!==!0&&(K=et),$.resetTextureUnits();const Ce=K.fog,De=Z.isMeshStandardMaterial?K.environment:null,Ne=A===null?_.outputColorSpace:A.isXRRenderTarget===!0?A.texture.colorSpace:Wn,Fe=(Z.isMeshStandardMaterial?ne:se).get(Z.envMap||De),Xe=Z.vertexColors===!0&&!!ae.attributes.color&&ae.attributes.color.itemSize===4,Oe=!!ae.attributes.tangent&&(!!Z.normalMap||Z.anisotropy>0),He=!!ae.morphAttributes.position,dt=!!ae.morphAttributes.normal,mt=!!ae.morphAttributes.color;let dn=Ri;Z.toneMapped&&(A===null||A.isXRRenderTarget===!0)&&(dn=_.toneMapping);const Yn=ae.morphAttributes.position||ae.morphAttributes.normal||ae.morphAttributes.color,St=Yn!==void 0?Yn.length:0,Ke=ee.get(Z),Uo=m.state.lights;if(_e===!0&&(Se===!0||R!==E)){const an=R===E&&Z.id===U;Me.setState(Z,R,an)}let Et=!1;Z.version===Ke.__version?(Ke.needsLights&&Ke.lightsStateVersion!==Uo.state.version||Ke.outputColorSpace!==Ne||le.isInstancedMesh&&Ke.instancing===!1||!le.isInstancedMesh&&Ke.instancing===!0||le.isSkinnedMesh&&Ke.skinning===!1||!le.isSkinnedMesh&&Ke.skinning===!0||le.isInstancedMesh&&Ke.instancingColor===!0&&le.instanceColor===null||le.isInstancedMesh&&Ke.instancingColor===!1&&le.instanceColor!==null||Ke.envMap!==Fe||Z.fog===!0&&Ke.fog!==Ce||Ke.numClippingPlanes!==void 0&&(Ke.numClippingPlanes!==Me.numPlanes||Ke.numIntersection!==Me.numIntersection)||Ke.vertexAlphas!==Xe||Ke.vertexTangents!==Oe||Ke.morphTargets!==He||Ke.morphNormals!==dt||Ke.morphColors!==mt||Ke.toneMapping!==dn||z.isWebGL2===!0&&Ke.morphTargetsCount!==St)&&(Et=!0):(Et=!0,Ke.__version=Z.version);let Ii=Ke.currentProgram;Et===!0&&(Ii=Jr(Z,K,le));let Tl=!1,ir=!1,Oo=!1;const jt=Ii.getUniforms(),Di=Ke.uniforms;if(N.useProgram(Ii.program)&&(Tl=!0,ir=!0,Oo=!0),Z.id!==U&&(U=Z.id,ir=!0),Tl||E!==R){jt.setValue(x,"projectionMatrix",R.projectionMatrix),jt.setValue(x,"viewMatrix",R.matrixWorldInverse);const an=jt.map.cameraPosition;an!==void 0&&an.setValue(x,Be.setFromMatrixPosition(R.matrixWorld)),z.logarithmicDepthBuffer&&jt.setValue(x,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&jt.setValue(x,"isOrthographic",R.isOrthographicCamera===!0),E!==R&&(E=R,ir=!0,Oo=!0)}if(le.isSkinnedMesh){jt.setOptional(x,le,"bindMatrix"),jt.setOptional(x,le,"bindMatrixInverse");const an=le.skeleton;an&&(z.floatVertexTextures?(an.boneTexture===null&&an.computeBoneTexture(),jt.setValue(x,"boneTexture",an.boneTexture,$),jt.setValue(x,"boneTextureSize",an.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const No=ae.morphAttributes;if((No.position!==void 0||No.normal!==void 0||No.color!==void 0&&z.isWebGL2===!0)&&O.update(le,ae,Ii),(ir||Ke.receiveShadow!==le.receiveShadow)&&(Ke.receiveShadow=le.receiveShadow,jt.setValue(x,"receiveShadow",le.receiveShadow)),Z.isMeshGouraudMaterial&&Z.envMap!==null&&(Di.envMap.value=Fe,Di.flipEnvMap.value=Fe.isCubeTexture&&Fe.isRenderTargetTexture===!1?-1:1),ir&&(jt.setValue(x,"toneMappingExposure",_.toneMappingExposure),Ke.needsLights&&P0(Di,Oo),Ce&&Z.fog===!0&&oe.refreshFogUniforms(Di,Ce),oe.refreshMaterialUniforms(Di,Z,X,V,Ae),Ys.upload(x,Ke.uniformsList,Di,$)),Z.isShaderMaterial&&Z.uniformsNeedUpdate===!0&&(Ys.upload(x,Ke.uniformsList,Di,$),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&jt.setValue(x,"center",le.center),jt.setValue(x,"modelViewMatrix",le.modelViewMatrix),jt.setValue(x,"normalMatrix",le.normalMatrix),jt.setValue(x,"modelMatrix",le.matrixWorld),Z.isShaderMaterial||Z.isRawShaderMaterial){const an=Z.uniformsGroups;for(let Fo=0,I0=an.length;Fo<I0;Fo++)if(z.isWebGL2){const wl=an[Fo];Ue.update(wl,Ii),Ue.bind(wl,Ii)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Ii}function P0(R,K){R.ambientLightColor.needsUpdate=K,R.lightProbe.needsUpdate=K,R.directionalLights.needsUpdate=K,R.directionalLightShadows.needsUpdate=K,R.pointLights.needsUpdate=K,R.pointLightShadows.needsUpdate=K,R.spotLights.needsUpdate=K,R.spotLightShadows.needsUpdate=K,R.rectAreaLights.needsUpdate=K,R.hemisphereLights.needsUpdate=K}function L0(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return A},this.setRenderTargetTextures=function(R,K,ae){ee.get(R.texture).__webglTexture=K,ee.get(R.depthTexture).__webglTexture=ae;const Z=ee.get(R);Z.__hasExternalTextures=!0,Z.__hasExternalTextures&&(Z.__autoAllocateDepthBuffer=ae===void 0,Z.__autoAllocateDepthBuffer||D.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(R,K){const ae=ee.get(R);ae.__webglFramebuffer=K,ae.__useDefaultFramebuffer=K===void 0},this.setRenderTarget=function(R,K=0,ae=0){A=R,b=K,C=ae;let Z=!0,le=null,Ce=!1,De=!1;if(R){const Fe=ee.get(R);Fe.__useDefaultFramebuffer!==void 0?(N.bindFramebuffer(x.FRAMEBUFFER,null),Z=!1):Fe.__webglFramebuffer===void 0?$.setupRenderTarget(R):Fe.__hasExternalTextures&&$.rebindTextures(R,ee.get(R.texture).__webglTexture,ee.get(R.depthTexture).__webglTexture);const Xe=R.texture;(Xe.isData3DTexture||Xe.isDataArrayTexture||Xe.isCompressedArrayTexture)&&(De=!0);const Oe=ee.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(Oe[K])?le=Oe[K][ae]:le=Oe[K],Ce=!0):z.isWebGL2&&R.samples>0&&$.useMultisampledRTT(R)===!1?le=ee.get(R).__webglMultisampledFramebuffer:Array.isArray(Oe)?le=Oe[ae]:le=Oe,T.copy(R.viewport),G.copy(R.scissor),Y=R.scissorTest}else T.copy(re).multiplyScalar(X).floor(),G.copy(W).multiplyScalar(X).floor(),Y=q;if(N.bindFramebuffer(x.FRAMEBUFFER,le)&&z.drawBuffers&&Z&&N.drawBuffers(R,le),N.viewport(T),N.scissor(G),N.setScissorTest(Y),Ce){const Fe=ee.get(R.texture);x.framebufferTexture2D(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_CUBE_MAP_POSITIVE_X+K,Fe.__webglTexture,ae)}else if(De){const Fe=ee.get(R.texture),Xe=K||0;x.framebufferTextureLayer(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,Fe.__webglTexture,ae||0,Xe)}U=-1},this.readRenderTargetPixels=function(R,K,ae,Z,le,Ce,De){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ne=ee.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&De!==void 0&&(Ne=Ne[De]),Ne){N.bindFramebuffer(x.FRAMEBUFFER,Ne);try{const Fe=R.texture,Xe=Fe.format,Oe=Fe.type;if(Xe!==fn&&me.convert(Xe)!==x.getParameter(x.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const He=Oe===Nr&&(D.has("EXT_color_buffer_half_float")||z.isWebGL2&&D.has("EXT_color_buffer_float"));if(Oe!==Pi&&me.convert(Oe)!==x.getParameter(x.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Oe===oi&&(z.isWebGL2||D.has("OES_texture_float")||D.has("WEBGL_color_buffer_float")))&&!He){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}K>=0&&K<=R.width-Z&&ae>=0&&ae<=R.height-le&&x.readPixels(K,ae,Z,le,me.convert(Xe),me.convert(Oe),Ce)}finally{const Fe=A!==null?ee.get(A).__webglFramebuffer:null;N.bindFramebuffer(x.FRAMEBUFFER,Fe)}}},this.copyFramebufferToTexture=function(R,K,ae=0){const Z=Math.pow(2,-ae),le=Math.floor(K.image.width*Z),Ce=Math.floor(K.image.height*Z);$.setTexture2D(K,0),x.copyTexSubImage2D(x.TEXTURE_2D,ae,0,0,R.x,R.y,le,Ce),N.unbindTexture()},this.copyTextureToTexture=function(R,K,ae,Z=0){const le=K.image.width,Ce=K.image.height,De=me.convert(ae.format),Ne=me.convert(ae.type);$.setTexture2D(ae,0),x.pixelStorei(x.UNPACK_FLIP_Y_WEBGL,ae.flipY),x.pixelStorei(x.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ae.premultiplyAlpha),x.pixelStorei(x.UNPACK_ALIGNMENT,ae.unpackAlignment),K.isDataTexture?x.texSubImage2D(x.TEXTURE_2D,Z,R.x,R.y,le,Ce,De,Ne,K.image.data):K.isCompressedTexture?x.compressedTexSubImage2D(x.TEXTURE_2D,Z,R.x,R.y,K.mipmaps[0].width,K.mipmaps[0].height,De,K.mipmaps[0].data):x.texSubImage2D(x.TEXTURE_2D,Z,R.x,R.y,De,Ne,K.image),Z===0&&ae.generateMipmaps&&x.generateMipmap(x.TEXTURE_2D),N.unbindTexture()},this.copyTextureToTexture3D=function(R,K,ae,Z,le=0){if(_.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ce=R.max.x-R.min.x+1,De=R.max.y-R.min.y+1,Ne=R.max.z-R.min.z+1,Fe=me.convert(Z.format),Xe=me.convert(Z.type);let Oe;if(Z.isData3DTexture)$.setTexture3D(Z,0),Oe=x.TEXTURE_3D;else if(Z.isDataArrayTexture)$.setTexture2DArray(Z,0),Oe=x.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}x.pixelStorei(x.UNPACK_FLIP_Y_WEBGL,Z.flipY),x.pixelStorei(x.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),x.pixelStorei(x.UNPACK_ALIGNMENT,Z.unpackAlignment);const He=x.getParameter(x.UNPACK_ROW_LENGTH),dt=x.getParameter(x.UNPACK_IMAGE_HEIGHT),mt=x.getParameter(x.UNPACK_SKIP_PIXELS),dn=x.getParameter(x.UNPACK_SKIP_ROWS),Yn=x.getParameter(x.UNPACK_SKIP_IMAGES),St=ae.isCompressedTexture?ae.mipmaps[0]:ae.image;x.pixelStorei(x.UNPACK_ROW_LENGTH,St.width),x.pixelStorei(x.UNPACK_IMAGE_HEIGHT,St.height),x.pixelStorei(x.UNPACK_SKIP_PIXELS,R.min.x),x.pixelStorei(x.UNPACK_SKIP_ROWS,R.min.y),x.pixelStorei(x.UNPACK_SKIP_IMAGES,R.min.z),ae.isDataTexture||ae.isData3DTexture?x.texSubImage3D(Oe,le,K.x,K.y,K.z,Ce,De,Ne,Fe,Xe,St.data):ae.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),x.compressedTexSubImage3D(Oe,le,K.x,K.y,K.z,Ce,De,Ne,Fe,St.data)):x.texSubImage3D(Oe,le,K.x,K.y,K.z,Ce,De,Ne,Fe,Xe,St),x.pixelStorei(x.UNPACK_ROW_LENGTH,He),x.pixelStorei(x.UNPACK_IMAGE_HEIGHT,dt),x.pixelStorei(x.UNPACK_SKIP_PIXELS,mt),x.pixelStorei(x.UNPACK_SKIP_ROWS,dn),x.pixelStorei(x.UNPACK_SKIP_IMAGES,Yn),le===0&&Z.generateMipmaps&&x.generateMipmap(Oe),N.unbindTexture()},this.initTexture=function(R){R.isCubeTexture?$.setTextureCube(R,0):R.isData3DTexture?$.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?$.setTexture2DArray(R,0):$.setTexture2D(R,0),N.unbindTexture()},this.resetState=function(){b=0,C=0,A=null,N.reset(),ve.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ai}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ot?Zi:bh}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Zi?ot:Wn}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class M9 extends Vh{}M9.prototype.isWebGL1Renderer=!0;class S9 extends lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class E9{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=n2,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=_n()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_n()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_n()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const qt=new L;class Ti{constructor(e,t,i,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.applyMatrix4(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.applyNormalMatrix(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.transformDirection(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=kn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=kn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=kn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=kn(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array),r=it(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array),r=it(r,this.array),s=it(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new Ln(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ti(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const y3=new L,M3=new Ye,S3=new Ye,b9=new L,E3=new Le,S1=new L,Ma=new pi,b3=new Le,Sa=new Z1;class T9 extends vt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Le,this.bindMatrixInverse=new Le,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new jn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)S1.fromBufferAttribute(t,i),this.applyBoneTransform(i,S1),this.boundingBox.expandByPoint(S1)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new pi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)S1.fromBufferAttribute(t,i),this.applyBoneTransform(i,S1),this.boundingSphere.expandByPoint(S1)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,r=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ma.copy(this.boundingSphere),Ma.applyMatrix4(r),e.ray.intersectsSphere(Ma)!==!1&&(b3.copy(r).invert(),Sa.copy(e.ray).applyMatrix4(b3),!(this.boundingBox!==null&&Sa.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Sa)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ye,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,r=this.geometry;M3.fromBufferAttribute(r.attributes.skinIndex,e),S3.fromBufferAttribute(r.attributes.skinWeight,e),y3.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=S3.getComponent(s);if(o!==0){const a=M3.getComponent(s);E3.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(b9.copy(y3).applyMatrix4(E3),o)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class a2 extends lt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class w9 extends Ot{constructor(e=null,t=1,i=1,r,s,o,a,l,c=Ut,u=Ut,h,f){super(null,o,a,l,c,u,r,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const T3=new Le,A9=new Le;class Q2{constructor(e=[],t=[]){this.uuid=_n(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new Le)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new Le;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:A9;T3.multiplyMatrices(a,t[s]),T3.toArray(i,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new Q2(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=wh(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new w9(t,e,e,fn,oi);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){const s=e.bones[i];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new a2),this.bones.push(o),this.boneInverses.push(new Le().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const a=i[r];e.boneInverses.push(a.toArray())}return e}}class el extends mi{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new we(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const w3=new L,A3=new L,C3=new Le,Ea=new Z1,Ts=new pi;class Gh extends lt{constructor(e=new Mt,t=new el){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let r=1,s=t.count;r<s;r++)w3.fromBufferAttribute(t,r-1),A3.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=w3.distanceTo(A3);e.setAttribute("lineDistance",new rt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ts.copy(i.boundingSphere),Ts.applyMatrix4(r),Ts.radius+=s,e.ray.intersectsSphere(Ts)===!1)return;C3.copy(r).invert(),Ea.copy(e.ray).applyMatrix4(C3);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new L,u=new L,h=new L,f=new L,d=this.isLineSegments?2:1,g=i.index,m=i.attributes.position;if(g!==null){const p=Math.max(0,o.start),S=Math.min(g.count,o.start+o.count);for(let _=p,y=S-1;_<y;_+=d){const b=g.getX(_),C=g.getX(_+1);if(c.fromBufferAttribute(m,b),u.fromBufferAttribute(m,C),Ea.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const U=e.ray.origin.distanceTo(f);U<e.near||U>e.far||t.push({distance:U,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),S=Math.min(m.count,o.start+o.count);for(let _=p,y=S-1;_<y;_+=d){if(c.fromBufferAttribute(m,_),u.fromBufferAttribute(m,_+1),Ea.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(f);C<e.near||C>e.far||t.push({distance:C,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}class Wh extends mi{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new we(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const R3=new Le,l2=new Z1,ws=new pi,As=new L;class C9 extends lt{constructor(e=new Mt,t=new Wh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),ws.copy(i.boundingSphere),ws.applyMatrix4(r),ws.radius+=s,e.ray.intersectsSphere(ws)===!1)return;R3.copy(r).invert(),l2.copy(e.ray).applyMatrix4(R3);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,h=i.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let g=f,v=d;g<v;g++){const m=c.getX(g);As.fromBufferAttribute(h,m),P3(As,m,l,r,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let g=f,v=d;g<v;g++)As.fromBufferAttribute(h,g),P3(As,g,l,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const r=t[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function P3(n,e,t,i,r,s,o){const a=l2.distanceSqToPoint(n);if(a<t){const l=new L;l2.closestPointToPoint(n,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class In{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),s+=i.distanceTo(r),t.push(s),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let r=0;const s=i.length;let o;t?o=t:o=e*i[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=i[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,i[r]===o)return r/(s-1);const u=i[r],f=i[r+1]-u,d=(o-u)/f;return(r+d)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new fe:new L);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new L,r=[],s=[],o=[],a=new L,l=new Le;for(let d=0;d<=e;d++){const g=d/e;r[d]=this.getTangentAt(g,new L)}s[0]=new L,o[0]=new L;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,i.set(1,0,0)),h<=c&&(c=h,i.set(0,1,0)),f<=c&&i.set(0,0,1),a.crossVectors(r[0],i).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(wt(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,g))}o[d].crossVectors(r[d],s[d])}if(t===!0){let d=Math.acos(wt(s[0].dot(s[e]),-1,1));d/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let g=1;g<=e;g++)s[g].applyMatrix4(l.makeRotationAxis(r[g],d*g)),o[g].crossVectors(r[g],s[g])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class tl extends In{constructor(e=0,t=0,i=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const i=t||new fe,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class R9 extends tl{constructor(e,t,i,r,s,o){super(e,t,i,i,r,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function nl(){let n=0,e=0,t=0,i=0;function r(s,o,a,l){n=s,e=a,t=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return n+e*s+t*o+i*a}}}const Cs=new L,ba=new nl,Ta=new nl,wa=new nl;class Xh extends In{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new L){const i=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(Cs.subVectors(r[0],r[1]).add(r[0]),c=Cs);const h=r[a%s],f=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(Cs.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=Cs),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(h),d),v=Math.pow(h.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(u),d);v<1e-4&&(v=1),g<1e-4&&(g=v),m<1e-4&&(m=v),ba.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,g,v,m),Ta.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,g,v,m),wa.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,g,v,m)}else this.curveType==="catmullrom"&&(ba.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Ta.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),wa.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return i.set(ba.calc(l),Ta.calc(l),wa.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new L().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function L3(n,e,t,i,r){const s=(i-e)*.5,o=(r-t)*.5,a=n*n,l=n*a;return(2*t-2*i+s+o)*l+(-3*t+3*i-2*s-o)*a+s*n+t}function P9(n,e){const t=1-n;return t*t*e}function L9(n,e){return 2*(1-n)*n*e}function I9(n,e){return n*n*e}function br(n,e,t,i){return P9(n,e)+L9(n,t)+I9(n,i)}function D9(n,e){const t=1-n;return t*t*t*e}function U9(n,e){const t=1-n;return 3*t*t*n*e}function O9(n,e){return 3*(1-n)*n*n*e}function N9(n,e){return n*n*n*e}function Tr(n,e,t,i,r){return D9(n,e)+U9(n,t)+O9(n,i)+N9(n,r)}class jh extends In{constructor(e=new fe,t=new fe,i=new fe,r=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new fe){const i=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(Tr(e,r.x,s.x,o.x,a.x),Tr(e,r.y,s.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class F9 extends In{constructor(e=new L,t=new L,i=new L,r=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new L){const i=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(Tr(e,r.x,s.x,o.x,a.x),Tr(e,r.y,s.y,o.y,a.y),Tr(e,r.z,s.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class il extends In{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new fe){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class B9 extends In{constructor(e=new L,t=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new L){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new L){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qh extends In{constructor(e=new fe,t=new fe,i=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new fe){const i=t,r=this.v0,s=this.v1,o=this.v2;return i.set(br(e,r.x,s.x,o.x),br(e,r.y,s.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class rl extends In{constructor(e=new L,t=new L,i=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new L){const i=t,r=this.v0,s=this.v1,o=this.v2;return i.set(br(e,r.x,s.x,o.x),br(e,r.y,s.y,o.y),br(e,r.z,s.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yh extends In{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const i=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return i.set(L3(a,l.x,c.x,u.x,h.x),L3(a,l.y,c.y,u.y,h.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const r=e.points[t];this.points.push(new fe().fromArray(r))}return this}}var sl=Object.freeze({__proto__:null,ArcCurve:R9,CatmullRomCurve3:Xh,CubicBezierCurve:jh,CubicBezierCurve3:F9,EllipseCurve:tl,LineCurve:il,LineCurve3:B9,QuadraticBezierCurve:qh,QuadraticBezierCurve3:rl,SplineCurve:Yh});class z9 extends In{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new il(t,e))}getPoint(e,t){const i=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=i){const o=r[s]-i,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];i&&i.equals(u)||(t.push(u),i=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const r=e.curves[t];this.curves.push(new sl[r.type]().fromJSON(r))}return this}}class c2 extends z9{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new il(this.currentPoint.clone(),new fe(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){const s=new qh(this.currentPoint.clone(),new fe(e,t),new fe(i,r));return this.curves.push(s),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,s,o){const a=new jh(this.currentPoint.clone(),new fe(e,t),new fe(i,r),new fe(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new Yh(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,r,s,o),this}absarc(e,t,i,r,s,o){return this.absellipse(e,t,i,i,r,s,o),this}ellipse(e,t,i,r,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,i,r,s,o,a,l),this}absellipse(e,t,i,r,s,o,a,l){const c=new tl(e,t,i,r,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ol extends Mt{constructor(e=1,t=1,i=1,r=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],f=[],d=[];let g=0;const v=[],m=i/2;let p=0;S(),o===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new rt(h,3)),this.setAttribute("normal",new rt(f,3)),this.setAttribute("uv",new rt(d,2));function S(){const y=new L,b=new L;let C=0;const A=(t-e)/i;for(let U=0;U<=s;U++){const E=[],T=U/s,G=T*(t-e)+e;for(let Y=0;Y<=r;Y++){const B=Y/r,H=B*l+a,I=Math.sin(H),V=Math.cos(H);b.x=G*I,b.y=-T*i+m,b.z=G*V,h.push(b.x,b.y,b.z),y.set(I,A,V).normalize(),f.push(y.x,y.y,y.z),d.push(B,1-T),E.push(g++)}v.push(E)}for(let U=0;U<r;U++)for(let E=0;E<s;E++){const T=v[E][U],G=v[E+1][U],Y=v[E+1][U+1],B=v[E][U+1];u.push(T,G,B),u.push(G,Y,B),C+=6}c.addGroup(p,C,0),p+=C}function _(y){const b=g,C=new fe,A=new L;let U=0;const E=y===!0?e:t,T=y===!0?1:-1;for(let Y=1;Y<=r;Y++)h.push(0,m*T,0),f.push(0,T,0),d.push(.5,.5),g++;const G=g;for(let Y=0;Y<=r;Y++){const H=Y/r*l+a,I=Math.cos(H),V=Math.sin(H);A.x=E*V,A.y=m*T,A.z=E*I,h.push(A.x,A.y,A.z),f.push(0,T,0),C.x=I*.5+.5,C.y=V*.5*T+.5,d.push(C.x,C.y),g++}for(let Y=0;Y<r;Y++){const B=b+Y,H=G+Y;y===!0?u.push(H,H+1,B):u.push(H+1,H,B),U+=3}c.addGroup(p,U,y===!0?1:2),p+=U}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ol(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class al extends ol{constructor(e=1,t=1,i=32,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,i,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new al(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class wr extends c2{constructor(e){super(e),this.uuid=_n(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const r=e.holes[t];this.holes.push(new c2().fromJSON(r))}return this}}const k9={triangulate:function(n,e,t=2){const i=e&&e.length,r=i?e[0]*t:n.length;let s=Kh(n,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,d;if(i&&(s=X9(n,e,s,t)),n.length>80*t){a=c=n[0],l=u=n[1];for(let g=t;g<r;g+=t)h=n[g],f=n[g+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?32767/d:0}return Br(s,o,t,a,l,d,0),o}};function Kh(n,e,t,i,r){let s,o;if(r===nm(n,e,t,i)>0)for(s=e;s<t;s+=i)o=I3(s,n[s],n[s+1],o);else for(s=t-i;s>=e;s-=i)o=I3(s,n[s],n[s+1],o);return o&&Po(o,o.next)&&(kr(o),o=o.next),o}function e1(n,e){if(!n)return n;e||(e=n);let t=n,i;do if(i=!1,!t.steiner&&(Po(t,t.next)||ft(t.prev,t,t.next)===0)){if(kr(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Br(n,e,t,i,r,s,o){if(!n)return;!o&&s&&$9(n,i,r,s);let a=n,l,c;for(;n.prev!==n.next;){if(l=n.prev,c=n.next,s?V9(n,i,r,s):H9(n)){e.push(l.i/t|0),e.push(n.i/t|0),e.push(c.i/t|0),kr(n),n=c.next,a=c.next;continue}if(n=c,n===a){o?o===1?(n=G9(e1(n),e,t),Br(n,e,t,i,r,s,2)):o===2&&W9(n,e,t,i,r,s):Br(e1(n),e,t,i,r,s,1);break}}}function H9(n){const e=n.prev,t=n,i=n.next;if(ft(e,t,i)>=0)return!1;const r=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,u=r<s?r<o?r:o:s<o?s:o,h=a<l?a<c?a:c:l<c?l:c,f=r>s?r>o?r:o:s>o?s:o,d=a>l?a>c?a:c:l>c?l:c;let g=i.next;for(;g!==e;){if(g.x>=u&&g.x<=f&&g.y>=h&&g.y<=d&&A1(r,a,s,l,o,c,g.x,g.y)&&ft(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function V9(n,e,t,i){const r=n.prev,s=n,o=n.next;if(ft(r,s,o)>=0)return!1;const a=r.x,l=s.x,c=o.x,u=r.y,h=s.y,f=o.y,d=a<l?a<c?a:c:l<c?l:c,g=u<h?u<f?u:f:h<f?h:f,v=a>l?a>c?a:c:l>c?l:c,m=u>h?u>f?u:f:h>f?h:f,p=u2(d,g,e,t,i),S=u2(v,m,e,t,i);let _=n.prevZ,y=n.nextZ;for(;_&&_.z>=p&&y&&y.z<=S;){if(_.x>=d&&_.x<=v&&_.y>=g&&_.y<=m&&_!==r&&_!==o&&A1(a,u,l,h,c,f,_.x,_.y)&&ft(_.prev,_,_.next)>=0||(_=_.prevZ,y.x>=d&&y.x<=v&&y.y>=g&&y.y<=m&&y!==r&&y!==o&&A1(a,u,l,h,c,f,y.x,y.y)&&ft(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;_&&_.z>=p;){if(_.x>=d&&_.x<=v&&_.y>=g&&_.y<=m&&_!==r&&_!==o&&A1(a,u,l,h,c,f,_.x,_.y)&&ft(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;y&&y.z<=S;){if(y.x>=d&&y.x<=v&&y.y>=g&&y.y<=m&&y!==r&&y!==o&&A1(a,u,l,h,c,f,y.x,y.y)&&ft(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function G9(n,e,t){let i=n;do{const r=i.prev,s=i.next.next;!Po(r,s)&&$h(r,i,i.next,s)&&zr(r,s)&&zr(s,r)&&(e.push(r.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),kr(i),kr(i.next),i=n=s),i=i.next}while(i!==n);return e1(i)}function W9(n,e,t,i,r,s){let o=n;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Q9(o,a)){let l=Zh(o,a);o=e1(o,o.next),l=e1(l,l.next),Br(o,e,t,i,r,s,0),Br(l,e,t,i,r,s,0);return}a=a.next}o=o.next}while(o!==n)}function X9(n,e,t,i){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:n.length,c=Kh(n,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(J9(c));for(r.sort(j9),s=0;s<r.length;s++)t=q9(r[s],t);return t}function j9(n,e){return n.x-e.x}function q9(n,e){const t=Y9(n,e);if(!t)return e;const i=Zh(t,n);return e1(i,i.next),e1(t,t.next)}function Y9(n,e){let t=e,i=-1/0,r;const s=n.x,o=n.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const f=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=s&&f>i&&(i=f,r=t.x<t.next.x?t:t.next,f===s))return r}t=t.next}while(t!==e);if(!r)return null;const a=r,l=r.x,c=r.y;let u=1/0,h;t=r;do s>=t.x&&t.x>=l&&s!==t.x&&A1(o<c?s:i,o,l,c,o<c?i:s,o,t.x,t.y)&&(h=Math.abs(o-t.y)/(s-t.x),zr(t,n)&&(h<u||h===u&&(t.x>r.x||t.x===r.x&&K9(r,t)))&&(r=t,u=h)),t=t.next;while(t!==a);return r}function K9(n,e){return ft(n.prev,n,e.prev)<0&&ft(e.next,n,n.next)<0}function $9(n,e,t,i){let r=n;do r.z===0&&(r.z=u2(r.x,r.y,e,t,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==n);r.prevZ.nextZ=null,r.prevZ=null,Z9(r)}function Z9(n){let e,t,i,r,s,o,a,l,c=1;do{for(t=n,n=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(r=t,t=t.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:n=r,r.prevZ=s,s=r;t=i}s.nextZ=null,c*=2}while(o>1);return n}function u2(n,e,t,i,r){return n=(n-t)*r|0,e=(e-i)*r|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,n|e<<1}function J9(n){let e=n,t=n;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==n);return t}function A1(n,e,t,i,r,s,o,a){return(r-o)*(e-a)>=(n-o)*(s-a)&&(n-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(r-o)*(i-a)}function Q9(n,e){return n.next.i!==e.i&&n.prev.i!==e.i&&!em(n,e)&&(zr(n,e)&&zr(e,n)&&tm(n,e)&&(ft(n.prev,n,e.prev)||ft(n,e.prev,e))||Po(n,e)&&ft(n.prev,n,n.next)>0&&ft(e.prev,e,e.next)>0)}function ft(n,e,t){return(e.y-n.y)*(t.x-e.x)-(e.x-n.x)*(t.y-e.y)}function Po(n,e){return n.x===e.x&&n.y===e.y}function $h(n,e,t,i){const r=Ps(ft(n,e,t)),s=Ps(ft(n,e,i)),o=Ps(ft(t,i,n)),a=Ps(ft(t,i,e));return!!(r!==s&&o!==a||r===0&&Rs(n,t,e)||s===0&&Rs(n,i,e)||o===0&&Rs(t,n,i)||a===0&&Rs(t,e,i))}function Rs(n,e,t){return e.x<=Math.max(n.x,t.x)&&e.x>=Math.min(n.x,t.x)&&e.y<=Math.max(n.y,t.y)&&e.y>=Math.min(n.y,t.y)}function Ps(n){return n>0?1:n<0?-1:0}function em(n,e){let t=n;do{if(t.i!==n.i&&t.next.i!==n.i&&t.i!==e.i&&t.next.i!==e.i&&$h(t,t.next,n,e))return!0;t=t.next}while(t!==n);return!1}function zr(n,e){return ft(n.prev,n,n.next)<0?ft(n,e,n.next)>=0&&ft(n,n.prev,e)>=0:ft(n,e,n.prev)<0||ft(n,n.next,e)<0}function tm(n,e){let t=n,i=!1;const r=(n.x+e.x)/2,s=(n.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==n);return i}function Zh(n,e){const t=new h2(n.i,n.x,n.y),i=new h2(e.i,e.x,e.y),r=n.next,s=e.prev;return n.next=e,e.prev=n,t.next=r,r.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function I3(n,e,t,i){const r=new h2(n,e,t);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function kr(n){n.next.prev=n.prev,n.prev.next=n.next,n.prevZ&&(n.prevZ.nextZ=n.nextZ),n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function h2(n,e,t){this.i=n,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function nm(n,e,t,i){let r=0;for(let s=e,o=t-i;s<t;s+=i)r+=(n[o]-n[s])*(n[s+1]+n[o+1]),o=s;return r}class U1{static area(e){const t=e.length;let i=0;for(let r=t-1,s=0;s<t;r=s++)i+=e[r].x*e[s].y-e[s].x*e[r].y;return i*.5}static isClockWise(e){return U1.area(e)<0}static triangulateShape(e,t){const i=[],r=[],s=[];D3(e),U3(i,e);let o=e.length;t.forEach(D3);for(let l=0;l<t.length;l++)r.push(o),o+=t[l].length,U3(i,t[l]);const a=k9.triangulate(i,r);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function D3(n){const e=n.length;e>2&&n[e-1].equals(n[0])&&n.pop()}function U3(n,e){for(let t=0;t<e.length;t++)n.push(e[t].x),n.push(e[t].y)}class Lo extends Mt{constructor(e=new wr([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new rt(r,3)),this.setAttribute("uv",new rt(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,g=t.bevelSize!==void 0?t.bevelSize:d-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const p=t.extrudePath,S=t.UVGenerator!==void 0?t.UVGenerator:im;let _,y=!1,b,C,A,U;p&&(_=p.getSpacedPoints(u),y=!0,f=!1,b=p.computeFrenetFrames(u,!1),C=new L,A=new L,U=new L),f||(m=0,d=0,g=0,v=0);const E=a.extractPoints(c);let T=E.shape;const G=E.holes;if(!U1.isClockWise(T)){T=T.reverse();for(let x=0,P=G.length;x<P;x++){const D=G[x];U1.isClockWise(D)&&(G[x]=D.reverse())}}const B=U1.triangulateShape(T,G),H=T;for(let x=0,P=G.length;x<P;x++){const D=G[x];T=T.concat(D)}function I(x,P,D){return P||console.error("THREE.ExtrudeGeometry: vec does not exist"),x.clone().addScaledVector(P,D)}const V=T.length,X=B.length;function j(x,P,D){let z,N,Q;const ee=x.x-P.x,$=x.y-P.y,se=D.x-x.x,ne=D.y-x.y,Ee=ee*ee+$*$,w=ee*ne-$*se;if(Math.abs(w)>Number.EPSILON){const M=Math.sqrt(Ee),k=Math.sqrt(se*se+ne*ne),oe=P.x-$/M,ce=P.y+ee/M,ue=D.x-ne/k,Me=D.y+se/k,de=((ue-oe)*ne-(Me-ce)*se)/(ee*ne-$*se);z=oe+ee*de-x.x,N=ce+$*de-x.y;const J=z*z+N*N;if(J<=2)return new fe(z,N);Q=Math.sqrt(J/2)}else{let M=!1;ee>Number.EPSILON?se>Number.EPSILON&&(M=!0):ee<-Number.EPSILON?se<-Number.EPSILON&&(M=!0):Math.sign($)===Math.sign(ne)&&(M=!0),M?(z=-$,N=ee,Q=Math.sqrt(Ee)):(z=ee,N=$,Q=Math.sqrt(Ee/2))}return new fe(z/Q,N/Q)}const ie=[];for(let x=0,P=H.length,D=P-1,z=x+1;x<P;x++,D++,z++)D===P&&(D=0),z===P&&(z=0),ie[x]=j(H[x],H[D],H[z]);const re=[];let W,q=ie.concat();for(let x=0,P=G.length;x<P;x++){const D=G[x];W=[];for(let z=0,N=D.length,Q=N-1,ee=z+1;z<N;z++,Q++,ee++)Q===N&&(Q=0),ee===N&&(ee=0),W[z]=j(D[z],D[Q],D[ee]);re.push(W),q=q.concat(W)}for(let x=0;x<m;x++){const P=x/m,D=d*Math.cos(P*Math.PI/2),z=g*Math.sin(P*Math.PI/2)+v;for(let N=0,Q=H.length;N<Q;N++){const ee=I(H[N],ie[N],z);Re(ee.x,ee.y,-D)}for(let N=0,Q=G.length;N<Q;N++){const ee=G[N];W=re[N];for(let $=0,se=ee.length;$<se;$++){const ne=I(ee[$],W[$],z);Re(ne.x,ne.y,-D)}}}const pe=g+v;for(let x=0;x<V;x++){const P=f?I(T[x],q[x],pe):T[x];y?(A.copy(b.normals[0]).multiplyScalar(P.x),C.copy(b.binormals[0]).multiplyScalar(P.y),U.copy(_[0]).add(A).add(C),Re(U.x,U.y,U.z)):Re(P.x,P.y,0)}for(let x=1;x<=u;x++)for(let P=0;P<V;P++){const D=f?I(T[P],q[P],pe):T[P];y?(A.copy(b.normals[x]).multiplyScalar(D.x),C.copy(b.binormals[x]).multiplyScalar(D.y),U.copy(_[x]).add(A).add(C),Re(U.x,U.y,U.z)):Re(D.x,D.y,h/u*x)}for(let x=m-1;x>=0;x--){const P=x/m,D=d*Math.cos(P*Math.PI/2),z=g*Math.sin(P*Math.PI/2)+v;for(let N=0,Q=H.length;N<Q;N++){const ee=I(H[N],ie[N],z);Re(ee.x,ee.y,h+D)}for(let N=0,Q=G.length;N<Q;N++){const ee=G[N];W=re[N];for(let $=0,se=ee.length;$<se;$++){const ne=I(ee[$],W[$],z);y?Re(ne.x,ne.y+_[u-1].y,_[u-1].x+D):Re(ne.x,ne.y,h+D)}}}_e(),Se();function _e(){const x=r.length/3;if(f){let P=0,D=V*P;for(let z=0;z<X;z++){const N=B[z];Pe(N[2]+D,N[1]+D,N[0]+D)}P=u+m*2,D=V*P;for(let z=0;z<X;z++){const N=B[z];Pe(N[0]+D,N[1]+D,N[2]+D)}}else{for(let P=0;P<X;P++){const D=B[P];Pe(D[2],D[1],D[0])}for(let P=0;P<X;P++){const D=B[P];Pe(D[0]+V*u,D[1]+V*u,D[2]+V*u)}}i.addGroup(x,r.length/3-x,0)}function Se(){const x=r.length/3;let P=0;Ae(H,P),P+=H.length;for(let D=0,z=G.length;D<z;D++){const N=G[D];Ae(N,P),P+=N.length}i.addGroup(x,r.length/3-x,1)}function Ae(x,P){let D=x.length;for(;--D>=0;){const z=D;let N=D-1;N<0&&(N=x.length-1);for(let Q=0,ee=u+m*2;Q<ee;Q++){const $=V*Q,se=V*(Q+1),ne=P+z+$,Ee=P+N+$,w=P+N+se,M=P+z+se;Be(ne,Ee,w,M)}}}function Re(x,P,D){l.push(x),l.push(P),l.push(D)}function Pe(x,P,D){et(x),et(P),et(D);const z=r.length/3,N=S.generateTopUV(i,r,z-3,z-2,z-1);Ie(N[0]),Ie(N[1]),Ie(N[2])}function Be(x,P,D,z){et(x),et(P),et(z),et(P),et(D),et(z);const N=r.length/3,Q=S.generateSideWallUV(i,r,N-6,N-3,N-2,N-1);Ie(Q[0]),Ie(Q[1]),Ie(Q[3]),Ie(Q[1]),Ie(Q[2]),Ie(Q[3])}function et(x){r.push(l[x*3+0]),r.push(l[x*3+1]),r.push(l[x*3+2])}function Ie(x){s.push(x.x),s.push(x.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return rm(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];i.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new sl[r.type]().fromJSON(r)),new Lo(i,e.options)}}const im={generateTopUV:function(n,e,t,i,r){const s=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new fe(s,o),new fe(a,l),new fe(c,u)]},generateSideWallUV:function(n,e,t,i,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],u=e[i*3+1],h=e[i*3+2],f=e[r*3],d=e[r*3+1],g=e[r*3+2],v=e[s*3],m=e[s*3+1],p=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new fe(o,1-l),new fe(c,1-h),new fe(f,1-g),new fe(v,1-p)]:[new fe(a,1-l),new fe(u,1-h),new fe(d,1-g),new fe(m,1-p)]}};function rm(n,e,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const s=n[i];t.shapes.push(s.uuid)}else t.shapes.push(n.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ll extends Mt{constructor(e=new rl(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),t=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new L,l=new L,c=new fe;let u=new L;const h=[],f=[],d=[],g=[];v(),this.setIndex(g),this.setAttribute("position",new rt(h,3)),this.setAttribute("normal",new rt(f,3)),this.setAttribute("uv",new rt(d,2));function v(){for(let _=0;_<t;_++)m(_);m(s===!1?t:0),S(),p()}function m(_){u=e.getPointAt(_/t,u);const y=o.normals[_],b=o.binormals[_];for(let C=0;C<=r;C++){const A=C/r*Math.PI*2,U=Math.sin(A),E=-Math.cos(A);l.x=E*y.x+U*b.x,l.y=E*y.y+U*b.y,l.z=E*y.z+U*b.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+i*l.x,a.y=u.y+i*l.y,a.z=u.z+i*l.z,h.push(a.x,a.y,a.z)}}function p(){for(let _=1;_<=t;_++)for(let y=1;y<=r;y++){const b=(r+1)*(_-1)+(y-1),C=(r+1)*_+(y-1),A=(r+1)*_+y,U=(r+1)*(_-1)+y;g.push(b,C,U),g.push(C,A,U)}}function S(){for(let _=0;_<=t;_++)for(let y=0;y<=r;y++)c.x=_/t,c.y=y/r,d.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ll(new sl[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class sm extends Mt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,r=new L,s=new L;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let g=f,v=f+d;g<v;g+=3)for(let m=0;m<3;m++){const p=a.getX(g+m),S=a.getX(g+(m+1)%3);r.fromBufferAttribute(o,p),s.fromBufferAttribute(o,S),O3(r,s,i)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;r.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),O3(r,s,i)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new rt(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function O3(n,e,t){const i=`${n.x},${n.y},${n.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${n.x},${n.y},${n.z}`;return t.has(i)===!0||t.has(r)===!0?!1:(t.add(i),t.add(r),!0)}class om extends yt{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class am extends mi{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new we(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ao,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class lm extends am{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return wt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new we(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new we(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new we(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Aa extends mi{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new we(16777215),this.specular=new we(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ao,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=To,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class cm extends mi{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new we(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new we(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ao,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=To,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}function Mi(n,e,t){return Jh(n)?new n.constructor(n.subarray(e,t!==void 0?t:n.length)):n.slice(e,t)}function Ls(n,e,t){return!n||!t&&n.constructor===e?n:typeof e.BYTES_PER_ELEMENT=="number"?new e(n):Array.prototype.slice.call(n)}function Jh(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)}function um(n){function e(r,s){return n[r]-n[s]}const t=n.length,i=new Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(e),i}function N3(n,e,t){const i=n.length,r=new n.constructor(i);for(let s=0,o=0;o!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=n[a+l]}return r}function Qh(n,e,t,i){let r=1,s=n[0];for(;s!==void 0&&s[i]===void 0;)s=n[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=n[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=n[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),t.push(o)),s=n[r++];while(s!==void 0)}class Io{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,r=t[i],s=t[i-1];n:{e:{let o;t:{i:if(!(e<r)){for(let a=i+2;;){if(r===void 0){if(e<s)break i;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=r,r=t[++i],e<r)break e}o=t.length;break t}if(!(e>=s)){const a=t[1];e<a&&(i=2,s=a);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(r=s,s=t[--i-1],e>=s)break e}o=i,i=0;break t}break n}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(r=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,r)}return this.interpolate_(i,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=i[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class hm extends Io{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Uc,endingEnd:Uc}}intervalChanged_(e,t,i){const r=this.parameterPositions;let s=e-2,o=e+1,a=r[s],l=r[o];if(a===void 0)switch(this.getSettings_().endingStart){case Oc:s=e,a=2*t-i;break;case Nc:s=r.length-2,a=t+r[s]-r[s+1];break;default:s=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Oc:o=e,l=2*i-t;break;case Nc:o=1,l=i+r[1]-r[0];break;default:o=e-1,l=t}const c=(i-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,i,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,g=(i-t)/(r-t),v=g*g,m=v*g,p=-f*m+2*f*v-f*g,S=(1+f)*m+(-1.5-2*f)*v+(-.5+f)*g+1,_=(-1-d)*m+(1.5+d)*v+.5*g,y=d*m-d*v;for(let b=0;b!==a;++b)s[b]=p*o[u+b]+S*o[c+b]+_*o[l+b]+y*o[h+b];return s}}class fm extends Io{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(i-t)/(r-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class dm extends Io{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class qn{constructor(e,t,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ls(t,this.TimeBufferType),this.values=Ls(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Ls(e.times,Array),values:Ls(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new dm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new fm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new hm(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case io:t=this.InterpolantFactoryMethodDiscrete;break;case ro:t=this.InterpolantFactoryMethodLinear;break;case Jo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return io;case this.InterpolantFactoryMethodLinear:return ro;case this.InterpolantFactoryMethodSmooth:return Jo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){const i=this.times,r=i.length;let s=0,o=r-1;for(;s!==r&&i[s]<e;)++s;for(;o!==-1&&i[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=Mi(i,s,o),this.values=Mi(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(r!==void 0&&Jh(r))for(let a=0,l=r.length;a!==l;++a){const c=r[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=Mi(this.times),t=Mi(this.values),i=this.getValueSize(),r=this.getInterpolation()===Jo,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(r)l=!0;else{const h=a*i,f=h-i,d=h+i;for(let g=0;g!==i;++g){const v=t[h+g];if(v!==t[f+g]||v!==t[d+g]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*i,f=o*i;for(let d=0;d!==i;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=Mi(e,0,o),this.values=Mi(t,0,o*i)):(this.times=e,this.values=t),this}clone(){const e=Mi(this.times,0),t=Mi(this.values,0),i=this.constructor,r=new i(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}qn.prototype.TimeBufferType=Float32Array;qn.prototype.ValueBufferType=Float32Array;qn.prototype.DefaultInterpolation=ro;class Q1 extends qn{}Q1.prototype.ValueTypeName="bool";Q1.prototype.ValueBufferType=Array;Q1.prototype.DefaultInterpolation=io;Q1.prototype.InterpolantFactoryMethodLinear=void 0;Q1.prototype.InterpolantFactoryMethodSmooth=void 0;class e0 extends qn{}e0.prototype.ValueTypeName="color";class Hr extends qn{}Hr.prototype.ValueTypeName="number";class pm extends Io{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(r-t);let c=e*a;for(let u=c+a;c!==u;c+=4)vn.slerpFlat(s,0,o,c-a,o,c,l);return s}}class er extends qn{InterpolantFactoryMethodLinear(e){return new pm(this.times,this.values,this.getValueSize(),e)}}er.prototype.ValueTypeName="quaternion";er.prototype.DefaultInterpolation=ro;er.prototype.InterpolantFactoryMethodSmooth=void 0;class tr extends qn{}tr.prototype.ValueTypeName="string";tr.prototype.ValueBufferType=Array;tr.prototype.DefaultInterpolation=io;tr.prototype.InterpolantFactoryMethodLinear=void 0;tr.prototype.InterpolantFactoryMethodSmooth=void 0;class Vr extends qn{}Vr.prototype.ValueTypeName="vector";class mm{constructor(e,t=-1,i,r=Wd){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=_n(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,r=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(vm(i[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=i.length;s!==o;++s)t.push(qn.toJSON(i[s]));return r}static CreateFromMorphTargetSequence(e,t,i,r){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=um(l);l=N3(l,1,u),c=N3(c,1,u),!r&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Hr(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const r={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=r[h];f||(r[h]=f=[]),f.push(c)}}const o=[];for(const a in r)o.push(this.CreateFromMorphTargetSequence(a,r[a],t,i));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(h,f,d,g,v){if(d.length!==0){const m=[],p=[];Qh(d,m,p,g),m.length!==0&&v.push(new h(f,m,p))}},r=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let g;for(g=0;g<f.length;g++)if(f[g].morphTargets)for(let v=0;v<f[g].morphTargets.length;v++)d[f[g].morphTargets[v]]=-1;for(const v in d){const m=[],p=[];for(let S=0;S!==f[g].morphTargets.length;++S){const _=f[g];m.push(_.time),p.push(_.morphTarget===v?1:0)}r.push(new Hr(".morphTargetInfluence["+v+"]",m,p))}l=d.length*o}else{const d=".bones["+t[h].name+"]";i(Vr,d+".position",f,"pos",r),i(er,d+".quaternion",f,"rot",r),i(Vr,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,r=e.length;i!==r;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function gm(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Hr;case"vector":case"vector2":case"vector3":case"vector4":return Vr;case"color":return e0;case"quaternion":return er;case"bool":case"boolean":return Q1;case"string":return tr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n)}function vm(n){if(n.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=gm(n.type);if(n.times===void 0){const t=[],i=[];Qh(n.keys,t,i,"value"),n.times=t,n.values=i}return e.parse!==void 0?e.parse(n):new e(n.name,n.times,n.values,n.interpolation)}const lo={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class _m{constructor(e,t,i){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],g=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return g}return null}}}const xm=new _m;class nr{constructor(e){this.manager=e!==void 0?e:xm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(r,s){i.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}nr.DEFAULT_MATERIAL_NAME="__DEFAULT";const ti={};class ym extends Error{constructor(e,t){super(e),this.response=t}}class t0 extends nr{constructor(e){super(e)}load(e,t,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=lo.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ti[e]!==void 0){ti[e].push({onLoad:t,onProgress:i,onError:r});return}ti[e]=[],ti[e].push({onLoad:t,onProgress:i,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=ti[e],h=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,g=d!==0;let v=0;const m=new ReadableStream({start(p){S();function S(){h.read().then(({done:_,value:y})=>{if(_)p.close();else{v+=y.byteLength;const b=new ProgressEvent("progress",{lengthComputable:g,loaded:v,total:d});for(let C=0,A=u.length;C<A;C++){const U=u[C];U.onProgress&&U.onProgress(b)}p.enqueue(y),S()}})}}});return new Response(m)}else throw new ym(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(g=>d.decode(g))}}}).then(c=>{lo.add(e,c);const u=ti[e];delete ti[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=ti[e];if(u===void 0)throw this.manager.itemError(e),c;delete ti[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Mm extends nr{constructor(e){super(e)}load(e,t,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=lo.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Fr("img");function l(){u(),lo.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class f2 extends nr{constructor(e){super(e)}load(e,t,i,r){const s=new Ot,o=new Mm(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,r),s}}class Yr extends lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new we(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Sm extends Yr{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(lt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new we(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Ca=new Le,F3=new L,B3=new L;class cl{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new Le,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Z2,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new Ye(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;F3.setFromMatrixPosition(e.matrixWorld),t.position.copy(F3),B3.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(B3),t.updateMatrixWorld(),Ca.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ca),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Ca)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Em extends cl{constructor(){super(new Ht(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=G1*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class n0 extends Yr{constructor(e,t,i=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(lt.DEFAULT_UP),this.updateMatrix(),this.target=new lt,this.distance=i,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new Em}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const z3=new Le,ur=new L,Ra=new L;class bm extends cl{constructor(){super(new Ht(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new Ye(2,1,1,1),new Ye(0,1,1,1),new Ye(3,1,1,1),new Ye(1,1,1,1),new Ye(3,0,1,1),new Ye(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,r=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),ur.setFromMatrixPosition(e.matrixWorld),i.position.copy(ur),Ra.copy(i.position),Ra.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Ra),i.updateMatrixWorld(),r.makeTranslation(-ur.x,-ur.y,-ur.z),z3.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(z3)}}class k3 extends Yr{constructor(e,t,i=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new bm}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Tm extends cl{constructor(){super(new qr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class i0 extends Yr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(lt.DEFAULT_UP),this.updateMatrix(),this.target=new lt,this.shadow=new Tm}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class r0 extends Yr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class ul{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,r=e.length;i<r;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class wm extends Mt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Am{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=H3(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=H3();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function H3(){return(typeof performance>"u"?Date:performance).now()}const hl="\\[\\]\\.:\\/",Cm=new RegExp("["+hl+"]","g"),fl="[^"+hl+"]",Rm="[^"+hl.replace("\\.","")+"]",Pm=/((?:WC+[\/:])*)/.source.replace("WC",fl),Lm=/(WCOD+)?/.source.replace("WCOD",Rm),Im=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fl),Dm=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fl),Um=new RegExp("^"+Pm+Lm+Im+Dm+"$"),Om=["material","materials","bones","map"];class Nm{constructor(e,t,i){const r=i||Qe.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=i.length;r!==s;++r)i[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class Qe{constructor(e,t,i){this.path=t,this.parsedPath=i||Qe.parseTrackName(t),this.node=Qe.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new Qe.Composite(e,t,i):new Qe(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(Cm,"")}static parseTrackName(e){const t=Um.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=i.nodeName.substring(r+1);Om.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=Qe.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[r];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Qe.Composite=Nm;Qe.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Qe.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Qe.prototype.GetterByBindingType=[Qe.prototype._getValue_direct,Qe.prototype._getValue_array,Qe.prototype._getValue_arrayElement,Qe.prototype._getValue_toArray];Qe.prototype.SetterByBindingTypeAndVersioning=[[Qe.prototype._setValue_direct,Qe.prototype._setValue_direct_setNeedsUpdate,Qe.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Qe.prototype._setValue_array,Qe.prototype._setValue_array_setNeedsUpdate,Qe.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Qe.prototype._setValue_arrayElement,Qe.prototype._setValue_arrayElement_setNeedsUpdate,Qe.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Qe.prototype._setValue_fromArray,Qe.prototype._setValue_fromArray_setNeedsUpdate,Qe.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class d2 extends E9{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class Fm{constructor(e,t,i=0,r=1/0){this.ray=new Z1(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new K2,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return p2(e,this,i,t),i.sort(V3),i}intersectObjects(e,t=!0,i=[]){for(let r=0,s=e.length;r<s;r++)p2(e[r],this,i,t);return i.sort(V3),i}}function V3(n,e){return n.distance-e.distance}function p2(n,e,t,i){if(n.layers.test(e.layers)&&n.raycast(e,t),i===!0){const r=n.children;for(let s=0,o=r.length;s<o;s++)p2(r[s],e,t,!0)}}class G3{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(wt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const W3=new L,Is=new L;class Bm{constructor(e=new L,t=new L){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){W3.subVectors(e,this.start),Is.subVectors(this.end,this.start);const i=Is.dot(Is);let s=Is.dot(W3)/i;return t&&(s=wt(s,0,1)),s}closestPointToPoint(e,t,i){const r=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}class zm{constructor(){this.type="ShapePath",this.color=new we,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new c2,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,r){return this.currentPath.quadraticCurveTo(e,t,i,r),this}bezierCurveTo(e,t,i,r,s,o){return this.currentPath.bezierCurveTo(e,t,i,r,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(p){const S=[];for(let _=0,y=p.length;_<y;_++){const b=p[_],C=new wr;C.curves=b.curves,S.push(C)}return S}function i(p,S){const _=S.length;let y=!1;for(let b=_-1,C=0;C<_;b=C++){let A=S[b],U=S[C],E=U.x-A.x,T=U.y-A.y;if(Math.abs(T)>Number.EPSILON){if(T<0&&(A=S[C],E=-E,U=S[b],T=-T),p.y<A.y||p.y>U.y)continue;if(p.y===A.y){if(p.x===A.x)return!0}else{const G=T*(p.x-A.x)-E*(p.y-A.y);if(G===0)return!0;if(G<0)continue;y=!y}}else{if(p.y!==A.y)continue;if(U.x<=p.x&&p.x<=A.x||A.x<=p.x&&p.x<=U.x)return!0}}return y}const r=U1.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new wr,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=e?!u:u;const h=[],f=[];let d=[],g=0,v;f[g]=void 0,d[g]=[];for(let p=0,S=s.length;p<S;p++)a=s[p],v=a.getPoints(),o=r(v),o=e?!o:o,o?(!u&&f[g]&&g++,f[g]={s:new wr,p:v},f[g].s.curves=a.curves,u&&g++,d[g]=[]):d[g].push({h:a,p:v[0]});if(!f[0])return t(s);if(f.length>1){let p=!1,S=0;for(let _=0,y=f.length;_<y;_++)h[_]=[];for(let _=0,y=f.length;_<y;_++){const b=d[_];for(let C=0;C<b.length;C++){const A=b[C];let U=!0;for(let E=0;E<f.length;E++)i(A.p,f[E].p)&&(_!==E&&S++,U?(U=!1,h[E].push(A)):p=!0);U&&h[_].push(A)}}S>0&&p===!1&&(d=h)}let m;for(let p=0,S=f.length;p<S;p++){l=f[p].s,c.push(l),m=d[p];for(let _=0,y=m.length;_<y;_++)l.holes.push(m[_].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:$1}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=$1);const X3={type:"change"},Pa={type:"start"},j3={type:"end"},Ds=new Z1,q3=new si,km=Math.cos(70*nn.DEG2RAD);class Hm extends t1{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new L,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:r1.ROTATE,MIDDLE:r1.DOLLY,RIGHT:r1.PAN},this.touches={ONE:s1.ROTATE,TWO:s1.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(O){O.addEventListener("keydown",M),this._domElementKeyEvents=O},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",M),this._domElementKeyEvents=null},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(X3),i.update(),s=r.NONE},this.update=function(){const O=new L,he=new vn().setFromUnitVectors(e.up,new L(0,1,0)),be=he.clone().invert(),me=new L,ve=new vn,Ue=new L,$e=2*Math.PI;return function(Te=null){const te=i.object.position;O.copy(te).sub(i.target),O.applyQuaternion(he),a.setFromVector3(O),i.autoRotate&&s===r.NONE&&G(E(Te)),i.enableDamping?(a.theta+=l.theta*i.dampingFactor,a.phi+=l.phi*i.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let ge=i.minAzimuthAngle,xe=i.maxAzimuthAngle;isFinite(ge)&&isFinite(xe)&&(ge<-Math.PI?ge+=$e:ge>Math.PI&&(ge-=$e),xe<-Math.PI?xe+=$e:xe>Math.PI&&(xe-=$e),ge<=xe?a.theta=Math.max(ge,Math.min(xe,a.theta)):a.theta=a.theta>(ge+xe)/2?Math.max(ge,a.theta):Math.min(xe,a.theta)),a.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,a.phi)),a.makeSafe(),i.enableDamping===!0?i.target.addScaledVector(u,i.dampingFactor):i.target.add(u),i.zoomToCursor&&C||i.object.isOrthographicCamera?a.radius=ie(a.radius):a.radius=ie(a.radius*c),O.setFromSpherical(a),O.applyQuaternion(be),te.copy(i.target).add(O),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,u.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),u.set(0,0,0));let We=!1;if(i.zoomToCursor&&C){let tt=null;if(i.object.isPerspectiveCamera){const st=O.length();tt=ie(st*c);const on=st-tt;i.object.position.addScaledVector(y,on),i.object.updateMatrixWorld()}else if(i.object.isOrthographicCamera){const st=new L(b.x,b.y,0);st.unproject(i.object),i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix(),We=!0;const on=new L(b.x,b.y,0);on.unproject(i.object),i.object.position.sub(on).add(st),i.object.updateMatrixWorld(),tt=O.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;tt!==null&&(this.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(tt).add(i.object.position):(Ds.origin.copy(i.object.position),Ds.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(Ds.direction))<km?e.lookAt(i.target):(q3.setFromNormalAndCoplanarPoint(i.object.up,i.target),Ds.intersectPlane(q3,i.target))))}else i.object.isOrthographicCamera&&(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix(),We=!0);return c=1,C=!1,We||me.distanceToSquared(i.object.position)>o||8*(1-ve.dot(i.object.quaternion))>o||Ue.distanceToSquared(i.target)>0?(i.dispatchEvent(X3),me.copy(i.object.position),ve.copy(i.object.quaternion),Ue.copy(i.target),We=!1,!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",ce),i.domElement.removeEventListener("pointerdown",ee),i.domElement.removeEventListener("pointercancel",se),i.domElement.removeEventListener("wheel",w),i.domElement.removeEventListener("pointermove",$),i.domElement.removeEventListener("pointerup",se),i._domElementKeyEvents!==null&&(i._domElementKeyEvents.removeEventListener("keydown",M),i._domElementKeyEvents=null)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const o=1e-6,a=new G3,l=new G3;let c=1;const u=new L,h=new fe,f=new fe,d=new fe,g=new fe,v=new fe,m=new fe,p=new fe,S=new fe,_=new fe,y=new L,b=new fe;let C=!1;const A=[],U={};function E(O){return O!==null?2*Math.PI/60*i.autoRotateSpeed*O:2*Math.PI/60/60*i.autoRotateSpeed}function T(){return Math.pow(.95,i.zoomSpeed)}function G(O){l.theta-=O}function Y(O){l.phi-=O}const B=function(){const O=new L;return function(be,me){O.setFromMatrixColumn(me,0),O.multiplyScalar(-be),u.add(O)}}(),H=function(){const O=new L;return function(be,me){i.screenSpacePanning===!0?O.setFromMatrixColumn(me,1):(O.setFromMatrixColumn(me,0),O.crossVectors(i.object.up,O)),O.multiplyScalar(be),u.add(O)}}(),I=function(){const O=new L;return function(be,me){const ve=i.domElement;if(i.object.isPerspectiveCamera){const Ue=i.object.position;O.copy(Ue).sub(i.target);let $e=O.length();$e*=Math.tan(i.object.fov/2*Math.PI/180),B(2*be*$e/ve.clientHeight,i.object.matrix),H(2*me*$e/ve.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(B(be*(i.object.right-i.object.left)/i.object.zoom/ve.clientWidth,i.object.matrix),H(me*(i.object.top-i.object.bottom)/i.object.zoom/ve.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function V(O){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c/=O:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function X(O){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c*=O:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function j(O){if(!i.zoomToCursor)return;C=!0;const he=i.domElement.getBoundingClientRect(),be=O.clientX-he.left,me=O.clientY-he.top,ve=he.width,Ue=he.height;b.x=be/ve*2-1,b.y=-(me/Ue)*2+1,y.set(b.x,b.y,1).unproject(i.object).sub(i.object.position).normalize()}function ie(O){return Math.max(i.minDistance,Math.min(i.maxDistance,O))}function re(O){h.set(O.clientX,O.clientY)}function W(O){j(O),p.set(O.clientX,O.clientY)}function q(O){g.set(O.clientX,O.clientY)}function pe(O){f.set(O.clientX,O.clientY),d.subVectors(f,h).multiplyScalar(i.rotateSpeed);const he=i.domElement;G(2*Math.PI*d.x/he.clientHeight),Y(2*Math.PI*d.y/he.clientHeight),h.copy(f),i.update()}function _e(O){S.set(O.clientX,O.clientY),_.subVectors(S,p),_.y>0?V(T()):_.y<0&&X(T()),p.copy(S),i.update()}function Se(O){v.set(O.clientX,O.clientY),m.subVectors(v,g).multiplyScalar(i.panSpeed),I(m.x,m.y),g.copy(v),i.update()}function Ae(O){j(O),O.deltaY<0?X(T()):O.deltaY>0&&V(T()),i.update()}function Re(O){let he=!1;switch(O.code){case i.keys.UP:O.ctrlKey||O.metaKey||O.shiftKey?Y(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):I(0,i.keyPanSpeed),he=!0;break;case i.keys.BOTTOM:O.ctrlKey||O.metaKey||O.shiftKey?Y(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):I(0,-i.keyPanSpeed),he=!0;break;case i.keys.LEFT:O.ctrlKey||O.metaKey||O.shiftKey?G(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):I(i.keyPanSpeed,0),he=!0;break;case i.keys.RIGHT:O.ctrlKey||O.metaKey||O.shiftKey?G(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):I(-i.keyPanSpeed,0),he=!0;break}he&&(O.preventDefault(),i.update())}function Pe(){if(A.length===1)h.set(A[0].pageX,A[0].pageY);else{const O=.5*(A[0].pageX+A[1].pageX),he=.5*(A[0].pageY+A[1].pageY);h.set(O,he)}}function Be(){if(A.length===1)g.set(A[0].pageX,A[0].pageY);else{const O=.5*(A[0].pageX+A[1].pageX),he=.5*(A[0].pageY+A[1].pageY);g.set(O,he)}}function et(){const O=A[0].pageX-A[1].pageX,he=A[0].pageY-A[1].pageY,be=Math.sqrt(O*O+he*he);p.set(0,be)}function Ie(){i.enableZoom&&et(),i.enablePan&&Be()}function x(){i.enableZoom&&et(),i.enableRotate&&Pe()}function P(O){if(A.length==1)f.set(O.pageX,O.pageY);else{const be=J(O),me=.5*(O.pageX+be.x),ve=.5*(O.pageY+be.y);f.set(me,ve)}d.subVectors(f,h).multiplyScalar(i.rotateSpeed);const he=i.domElement;G(2*Math.PI*d.x/he.clientHeight),Y(2*Math.PI*d.y/he.clientHeight),h.copy(f)}function D(O){if(A.length===1)v.set(O.pageX,O.pageY);else{const he=J(O),be=.5*(O.pageX+he.x),me=.5*(O.pageY+he.y);v.set(be,me)}m.subVectors(v,g).multiplyScalar(i.panSpeed),I(m.x,m.y),g.copy(v)}function z(O){const he=J(O),be=O.pageX-he.x,me=O.pageY-he.y,ve=Math.sqrt(be*be+me*me);S.set(0,ve),_.set(0,Math.pow(S.y/p.y,i.zoomSpeed)),V(_.y),p.copy(S)}function N(O){i.enableZoom&&z(O),i.enablePan&&D(O)}function Q(O){i.enableZoom&&z(O),i.enableRotate&&P(O)}function ee(O){i.enabled!==!1&&(A.length===0&&(i.domElement.setPointerCapture(O.pointerId),i.domElement.addEventListener("pointermove",$),i.domElement.addEventListener("pointerup",se)),ue(O),O.pointerType==="touch"?k(O):ne(O))}function $(O){i.enabled!==!1&&(O.pointerType==="touch"?oe(O):Ee(O))}function se(O){Me(O),A.length===0&&(i.domElement.releasePointerCapture(O.pointerId),i.domElement.removeEventListener("pointermove",$),i.domElement.removeEventListener("pointerup",se)),i.dispatchEvent(j3),s=r.NONE}function ne(O){let he;switch(O.button){case 0:he=i.mouseButtons.LEFT;break;case 1:he=i.mouseButtons.MIDDLE;break;case 2:he=i.mouseButtons.RIGHT;break;default:he=-1}switch(he){case r1.DOLLY:if(i.enableZoom===!1)return;W(O),s=r.DOLLY;break;case r1.ROTATE:if(O.ctrlKey||O.metaKey||O.shiftKey){if(i.enablePan===!1)return;q(O),s=r.PAN}else{if(i.enableRotate===!1)return;re(O),s=r.ROTATE}break;case r1.PAN:if(O.ctrlKey||O.metaKey||O.shiftKey){if(i.enableRotate===!1)return;re(O),s=r.ROTATE}else{if(i.enablePan===!1)return;q(O),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(Pa)}function Ee(O){switch(s){case r.ROTATE:if(i.enableRotate===!1)return;pe(O);break;case r.DOLLY:if(i.enableZoom===!1)return;_e(O);break;case r.PAN:if(i.enablePan===!1)return;Se(O);break}}function w(O){i.enabled===!1||i.enableZoom===!1||s!==r.NONE||(O.preventDefault(),i.dispatchEvent(Pa),Ae(O),i.dispatchEvent(j3))}function M(O){i.enabled===!1||i.enablePan===!1||Re(O)}function k(O){switch(de(O),A.length){case 1:switch(i.touches.ONE){case s1.ROTATE:if(i.enableRotate===!1)return;Pe(),s=r.TOUCH_ROTATE;break;case s1.PAN:if(i.enablePan===!1)return;Be(),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(i.touches.TWO){case s1.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;Ie(),s=r.TOUCH_DOLLY_PAN;break;case s1.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;x(),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&i.dispatchEvent(Pa)}function oe(O){switch(de(O),s){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;P(O),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;D(O),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;N(O),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;Q(O),i.update();break;default:s=r.NONE}}function ce(O){i.enabled!==!1&&O.preventDefault()}function ue(O){A.push(O)}function Me(O){delete U[O.pointerId];for(let he=0;he<A.length;he++)if(A[he].pointerId==O.pointerId){A.splice(he,1);return}}function de(O){let he=U[O.pointerId];he===void 0&&(he=new fe,U[O.pointerId]=he),he.set(O.pageX,O.pageY)}function J(O){const he=O.pointerId===A[0].pointerId?A[1]:A[0];return U[he.pointerId]}i.domElement.addEventListener("contextmenu",ce),i.domElement.addEventListener("pointerdown",ee),i.domElement.addEventListener("pointercancel",se),i.domElement.addEventListener("wheel",w,{passive:!1}),this.update()}}class Vm{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const t=this._partials;let i=0;for(let r=0;r<this._n&&r<32;r++){const s=t[r],o=e+s,a=Math.abs(e)<Math.abs(s)?e-(o-s):s-(o-e);a&&(t[i++]=a),e=o}return t[i]=e,this._n=i+1,this}valueOf(){const e=this._partials;let t=this._n,i,r,s,o=0;if(t>0){for(o=e[--t];t>0&&(i=o,r=e[--t],o=i+r,s=r-(o-i),!s););t>0&&(s<0&&e[t-1]<0||s>0&&e[t-1]>0)&&(r=s*2,i=o+r,r==i-o&&(o=i))}return o}}function*Gm(n){for(const e of n)yield*e}function s0(n){return Array.from(Gm(n))}var at=1e-6,Wm=1e-12,Ze=Math.PI,rn=Ze/2,Y3=Ze/4,xn=Ze*2,un=180/Ze,Tt=Ze/180,pt=Math.abs,o0=Math.atan,Gr=Math.atan2,_t=Math.cos,Xm=Math.exp,jm=Math.log,xt=Math.sin,qm=Math.sign||function(n){return n>0?1:n<0?-1:0},Do=Math.sqrt,Ym=Math.tan;function Km(n){return n>1?0:n<-1?Ze:Math.acos(n)}function Wr(n){return n>1?rn:n<-1?-rn:Math.asin(n)}function pr(){}function co(n,e){n&&$3.hasOwnProperty(n.type)&&$3[n.type](n,e)}var K3={Feature:function(n,e){co(n.geometry,e)},FeatureCollection:function(n,e){for(var t=n.features,i=-1,r=t.length;++i<r;)co(t[i].geometry,e)}},$3={Sphere:function(n,e){e.sphere()},Point:function(n,e){n=n.coordinates,e.point(n[0],n[1],n[2])},MultiPoint:function(n,e){for(var t=n.coordinates,i=-1,r=t.length;++i<r;)n=t[i],e.point(n[0],n[1],n[2])},LineString:function(n,e){m2(n.coordinates,e,0)},MultiLineString:function(n,e){for(var t=n.coordinates,i=-1,r=t.length;++i<r;)m2(t[i],e,0)},Polygon:function(n,e){Z3(n.coordinates,e)},MultiPolygon:function(n,e){for(var t=n.coordinates,i=-1,r=t.length;++i<r;)Z3(t[i],e)},GeometryCollection:function(n,e){for(var t=n.geometries,i=-1,r=t.length;++i<r;)co(t[i],e)}};function m2(n,e,t){var i=-1,r=n.length-t,s;for(e.lineStart();++i<r;)s=n[i],e.point(s[0],s[1],s[2]);e.lineEnd()}function Z3(n,e){var t=-1,i=n.length;for(e.polygonStart();++t<i;)m2(n[t],e,1);e.polygonEnd()}function $m(n,e){n&&K3.hasOwnProperty(n.type)?K3[n.type](n,e):co(n,e)}function g2(n){return[Gr(n[1],n[0]),Wr(n[2])]}function X1(n){var e=n[0],t=n[1],i=_t(t);return[i*_t(e),i*xt(e),xt(t)]}function Us(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}function uo(n,e){return[n[1]*e[2]-n[2]*e[1],n[2]*e[0]-n[0]*e[2],n[0]*e[1]-n[1]*e[0]]}function La(n,e){n[0]+=e[0],n[1]+=e[1],n[2]+=e[2]}function Os(n,e){return[n[0]*e,n[1]*e,n[2]*e]}function v2(n){var e=Do(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);n[0]/=e,n[1]/=e,n[2]/=e}function _2(n,e){function t(i,r){return i=n(i,r),e(i[0],i[1])}return n.invert&&e.invert&&(t.invert=function(i,r){return i=e.invert(i,r),i&&n.invert(i[0],i[1])}),t}function x2(n,e){return pt(n)>Ze&&(n-=Math.round(n/xn)*xn),[n,e]}x2.invert=x2;function a0(n,e,t){return(n%=xn)?e||t?_2(Q3(n),eu(e,t)):Q3(n):e||t?eu(e,t):x2}function J3(n){return function(e,t){return e+=n,pt(e)>Ze&&(e-=Math.round(e/xn)*xn),[e,t]}}function Q3(n){var e=J3(n);return e.invert=J3(-n),e}function eu(n,e){var t=_t(n),i=xt(n),r=_t(e),s=xt(e);function o(a,l){var c=_t(l),u=_t(a)*c,h=xt(a)*c,f=xt(l),d=f*t+u*i;return[Gr(h*r-d*s,u*t-f*i),Wr(d*r+h*s)]}return o.invert=function(a,l){var c=_t(l),u=_t(a)*c,h=xt(a)*c,f=xt(l),d=f*r-h*s;return[Gr(h*r+f*s,u*t+d*i),Wr(d*t-u*i)]},o}function Zm(n){n=a0(n[0]*Tt,n[1]*Tt,n.length>2?n[2]*Tt:0);function e(t){return t=n(t[0]*Tt,t[1]*Tt),t[0]*=un,t[1]*=un,t}return e.invert=function(t){return t=n.invert(t[0]*Tt,t[1]*Tt),t[0]*=un,t[1]*=un,t},e}function Jm(n,e,t,i,r,s){if(t){var o=_t(e),a=xt(e),l=i*t;r==null?(r=e+i*xn,s=e-l/2):(r=tu(o,r),s=tu(o,s),(i>0?r<s:r>s)&&(r+=i*xn));for(var c,u=r;i>0?u>s:u<s;u-=l)c=g2([o,-a*_t(u),-a*xt(u)]),n.point(c[0],c[1])}}function tu(n,e){e=X1(e),e[0]-=n,v2(e);var t=Km(-e[1]);return((-e[2]<0?-t:t)+xn-at)%xn}function l0(){var n=[],e;return{point:function(t,i,r){e.push([t,i,r])},lineStart:function(){n.push(e=[])},lineEnd:pr,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var t=n;return n=[],e=null,t}}}function Ks(n,e){return pt(n[0]-e[0])<at&&pt(n[1]-e[1])<at}function Ns(n,e,t,i){this.x=n,this.z=e,this.o=t,this.e=i,this.v=!1,this.n=this.p=null}function c0(n,e,t,i,r){var s=[],o=[],a,l;if(n.forEach(function(g){if(!((v=g.length-1)<=0)){var v,m=g[0],p=g[v],S;if(Ks(m,p)){if(!m[2]&&!p[2]){for(r.lineStart(),a=0;a<v;++a)r.point((m=g[a])[0],m[1]);r.lineEnd();return}p[0]+=2*at}s.push(S=new Ns(m,g,null,!0)),o.push(S.o=new Ns(m,null,S,!1)),s.push(S=new Ns(p,g,null,!1)),o.push(S.o=new Ns(p,null,S,!0))}}),!!s.length){for(o.sort(e),nu(s),nu(o),a=0,l=o.length;a<l;++a)o[a].e=t=!t;for(var c=s[0],u,h;;){for(var f=c,d=!0;f.v;)if((f=f.n)===c)return;u=f.z,r.lineStart();do{if(f.v=f.o.v=!0,f.e){if(d)for(a=0,l=u.length;a<l;++a)r.point((h=u[a])[0],h[1]);else i(f.x,f.n.x,1,r);f=f.n}else{if(d)for(u=f.p.z,a=u.length-1;a>=0;--a)r.point((h=u[a])[0],h[1]);else i(f.x,f.p.x,-1,r);f=f.p}f=f.o,u=f.z,d=!d}while(!f.v);r.lineEnd()}}}function nu(n){if(e=n.length){for(var e,t=0,i=n[0],r;++t<e;)i.n=r=n[t],r.p=i,i=r;i.n=r=n[0],r.p=i}}function Ia(n){return pt(n[0])<=Ze?n[0]:qm(n[0])*((pt(n[0])+Ze)%xn-Ze)}function Qm(n,e){var t=Ia(e),i=e[1],r=xt(i),s=[xt(t),-_t(t),0],o=0,a=0,l=new Vm;r===1?i=rn+at:r===-1&&(i=-rn-at);for(var c=0,u=n.length;c<u;++c)if(f=(h=n[c]).length)for(var h,f,d=h[f-1],g=Ia(d),v=d[1]/2+Y3,m=xt(v),p=_t(v),S=0;S<f;++S,g=y,m=C,p=A,d=_){var _=h[S],y=Ia(_),b=_[1]/2+Y3,C=xt(b),A=_t(b),U=y-g,E=U>=0?1:-1,T=E*U,G=T>Ze,Y=m*C;if(l.add(Gr(Y*E*xt(T),p*A+Y*_t(T))),o+=G?U+E*xn:U,G^g>=t^y>=t){var B=uo(X1(d),X1(_));v2(B);var H=uo(s,B);v2(H);var I=(G^U>=0?-1:1)*Wr(H[2]);(i>I||i===I&&(B[0]||B[1]))&&(a+=G^U>=0?1:-1)}}return(o<-at||o<at&&l<-Wm)^a&1}function u0(n,e,t,i){return function(r){var s=e(r),o=l0(),a=e(o),l=!1,c,u,h,f={point:d,lineStart:v,lineEnd:m,polygonStart:function(){f.point=p,f.lineStart=S,f.lineEnd=_,u=[],c=[]},polygonEnd:function(){f.point=d,f.lineStart=v,f.lineEnd=m,u=s0(u);var y=Qm(c,i);u.length?(l||(r.polygonStart(),l=!0),c0(u,tg,y,t,r)):y&&(l||(r.polygonStart(),l=!0),r.lineStart(),t(null,null,1,r),r.lineEnd()),l&&(r.polygonEnd(),l=!1),u=c=null},sphere:function(){r.polygonStart(),r.lineStart(),t(null,null,1,r),r.lineEnd(),r.polygonEnd()}};function d(y,b){n(y,b)&&r.point(y,b)}function g(y,b){s.point(y,b)}function v(){f.point=g,s.lineStart()}function m(){f.point=d,s.lineEnd()}function p(y,b){h.push([y,b]),a.point(y,b)}function S(){a.lineStart(),h=[]}function _(){p(h[0][0],h[0][1]),a.lineEnd();var y=a.clean(),b=o.result(),C,A=b.length,U,E,T;if(h.pop(),c.push(h),h=null,!!A){if(y&1){if(E=b[0],(U=E.length-1)>0){for(l||(r.polygonStart(),l=!0),r.lineStart(),C=0;C<U;++C)r.point((T=E[C])[0],T[1]);r.lineEnd()}return}A>1&&y&2&&b.push(b.pop().concat(b.shift())),u.push(b.filter(eg))}}return f}}function eg(n){return n.length>1}function tg(n,e){return((n=n.x)[0]<0?n[1]-rn-at:rn-n[1])-((e=e.x)[0]<0?e[1]-rn-at:rn-e[1])}const iu=u0(function(){return!0},ng,rg,[-Ze,-rn]);function ng(n){var e=NaN,t=NaN,i=NaN,r;return{lineStart:function(){n.lineStart(),r=1},point:function(s,o){var a=s>0?Ze:-Ze,l=pt(s-e);pt(l-Ze)<at?(n.point(e,t=(t+o)/2>0?rn:-rn),n.point(i,t),n.lineEnd(),n.lineStart(),n.point(a,t),n.point(s,t),r=0):i!==a&&l>=Ze&&(pt(e-i)<at&&(e-=i*at),pt(s-a)<at&&(s-=a*at),t=ig(e,t,s,o),n.point(i,t),n.lineEnd(),n.lineStart(),n.point(a,t),r=0),n.point(e=s,t=o),i=a},lineEnd:function(){n.lineEnd(),e=t=NaN},clean:function(){return 2-r}}}function ig(n,e,t,i){var r,s,o=xt(n-t);return pt(o)>at?o0((xt(e)*(s=_t(i))*xt(t)-xt(i)*(r=_t(e))*xt(n))/(r*s*o)):(e+i)/2}function rg(n,e,t,i){var r;if(n==null)r=t*rn,i.point(-Ze,r),i.point(0,r),i.point(Ze,r),i.point(Ze,0),i.point(Ze,-r),i.point(0,-r),i.point(-Ze,-r),i.point(-Ze,0),i.point(-Ze,r);else if(pt(n[0]-e[0])>at){var s=n[0]<e[0]?Ze:-Ze;r=t*s/2,i.point(-s,r),i.point(0,r),i.point(s,r)}else i.point(e[0],e[1])}function sg(n){var e=_t(n),t=6*Tt,i=e>0,r=pt(e)>at;function s(u,h,f,d){Jm(d,n,t,f,u,h)}function o(u,h){return _t(u)*_t(h)>e}function a(u){var h,f,d,g,v;return{lineStart:function(){g=d=!1,v=1},point:function(m,p){var S=[m,p],_,y=o(m,p),b=i?y?0:c(m,p):y?c(m+(m<0?Ze:-Ze),p):0;if(!h&&(g=d=y)&&u.lineStart(),y!==d&&(_=l(h,S),(!_||Ks(h,_)||Ks(S,_))&&(S[2]=1)),y!==d)v=0,y?(u.lineStart(),_=l(S,h),u.point(_[0],_[1])):(_=l(h,S),u.point(_[0],_[1],2),u.lineEnd()),h=_;else if(r&&h&&i^y){var C;!(b&f)&&(C=l(S,h,!0))&&(v=0,i?(u.lineStart(),u.point(C[0][0],C[0][1]),u.point(C[1][0],C[1][1]),u.lineEnd()):(u.point(C[1][0],C[1][1]),u.lineEnd(),u.lineStart(),u.point(C[0][0],C[0][1],3)))}y&&(!h||!Ks(h,S))&&u.point(S[0],S[1]),h=S,d=y,f=b},lineEnd:function(){d&&u.lineEnd(),h=null},clean:function(){return v|(g&&d)<<1}}}function l(u,h,f){var d=X1(u),g=X1(h),v=[1,0,0],m=uo(d,g),p=Us(m,m),S=m[0],_=p-S*S;if(!_)return!f&&u;var y=e*p/_,b=-e*S/_,C=uo(v,m),A=Os(v,y),U=Os(m,b);La(A,U);var E=C,T=Us(A,E),G=Us(E,E),Y=T*T-G*(Us(A,A)-1);if(!(Y<0)){var B=Do(Y),H=Os(E,(-T-B)/G);if(La(H,A),H=g2(H),!f)return H;var I=u[0],V=h[0],X=u[1],j=h[1],ie;V<I&&(ie=I,I=V,V=ie);var re=V-I,W=pt(re-Ze)<at,q=W||re<at;if(!W&&j<X&&(ie=X,X=j,j=ie),q?W?X+j>0^H[1]<(pt(H[0]-I)<at?X:j):X<=H[1]&&H[1]<=j:re>Ze^(I<=H[0]&&H[0]<=V)){var pe=Os(E,(-T+B)/G);return La(pe,A),[H,g2(pe)]}}}function c(u,h){var f=i?n:Ze-n,d=0;return u<-f?d|=1:u>f&&(d|=2),h<-f?d|=4:h>f&&(d|=8),d}return u0(o,a,s,i?[0,-n]:[-Ze,n-Ze])}function og(n,e,t,i,r,s){var o=n[0],a=n[1],l=e[0],c=e[1],u=0,h=1,f=l-o,d=c-a,g;if(g=t-o,!(!f&&g>0)){if(g/=f,f<0){if(g<u)return;g<h&&(h=g)}else if(f>0){if(g>h)return;g>u&&(u=g)}if(g=r-o,!(!f&&g<0)){if(g/=f,f<0){if(g>h)return;g>u&&(u=g)}else if(f>0){if(g<u)return;g<h&&(h=g)}if(g=i-a,!(!d&&g>0)){if(g/=d,d<0){if(g<u)return;g<h&&(h=g)}else if(d>0){if(g>h)return;g>u&&(u=g)}if(g=s-a,!(!d&&g<0)){if(g/=d,d<0){if(g>h)return;g>u&&(u=g)}else if(d>0){if(g<u)return;g<h&&(h=g)}return u>0&&(n[0]=o+u*f,n[1]=a+u*d),h<1&&(e[0]=o+h*f,e[1]=a+h*d),!0}}}}}var mr=1e9,Fs=-mr;function ag(n,e,t,i){function r(c,u){return n<=c&&c<=t&&e<=u&&u<=i}function s(c,u,h,f){var d=0,g=0;if(c==null||(d=o(c,h))!==(g=o(u,h))||l(c,u)<0^h>0)do f.point(d===0||d===3?n:t,d>1?i:e);while((d=(d+h+4)%4)!==g);else f.point(u[0],u[1])}function o(c,u){return pt(c[0]-n)<at?u>0?0:3:pt(c[0]-t)<at?u>0?2:1:pt(c[1]-e)<at?u>0?1:0:u>0?3:2}function a(c,u){return l(c.x,u.x)}function l(c,u){var h=o(c,1),f=o(u,1);return h!==f?h-f:h===0?u[1]-c[1]:h===1?c[0]-u[0]:h===2?c[1]-u[1]:u[0]-c[0]}return function(c){var u=c,h=l0(),f,d,g,v,m,p,S,_,y,b,C,A={point:U,lineStart:Y,lineEnd:B,polygonStart:T,polygonEnd:G};function U(I,V){r(I,V)&&u.point(I,V)}function E(){for(var I=0,V=0,X=d.length;V<X;++V)for(var j=d[V],ie=1,re=j.length,W=j[0],q,pe,_e=W[0],Se=W[1];ie<re;++ie)q=_e,pe=Se,W=j[ie],_e=W[0],Se=W[1],pe<=i?Se>i&&(_e-q)*(i-pe)>(Se-pe)*(n-q)&&++I:Se<=i&&(_e-q)*(i-pe)<(Se-pe)*(n-q)&&--I;return I}function T(){u=h,f=[],d=[],C=!0}function G(){var I=E(),V=C&&I,X=(f=s0(f)).length;(V||X)&&(c.polygonStart(),V&&(c.lineStart(),s(null,null,1,c),c.lineEnd()),X&&c0(f,a,I,s,c),c.polygonEnd()),u=c,f=d=g=null}function Y(){A.point=H,d&&d.push(g=[]),b=!0,y=!1,S=_=NaN}function B(){f&&(H(v,m),p&&y&&h.rejoin(),f.push(h.result())),A.point=U,y&&u.lineEnd()}function H(I,V){var X=r(I,V);if(d&&g.push([I,V]),b)v=I,m=V,p=X,b=!1,X&&(u.lineStart(),u.point(I,V));else if(X&&y)u.point(I,V);else{var j=[S=Math.max(Fs,Math.min(mr,S)),_=Math.max(Fs,Math.min(mr,_))],ie=[I=Math.max(Fs,Math.min(mr,I)),V=Math.max(Fs,Math.min(mr,V))];og(j,ie,n,e,t,i)?(y||(u.lineStart(),u.point(j[0],j[1])),u.point(ie[0],ie[1]),X||u.lineEnd(),C=!1):X&&(u.lineStart(),u.point(I,V),C=!1)}S=I,_=V,y=X}return A}}const ru=n=>n;var j1=1/0,ho=j1,Xr=-j1,fo=Xr,lg={point:cg,lineStart:pr,lineEnd:pr,polygonStart:pr,polygonEnd:pr,result:function(){var n=[[j1,ho],[Xr,fo]];return Xr=fo=-(ho=j1=1/0),n}};function cg(n,e){n<j1&&(j1=n),n>Xr&&(Xr=n),e<ho&&(ho=e),e>fo&&(fo=e)}const su=lg;function dl(n){return function(e){var t=new y2;for(var i in n)t[i]=n[i];return t.stream=e,t}}function y2(){}y2.prototype={constructor:y2,point:function(n,e){this.stream.point(n,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};function pl(n,e,t){var i=n.clipExtent&&n.clipExtent();return n.scale(150).translate([0,0]),i!=null&&n.clipExtent(null),$m(t,n.stream(su)),e(su.result()),i!=null&&n.clipExtent(i),n}function h0(n,e,t){return pl(n,function(i){var r=e[1][0]-e[0][0],s=e[1][1]-e[0][1],o=Math.min(r/(i[1][0]-i[0][0]),s/(i[1][1]-i[0][1])),a=+e[0][0]+(r-o*(i[1][0]+i[0][0]))/2,l=+e[0][1]+(s-o*(i[1][1]+i[0][1]))/2;n.scale(150*o).translate([a,l])},t)}function ug(n,e,t){return h0(n,[[0,0],e],t)}function hg(n,e,t){return pl(n,function(i){var r=+e,s=r/(i[1][0]-i[0][0]),o=(r-s*(i[1][0]+i[0][0]))/2,a=-s*i[0][1];n.scale(150*s).translate([o,a])},t)}function fg(n,e,t){return pl(n,function(i){var r=+e,s=r/(i[1][1]-i[0][1]),o=-s*i[0][0],a=(r-s*(i[1][1]+i[0][1]))/2;n.scale(150*s).translate([o,a])},t)}var ou=16,dg=_t(30*Tt);function au(n,e){return+e?mg(n,e):pg(n)}function pg(n){return dl({point:function(e,t){e=n(e,t),this.stream.point(e[0],e[1])}})}function mg(n,e){function t(i,r,s,o,a,l,c,u,h,f,d,g,v,m){var p=c-i,S=u-r,_=p*p+S*S;if(_>4*e&&v--){var y=o+f,b=a+d,C=l+g,A=Do(y*y+b*b+C*C),U=Wr(C/=A),E=pt(pt(C)-1)<at||pt(s-h)<at?(s+h)/2:Gr(b,y),T=n(E,U),G=T[0],Y=T[1],B=G-i,H=Y-r,I=S*B-p*H;(I*I/_>e||pt((p*B+S*H)/_-.5)>.3||o*f+a*d+l*g<dg)&&(t(i,r,s,o,a,l,G,Y,E,y/=A,b/=A,C,v,m),m.point(G,Y),t(G,Y,E,y,b,C,c,u,h,f,d,g,v,m))}}return function(i){var r,s,o,a,l,c,u,h,f,d,g,v,m={point:p,lineStart:S,lineEnd:y,polygonStart:function(){i.polygonStart(),m.lineStart=b},polygonEnd:function(){i.polygonEnd(),m.lineStart=S}};function p(U,E){U=n(U,E),i.point(U[0],U[1])}function S(){h=NaN,m.point=_,i.lineStart()}function _(U,E){var T=X1([U,E]),G=n(U,E);t(h,f,u,d,g,v,h=G[0],f=G[1],u=U,d=T[0],g=T[1],v=T[2],ou,i),i.point(h,f)}function y(){m.point=p,i.lineEnd()}function b(){S(),m.point=C,m.lineEnd=A}function C(U,E){_(r=U,E),s=h,o=f,a=d,l=g,c=v,m.point=_}function A(){t(h,f,u,d,g,v,s,o,r,a,l,c,ou,i),m.lineEnd=y,y()}return m}}var gg=dl({point:function(n,e){this.stream.point(n*Tt,e*Tt)}});function vg(n){return dl({point:function(e,t){var i=n(e,t);return this.stream.point(i[0],i[1])}})}function _g(n,e,t,i,r){function s(o,a){return o*=i,a*=r,[e+n*o,t-n*a]}return s.invert=function(o,a){return[(o-e)/n*i,(t-a)/n*r]},s}function lu(n,e,t,i,r,s){if(!s)return _g(n,e,t,i,r);var o=_t(s),a=xt(s),l=o*n,c=a*n,u=o/n,h=a/n,f=(a*t-o*e)/n,d=(a*e+o*t)/n;function g(v,m){return v*=i,m*=r,[l*v-c*m+e,t-c*v-l*m]}return g.invert=function(v,m){return[i*(u*v-h*m+f),r*(d-h*v-u*m)]},g}function xg(n){return yg(function(){return n})()}function yg(n){var e,t=150,i=480,r=250,s=0,o=0,a=0,l=0,c=0,u,h=0,f=1,d=1,g=null,v=iu,m=null,p,S,_,y=ru,b=.5,C,A,U,E,T;function G(I){return U(I[0]*Tt,I[1]*Tt)}function Y(I){return I=U.invert(I[0],I[1]),I&&[I[0]*un,I[1]*un]}G.stream=function(I){return E&&T===I?E:E=gg(vg(u)(v(C(y(T=I)))))},G.preclip=function(I){return arguments.length?(v=I,g=void 0,H()):v},G.postclip=function(I){return arguments.length?(y=I,m=p=S=_=null,H()):y},G.clipAngle=function(I){return arguments.length?(v=+I?sg(g=I*Tt):(g=null,iu),H()):g*un},G.clipExtent=function(I){return arguments.length?(y=I==null?(m=p=S=_=null,ru):ag(m=+I[0][0],p=+I[0][1],S=+I[1][0],_=+I[1][1]),H()):m==null?null:[[m,p],[S,_]]},G.scale=function(I){return arguments.length?(t=+I,B()):t},G.translate=function(I){return arguments.length?(i=+I[0],r=+I[1],B()):[i,r]},G.center=function(I){return arguments.length?(s=I[0]%360*Tt,o=I[1]%360*Tt,B()):[s*un,o*un]},G.rotate=function(I){return arguments.length?(a=I[0]%360*Tt,l=I[1]%360*Tt,c=I.length>2?I[2]%360*Tt:0,B()):[a*un,l*un,c*un]},G.angle=function(I){return arguments.length?(h=I%360*Tt,B()):h*un},G.reflectX=function(I){return arguments.length?(f=I?-1:1,B()):f<0},G.reflectY=function(I){return arguments.length?(d=I?-1:1,B()):d<0},G.precision=function(I){return arguments.length?(C=au(A,b=I*I),H()):Do(b)},G.fitExtent=function(I,V){return h0(G,I,V)},G.fitSize=function(I,V){return ug(G,I,V)},G.fitWidth=function(I,V){return hg(G,I,V)},G.fitHeight=function(I,V){return fg(G,I,V)};function B(){var I=lu(t,0,0,f,d,h).apply(null,e(s,o)),V=lu(t,i-I[0],r-I[1],f,d,h);return u=a0(a,l,c),A=_2(e,V),U=_2(u,A),C=au(A,b),H()}function H(){return E=T=null,G}return function(){return e=n.apply(this,arguments),G.invert=e.invert&&Y,B()}}function ml(n,e){return[n,jm(Ym((rn+e)/2))]}ml.invert=function(n,e){return[n,2*o0(Xm(e))-rn]};function cu(){return Mg(ml).scale(961/xn)}function Mg(n){var e=xg(n),t=e.center,i=e.scale,r=e.translate,s=e.clipExtent,o=null,a,l,c;e.scale=function(h){return arguments.length?(i(h),u()):i()},e.translate=function(h){return arguments.length?(r(h),u()):r()},e.center=function(h){return arguments.length?(t(h),u()):t()},e.clipExtent=function(h){return arguments.length?(h==null?o=a=l=c=null:(o=+h[0][0],a=+h[0][1],l=+h[1][0],c=+h[1][1]),u()):o==null?null:[[o,a],[l,c]]};function u(){var h=Ze*i(),f=e(Zm(e.rotate()).invert([0,0]));return s(o==null?[[f[0]-h,f[1]-h],[f[0]+h,f[1]+h]]:n===ml?[[Math.max(f[0]-h,o),a],[Math.min(f[0]+h,l),c]]:[[o,Math.max(f[1]-h,a)],[l,Math.min(f[1]+h,c)]])}return u()}function gr(n,e,t){this.k=n,this.x=e,this.y=t}gr.prototype={constructor:gr,scale:function(n){return n===1?this:new gr(this.k*n,this.x,this.y)},translate:function(n,e){return n===0&e===0?this:new gr(this.k,this.x+this.k*n,this.y+this.k*e)},apply:function(n){return[n[0]*this.k+this.x,n[1]*this.k+this.y]},applyX:function(n){return n*this.k+this.x},applyY:function(n){return n*this.k+this.y},invert:function(n){return[(n[0]-this.x)/this.k,(n[1]-this.y)/this.k]},invertX:function(n){return(n-this.x)/this.k},invertY:function(n){return(n-this.y)/this.k},rescaleX:function(n){return n.copy().domain(n.range().map(this.invertX,this).map(n.invert,n))},rescaleY:function(n){return n.copy().domain(n.range().map(this.invertY,this).map(n.invert,n))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};gr.prototype;const Sg="FeatureCollection",Eg=[{type:"Feature",properties:{adcode:440100,name:"广州市",center:[113.280637,23.125178],centroid:[113.544372,23.329249],childrenNum:11,level:"city",parent:{adcode:44e4},subFeatureIndex:0,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[113.365116,22.772595],[113.412172,22.742849],[113.42612,22.738014],[113.447808,22.735836],[113.467964,22.728504],[113.464822,22.72096],[113.491875,22.699811],[113.523373,22.679297],[113.540693,22.666222],[113.533106,22.656388],[113.536861,22.647511],[113.561615,22.607528],[113.578552,22.604603],[113.589971,22.59519],[113.599628,22.594393],[113.62078,22.579554],[113.639326,22.548276],[113.651588,22.515715],[113.692052,22.515129],[113.728149,22.521993],[113.740487,22.534284],[113.716883,22.645172],[113.685308,22.717719],[113.678181,22.726113],[113.648139,22.761759],[113.612119,22.802281],[113.58407,22.831325],[113.571195,22.853143],[113.575104,22.888331],[113.564298,22.906903],[113.550503,22.936189],[113.541766,22.959369],[113.529198,22.982599],[113.52299,23.011338],[113.522913,23.037262],[113.531957,23.050938],[113.543759,23.06228],[113.54897,23.076006],[113.556327,23.081252],[113.586446,23.08777],[113.60139,23.0954],[113.610433,23.103772],[113.640245,23.103878],[113.642698,23.113467],[113.651281,23.119295],[113.661244,23.117971],[113.662011,23.111454],[113.670671,23.116434],[113.687837,23.119772],[113.71696,23.138895],[113.738572,23.141331],[113.754052,23.129572],[113.777427,23.131108],[113.791298,23.127665],[113.814673,23.127771],[113.841113,23.116169],[113.844715,23.125599],[113.849849,23.148853],[113.858739,23.157221],[113.874757,23.165377],[113.895679,23.164529],[113.902116,23.177186],[113.889011,23.178616],[113.8838,23.191694],[113.893993,23.21266],[113.903802,23.212554],[113.890084,23.242144],[113.895142,23.253523],[113.877209,23.264213],[113.890314,23.282681],[113.888475,23.290512],[113.894989,23.314689],[113.889394,23.334154],[113.895985,23.34505],[113.927483,23.339972],[113.939285,23.342934],[113.958905,23.33262],[113.958445,23.314953],[113.977451,23.304849],[113.978217,23.30104],[113.996687,23.297443],[113.996151,23.309346],[113.984195,23.330505],[113.993928,23.333149],[114.000902,23.346636],[113.990556,23.354833],[113.982049,23.379369],[113.995997,23.386771],[114.000442,23.39338],[113.986801,23.405591],[113.984195,23.421238],[113.98795,23.431439],[113.975382,23.429378],[113.960054,23.43276],[113.952774,23.442907],[113.955456,23.466053],[113.974462,23.46489],[113.981743,23.472129],[113.974156,23.478839],[113.96105,23.480371],[113.938749,23.476726],[113.931162,23.483066],[113.940895,23.483594],[113.946643,23.492522],[113.929936,23.494213],[113.923115,23.503088],[113.911543,23.504144],[113.906408,23.511856],[113.89315,23.520254],[113.888168,23.535095],[113.871384,23.541327],[113.862495,23.566303],[113.852838,23.570579],[113.864027,23.587368],[113.858356,23.593491],[113.859582,23.60996],[113.843565,23.617877],[113.834215,23.61756],[113.832223,23.624263],[113.817432,23.623471],[113.816742,23.63582],[113.825555,23.639883],[113.827778,23.648009],[113.818811,23.656188],[113.839963,23.655449],[113.847857,23.679348],[113.881884,23.685151],[113.897595,23.700184],[113.900967,23.715426],[113.912386,23.716534],[113.920049,23.729454],[113.93645,23.732143],[113.940282,23.738155],[113.955916,23.732671],[113.96105,23.738207],[113.972853,23.739262],[113.976071,23.757716],[113.998756,23.762988],[114.013087,23.777959],[114.017686,23.778276],[114.009945,23.762988],[114.018222,23.76283],[114.02489,23.752549],[114.027419,23.760141],[114.038454,23.771212],[114.05999,23.775851],[114.056311,23.784021],[114.037228,23.793509],[114.047728,23.803312],[114.035312,23.813378],[114.040294,23.824444],[114.052249,23.830029],[114.057767,23.846784],[114.050487,23.85474],[114.047728,23.867488],[114.041827,23.871491],[114.04267,23.889874],[114.036232,23.901776],[114.031327,23.906305],[114.033856,23.91889],[114.017992,23.925261],[114.008413,23.933001],[113.984502,23.926157],[113.982126,23.929684],[113.952697,23.929632],[113.941201,23.923577],[113.93645,23.928737],[113.907787,23.924577],[113.892536,23.931685],[113.887478,23.923998],[113.879815,23.930369],[113.865177,23.928947],[113.851152,23.920312],[113.841496,23.918732],[113.807315,23.900407],[113.800265,23.902566],[113.791605,23.903882],[113.781105,23.896299],[113.775358,23.877918],[113.767081,23.871439],[113.758191,23.857479],[113.749071,23.854371],[113.742327,23.859165],[113.733667,23.855003],[113.713511,23.862484],[113.709756,23.856267],[113.718033,23.843887],[113.714814,23.834982],[113.720178,23.825129],[113.706384,23.815275],[113.687378,23.825709],[113.684312,23.812956],[113.666379,23.813694],[113.651664,23.820123],[113.640245,23.814274],[113.633731,23.797198],[113.615185,23.779804],[113.626144,23.767416],[113.636414,23.750229],[113.630742,23.738946],[113.63649,23.731985],[113.631662,23.727872],[113.628137,23.711682],[113.638176,23.704562],[113.622619,23.699446],[113.623845,23.694699],[113.61166,23.686206],[113.615721,23.680192],[113.597252,23.664946],[113.587212,23.669008],[113.587289,23.675234],[113.568053,23.679454],[113.568053,23.690215],[113.55878,23.700712],[113.546901,23.702558],[113.545445,23.696387],[113.527052,23.686153],[113.510268,23.682461],[113.481069,23.684043],[113.468731,23.691006],[113.464286,23.70799],[113.443823,23.715901],[113.438459,23.727134],[113.404278,23.723495],[113.397841,23.730562],[113.378375,23.731511],[113.372397,23.709731],[113.366343,23.710311],[113.347413,23.667215],[113.338447,23.665737],[113.334845,23.656399],[113.327947,23.655502],[113.32833,23.645371],[113.31101,23.643313],[113.289245,23.644368],[113.299438,23.637456],[113.290548,23.617085],[113.280049,23.608957],[113.2766,23.615977],[113.248474,23.601567],[113.24035,23.606212],[113.245868,23.588265],[113.227859,23.594441],[113.227015,23.585731],[113.214524,23.584253],[113.202262,23.576492],[113.200805,23.561815],[113.210155,23.552997],[113.211918,23.543914],[113.191149,23.523212],[113.192069,23.514761],[113.172066,23.512384],[113.15352,23.502823],[113.128689,23.512596],[113.108994,23.497964],[113.083933,23.494266],[113.075503,23.484228],[113.063854,23.482537],[113.055884,23.471971],[113.042932,23.474137],[113.018025,23.469065],[113.00469,23.462037],[112.993347,23.466845],[112.975184,23.463622],[112.972962,23.450042],[112.961926,23.44444],[112.96024,23.425995],[112.974188,23.434081],[112.978633,23.441586],[112.989132,23.443277],[112.982771,23.434451],[112.988673,23.419811],[113.001088,23.406332],[112.990588,23.402631],[112.988366,23.390102],[112.980626,23.380268],[112.989822,23.354728],[113.012583,23.352612],[113.018331,23.341347],[113.034808,23.357372],[113.043392,23.351131],[113.027604,23.33352],[113.023466,23.324898],[113.037567,23.320084],[113.032509,23.300881],[113.042549,23.283422],[113.051439,23.278395],[113.052742,23.26342],[113.044925,23.2522],[113.053508,23.253418],[113.070215,23.248813],[113.079795,23.250083],[113.081941,23.261726],[113.072284,23.284268],[113.086156,23.285274],[113.090524,23.28993],[113.105545,23.289718],[113.11022,23.295961],[113.105775,23.302733],[113.124704,23.307653],[113.128,23.31453],[113.150838,23.297972],[113.150608,23.289983],[113.160877,23.286649],[113.177738,23.271304],[113.182029,23.251459],[113.176511,23.236587],[113.177508,23.220866],[113.191072,23.214937],[113.204867,23.201172],[113.209006,23.192171],[113.209465,23.17708],[113.1877,23.159127],[113.186857,23.14827],[113.191992,23.14345],[113.211535,23.142603],[113.209695,23.121838],[113.203718,23.121891],[113.208163,23.099692],[113.215826,23.100646],[113.208776,23.083531],[113.193678,23.083902],[113.177201,23.076695],[113.184865,23.05963],[113.195747,23.056185],[113.211688,23.043305],[113.225713,23.041874],[113.254912,23.044842],[113.25836,23.013989],[113.250007,23.009058],[113.251923,22.970348],[113.267557,22.958786],[113.285183,22.951095],[113.298212,22.934014],[113.282424,22.927383],[113.28595,22.901438],[113.27706,22.894699],[113.300434,22.87708],[113.301354,22.866094],[113.296296,22.862485],[113.309631,22.851179],[113.312083,22.830369],[113.335994,22.817945],[113.364273,22.823467],[113.37439,22.822618],[113.393396,22.809822],[113.38305,22.799308],[113.356533,22.792989],[113.365116,22.772595]]]]}},{type:"Feature",properties:{adcode:440200,name:"韶关市",center:[113.591544,24.801322],centroid:[113.779323,24.81941],childrenNum:10,level:"city",parent:{adcode:44e4},subFeatureIndex:1,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[113.800265,23.902566],[113.807315,23.900407],[113.841496,23.918732],[113.851152,23.920312],[113.865177,23.928947],[113.879815,23.930369],[113.887478,23.923998],[113.892536,23.931685],[113.907787,23.924577],[113.93645,23.928737],[113.941201,23.923577],[113.952697,23.929632],[113.982126,23.929684],[113.984502,23.926157],[114.008413,23.933001],[114.017992,23.925261],[114.033856,23.91889],[114.031327,23.906305],[114.036232,23.901776],[114.04129,23.906937],[114.056771,23.935844],[114.074398,23.930895],[114.075624,23.924366],[114.117008,23.929737],[114.119844,23.936002],[114.142835,23.940425],[114.158162,23.939846],[114.16368,23.953586],[114.174333,23.959429],[114.186518,23.95627],[114.19196,23.9449],[114.201999,23.941267],[114.213341,23.946163],[114.21702,23.942636],[114.238479,23.941899],[114.244303,23.948269],[114.258711,23.952744],[114.263309,23.960218],[114.271816,23.959482],[114.271739,23.948479],[114.251047,23.940477],[114.254649,23.934686],[114.247905,23.929737],[114.236716,23.910676],[114.248671,23.906516],[114.263156,23.911044],[114.268367,23.902829],[114.279633,23.901091],[114.28814,23.90541],[114.303161,23.891454],[114.32163,23.894403],[114.331517,23.900512],[114.34991,23.887925],[114.362632,23.901091],[114.360486,23.910412],[114.36769,23.912519],[114.370449,23.92742],[114.382481,23.932159],[114.378036,23.942794],[114.386696,23.95627],[114.384856,23.967798],[114.389685,23.97043],[114.382941,23.981851],[114.385393,23.994482],[114.391984,23.991693],[114.385546,24.003901],[114.389685,24.012741],[114.399494,24.018003],[114.398038,24.026],[114.412523,24.027421],[114.420416,24.019582],[114.425628,24.032998],[114.440725,24.033208],[114.436587,24.048569],[114.437813,24.062192],[114.44586,24.07066],[114.46364,24.07592],[114.481267,24.086595],[114.493222,24.106787],[114.489697,24.114043],[114.495828,24.118617],[114.509469,24.106682],[114.522957,24.12419],[114.527939,24.135807],[114.533993,24.138856],[114.535833,24.124347],[114.546715,24.130393],[114.554226,24.124295],[114.565568,24.136175],[114.558134,24.15063],[114.568327,24.159303],[114.594077,24.164138],[114.600055,24.174911],[114.590782,24.187838],[114.590935,24.203653],[114.597602,24.21248],[114.591318,24.225981],[114.577293,24.227241],[114.566028,24.233019],[114.556065,24.245888],[114.548324,24.230603],[114.512458,24.210904],[114.511155,24.205335],[114.491613,24.192357],[114.48119,24.172284],[114.474216,24.16624],[114.470537,24.171811],[114.460574,24.169604],[114.46272,24.161931],[114.469848,24.162141],[114.469311,24.144376],[114.463946,24.14017],[114.474063,24.135229],[114.482953,24.118827],[114.479044,24.112939],[114.46387,24.110836],[114.446856,24.121245],[114.439499,24.121982],[114.433215,24.133337],[114.422179,24.131181],[114.419956,24.139329],[114.393517,24.140959],[114.378879,24.139172],[114.365161,24.132233],[114.352209,24.143219],[114.340713,24.135807],[114.337418,24.125294],[114.329831,24.126871],[114.33029,24.137279],[114.316419,24.147319],[114.306533,24.165399],[114.292891,24.175069],[114.289289,24.1819],[114.298026,24.195142],[114.290899,24.207594],[114.274192,24.212742],[114.274958,24.224195],[114.263156,24.246676],[114.254802,24.256707],[114.272889,24.257495],[114.254649,24.266055],[114.266451,24.272776],[114.263692,24.27829],[114.279326,24.303176],[114.280553,24.313098],[114.272966,24.324856],[114.280859,24.337348],[114.292508,24.346952],[114.293581,24.352672],[114.278637,24.364951],[114.249208,24.362695],[114.249898,24.386935],[114.254879,24.400155],[114.245683,24.411328],[114.242004,24.426014],[114.257868,24.435245],[114.283465,24.453965],[114.292968,24.468856],[114.306839,24.472998],[114.310595,24.480757],[114.286607,24.500572],[114.280399,24.511526],[114.280169,24.523109],[114.273732,24.533695],[114.288906,24.537991],[114.293275,24.551982],[114.310518,24.558583],[114.308142,24.574143],[114.301015,24.579067],[114.299942,24.58839],[114.291052,24.600175],[114.289749,24.618767],[114.281932,24.621019],[114.27902,24.631596],[114.265992,24.630915],[114.258481,24.641544],[114.242847,24.645419],[114.231581,24.640445],[114.208743,24.648665],[114.207134,24.653952],[114.193799,24.652643],[114.174563,24.645576],[114.175866,24.658978],[114.181537,24.653324],[114.189814,24.657983],[114.169811,24.682585],[114.169045,24.689651],[114.191576,24.694204],[114.210353,24.6885],[114.230815,24.697763],[114.257485,24.697292],[114.272506,24.700432],[114.279556,24.70802],[114.284385,24.72738],[114.293198,24.732037],[114.311744,24.734077],[114.319638,24.742291],[114.335808,24.749092],[114.341863,24.763686],[114.333892,24.7799],[114.344085,24.789574],[114.342399,24.807353],[114.349297,24.816922],[114.357497,24.818699],[114.356577,24.828999],[114.377882,24.860832],[114.387385,24.863341],[114.40302,24.877555],[114.404859,24.892605],[114.401027,24.902637],[114.390758,24.913138],[114.400031,24.919511],[114.402177,24.928444],[114.396199,24.937324],[114.395892,24.951112],[114.425551,24.959259],[114.423635,24.972576],[114.442181,24.972315],[114.456666,24.978528],[114.456666,24.99722],[114.479887,25.005781],[114.484639,25.001762],[114.506174,25.000091],[114.511385,25.006617],[114.516903,25.024573],[114.53269,25.022851],[114.539664,25.031619],[114.541121,25.049729],[114.546332,25.053382],[114.561583,25.077592],[114.584957,25.078688],[114.598369,25.071123],[114.604653,25.083696],[114.608715,25.075871],[114.640136,25.073888],[114.654238,25.080618],[114.665733,25.091104],[114.66512,25.101224],[114.679681,25.106806],[114.693936,25.104406],[114.712022,25.110039],[114.716084,25.114577],[114.735627,25.122035],[114.737696,25.130432],[114.732101,25.142478],[114.735014,25.155826],[114.724821,25.162813],[114.702596,25.163178],[114.685736,25.173188],[114.690334,25.179756],[114.680141,25.1931],[114.695162,25.195185],[114.693936,25.213635],[114.702213,25.221192],[114.712712,25.221817],[114.726277,25.233073],[114.740685,25.226246],[114.748425,25.235157],[114.738309,25.231978],[114.738386,25.240107],[114.749345,25.242555],[114.743597,25.24813],[114.742907,25.274542],[114.73463,25.283293],[114.723978,25.28397],[114.722828,25.302146],[114.713019,25.306208],[114.714398,25.315373],[114.702903,25.314123],[114.69225,25.322142],[114.685736,25.313706],[114.674393,25.317195],[114.664814,25.326776],[114.657073,25.328181],[114.636458,25.324537],[114.627568,25.330628],[114.61155,25.358272],[114.599518,25.359417],[114.599748,25.385856],[114.586183,25.3959],[114.580359,25.393506],[114.580972,25.384035],[114.573002,25.384503],[114.573385,25.395015],[114.579056,25.397617],[114.556755,25.406359],[114.540431,25.417025],[114.531311,25.414215],[114.520275,25.403289],[114.505944,25.39871],[114.508856,25.384659],[114.496977,25.377634],[114.477741,25.371544],[114.462644,25.381485],[114.458658,25.387834],[114.448006,25.386533],[114.438809,25.376072],[114.429919,25.349943],[114.430149,25.343852],[114.417581,25.335054],[114.403096,25.334273],[114.400874,25.327817],[114.387692,25.323548],[114.382941,25.317143],[114.372824,25.325422],[114.357344,25.326776],[114.338184,25.334065],[114.31481,25.338594],[114.306226,25.334117],[114.30477,25.314696],[114.312357,25.311832],[114.295727,25.299802],[114.302854,25.290845],[114.292891,25.289178],[114.287297,25.299698],[114.270973,25.302146],[114.265915,25.293813],[114.257025,25.29272],[114.236026,25.300115],[114.227749,25.295376],[114.215871,25.30074],[114.204681,25.299646],[114.204988,25.31027],[114.194105,25.317351],[114.173643,25.305062],[114.168508,25.312509],[114.158546,25.313602],[114.147203,25.305323],[114.144751,25.310634],[114.131339,25.308447],[114.126511,25.300531],[114.115629,25.301885],[114.10375,25.294438],[114.083517,25.275532],[114.076313,25.278501],[114.06865,25.273709],[114.064588,25.281105],[114.055928,25.277667],[114.039911,25.250735],[114.029105,25.254226],[114.031404,25.263655],[114.022131,25.269594],[114.01462,25.280532],[114.025503,25.28897],[114.027649,25.301833],[114.037228,25.308291],[114.056158,25.311884],[114.035466,25.320007],[114.029335,25.328338],[114.036768,25.342707],[114.049107,25.341874],[114.051406,25.34885],[114.041367,25.360666],[114.047881,25.367276],[114.024353,25.37399],[114.045122,25.384035],[114.0406,25.391216],[114.02305,25.384659],[114.010788,25.386429],[114.00573,25.396732],[113.98772,25.403497],[113.983275,25.415308],[114.002971,25.43284],[113.997913,25.444232],[113.961894,25.452554],[113.952544,25.443816],[113.93507,25.437522],[113.926564,25.442151],[113.913382,25.442775],[113.886865,25.436637],[113.88449,25.420302],[113.892077,25.411874],[113.881807,25.406931],[113.883263,25.395327],[113.876902,25.38034],[113.860962,25.369306],[113.839733,25.363477],[113.833449,25.353951],[113.832836,25.343904],[113.823179,25.33193],[113.814979,25.328702],[113.780186,25.334065],[113.758114,25.330004],[113.764168,25.333596],[113.758421,25.3438],[113.754129,25.361186],[113.744013,25.363945],[113.73451,25.348902],[113.725237,25.358636],[113.706537,25.360874],[113.707916,25.352598],[113.687148,25.352077],[113.685385,25.341249],[113.679101,25.334481],[113.663697,25.337709],[113.657489,25.329119],[113.631202,25.330576],[113.620473,25.325682],[113.61074,25.327036],[113.585986,25.307353],[113.579778,25.316622],[113.583304,25.331878],[113.581464,25.342707],[113.554565,25.351869],[113.544295,25.3666],[113.536095,25.368525],[113.524293,25.353587],[113.515096,25.360666],[113.518392,25.370555],[113.504137,25.374979],[113.480073,25.375187],[113.470187,25.365663],[113.462446,25.369827],[113.449878,25.359573],[113.442291,25.361291],[113.427729,25.373262],[113.424127,25.392673],[113.407037,25.401415],[113.393626,25.397565],[113.389334,25.403653],[113.373317,25.402612],[113.366956,25.431175],[113.359752,25.438406],[113.351705,25.437574],[113.340056,25.449901],[113.32971,25.450838],[113.313923,25.442931],[113.315992,25.467532],[113.309171,25.481001],[113.311393,25.490413],[113.296832,25.508402],[113.303347,25.515836],[113.29346,25.516771],[113.288785,25.50939],[113.291774,25.500915],[113.282654,25.494208],[113.269396,25.505282],[113.260813,25.49946],[113.249087,25.51412],[113.243263,25.515628],[113.226172,25.509701],[113.210692,25.496704],[113.200805,25.479389],[113.177048,25.471589],[113.169307,25.488021],[113.151987,25.492232],[113.149995,25.468],[113.134591,25.467688],[113.122329,25.455727],[113.127923,25.449693],[113.118497,25.44548],[113.126237,25.438406],[113.131525,25.414735],[113.114435,25.420562],[113.092363,25.417493],[113.096885,25.410729],[113.090447,25.406775],[113.088761,25.396524],[113.080638,25.390956],[113.080178,25.383358],[113.06462,25.381797],[113.041629,25.366027],[113.02975,25.361239],[113.023696,25.345934],[113.009211,25.352858],[112.995417,25.348954],[112.987983,25.353795],[112.968134,25.349839],[112.964685,25.342134],[112.95112,25.337449],[112.945066,25.326359],[112.931807,25.322819],[112.927822,25.299907],[112.913184,25.299907],[112.900616,25.311363],[112.894868,25.337605],[112.877701,25.333752],[112.868735,25.327817],[112.857392,25.336824],[112.851798,25.33344],[112.858772,25.320215],[112.855476,25.313654],[112.856396,25.291574],[112.866436,25.276574],[112.873946,25.274282],[112.865899,25.2598],[112.868351,25.248808],[112.88092,25.249641],[112.904524,25.238439],[112.910732,25.245161],[112.92399,25.248651],[112.944223,25.249485],[112.951886,25.245734],[112.958401,25.254382],[112.972885,25.251152],[112.979936,25.245056],[112.992581,25.247193],[113.006682,25.231509],[113.017718,25.211186],[113.02975,25.210508],[113.034502,25.201388],[113.030517,25.194508],[113.008598,25.190129],[112.991585,25.176785],[112.974341,25.168235],[112.96798,25.141644],[112.972809,25.132101],[112.986833,25.119219],[112.991125,25.109466],[112.999632,25.10305],[113.004537,25.089174],[113.018408,25.083122],[113.002007,25.071123],[113.002391,25.058235],[112.979706,25.034125],[112.97848,25.026504],[112.992045,25.017944],[112.990512,24.995393],[113.002084,24.991059],[113.009978,24.97738],[113.008522,24.961975],[113.002774,24.957118],[113.011894,24.946099],[112.991661,24.937533],[112.994804,24.927347],[113.00515,24.914078],[113.004766,24.900129],[113.009901,24.896889],[113.010974,24.882781],[113.022163,24.870866],[113.019557,24.855971],[113.014729,24.851528],[112.998942,24.850483],[112.979246,24.832553],[112.95978,24.824241],[112.95158,24.815771],[112.960087,24.800974],[112.95112,24.788476],[112.954109,24.782201],[112.940161,24.757514],[112.933647,24.755369],[112.938781,24.73821],[112.930351,24.718695],[112.900616,24.713776],[112.914487,24.662695],[112.896401,24.650602],[112.89778,24.632277],[112.884599,24.616358],[112.887971,24.595304],[112.8987,24.600542],[112.902072,24.595671],[112.91717,24.60049],[112.926366,24.596457],[112.950507,24.59499],[112.964378,24.586138],[112.96139,24.570266],[112.96936,24.568118],[112.981928,24.542917],[112.991048,24.544751],[112.999708,24.528716],[113.02063,24.513675],[113.025612,24.493863],[113.047377,24.475515],[113.063701,24.468804],[113.087305,24.471583],[113.096808,24.496431],[113.114128,24.502983],[113.13712,24.482907],[113.151451,24.478713],[113.153367,24.467703],[113.16195,24.479027],[113.174979,24.475882],[113.186781,24.480705],[113.19705,24.474676],[113.20617,24.476458],[113.216516,24.495697],[113.230158,24.498475],[113.235829,24.505866],[113.244642,24.502144],[113.25108,24.510216],[113.252766,24.497794],[113.261809,24.482225],[113.270392,24.47672],[113.272155,24.466969],[113.294993,24.457164],[113.31944,24.465291],[113.331243,24.472579],[113.350632,24.472159],[113.362051,24.47908],[113.37416,24.49402],[113.379754,24.485213],[113.415544,24.485266],[113.412172,24.472526],[113.419223,24.459943],[113.440988,24.453703],[113.467428,24.461726],[113.478847,24.477769],[113.489269,24.471006],[113.499309,24.473785],[113.507816,24.484007],[113.518852,24.469852],[113.530271,24.479551],[113.531343,24.489826],[113.540463,24.506233],[113.552572,24.511055],[113.57564,24.509115],[113.579548,24.50052],[113.589665,24.515248],[113.599628,24.512994],[113.596792,24.500886],[113.609667,24.489983],[113.625761,24.491923],[113.63718,24.486471],[113.643234,24.477717],[113.656799,24.468227],[113.666072,24.467493],[113.683163,24.454175],[113.686381,24.437709],[113.709909,24.412377],[113.722248,24.414633],[113.723934,24.43493],[113.726999,24.437028],[113.753439,24.437185],[113.762866,24.43299],[113.765318,24.417727],[113.77827,24.410909],[113.803867,24.401781],[113.805553,24.384364],[113.800955,24.377334],[113.818581,24.3522],[113.817048,24.34459],[113.831303,24.33656],[113.8405,24.336246],[113.850462,24.318872],[113.844791,24.304541],[113.844715,24.279707],[113.850003,24.274561],[113.84004,24.265109],[113.855827,24.252926],[113.862878,24.259018],[113.872074,24.253976],[113.870541,24.242264],[113.88311,24.245415],[113.890774,24.241476],[113.890391,24.229763],[113.896522,24.210326],[113.921199,24.200974],[113.922119,24.19304],[113.930319,24.19593],[113.930242,24.188416],[113.909167,24.184318],[113.901043,24.188521],[113.880045,24.174123],[113.857053,24.16151],[113.862265,24.147319],[113.870465,24.141169],[113.86464,24.133021],[113.853911,24.132811],[113.850999,24.124978],[113.839273,24.119931],[113.836974,24.111729],[113.842415,24.104053],[113.836668,24.098637],[113.836821,24.088331],[113.845711,24.086806],[113.837434,24.072764],[113.828467,24.069608],[113.83115,24.063507],[113.813063,24.052567],[113.803637,24.053566],[113.790379,24.034471],[113.790608,24.025106],[113.784171,24.022317],[113.772982,24.026947],[113.763555,24.02137],[113.753592,24.026842],[113.747078,24.023212],[113.728149,23.997166],[113.718646,23.993008],[113.732364,23.981114],[113.730448,23.974641],[113.739415,23.969588],[113.744703,23.95906],[113.766468,23.96085],[113.774285,23.952691],[113.775358,23.938424],[113.792294,23.931527],[113.799345,23.923524],[113.800265,23.902566]]]]}},{type:"Feature",properties:{adcode:440300,name:"深圳市",center:[114.085947,22.547],centroid:[114.143142,22.643377],childrenNum:9,level:"city",parent:{adcode:44e4},subFeatureIndex:2,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[114.229205,22.81253],[114.215641,22.807751],[114.20721,22.789802],[114.189967,22.785713],[114.180847,22.775728],[114.187974,22.770364],[114.182073,22.765265],[114.201079,22.764787],[114.203149,22.75512],[114.215641,22.73557],[114.208513,22.729248],[114.208053,22.71469],[114.196711,22.710227],[114.19947,22.702043],[114.195332,22.680095],[114.187515,22.673557],[114.187515,22.666382],[114.172494,22.654368],[114.15548,22.668933],[114.16391,22.665372],[114.167436,22.680679],[114.151801,22.690139],[114.145057,22.701193],[114.144674,22.714159],[114.121989,22.716231],[114.117621,22.723244],[114.107198,22.722979],[114.098462,22.747205],[114.08436,22.750551],[114.074781,22.740883],[114.064588,22.755916],[114.049414,22.756448],[114.049797,22.771161],[114.039911,22.764309],[114.035236,22.766752],[114.017916,22.760219],[114.002971,22.763459],[113.995308,22.771267],[113.990863,22.800211],[113.984578,22.803662],[113.974999,22.798458],[113.978371,22.806529],[113.972393,22.812476],[113.954996,22.815078],[113.954613,22.821025],[113.937829,22.832705],[113.910929,22.829997],[113.904875,22.840137],[113.893916,22.846189],[113.89951,22.855478],[113.887325,22.858504],[113.883263,22.850542],[113.877669,22.85447],[113.872611,22.837271],[113.857053,22.832599],[113.851305,22.837483],[113.841496,22.833979],[113.834675,22.822193],[113.838737,22.819591],[113.837204,22.800901],[113.824942,22.792935],[113.813446,22.790439],[113.811071,22.782473],[113.802257,22.784863],[113.801874,22.777109],[113.791835,22.767655],[113.790838,22.75342],[113.762406,22.736899],[113.751447,22.715381],[113.757808,22.678766],[113.765471,22.665744],[113.773288,22.643205],[113.782255,22.625713],[113.803407,22.593169],[113.832223,22.570246],[113.838354,22.559342],[113.834675,22.539552],[113.851152,22.542584],[113.856593,22.539605],[113.864027,22.515981],[113.859352,22.495652],[113.862801,22.475853],[113.870005,22.459565],[113.881731,22.446788],[113.89177,22.442635],[113.915758,22.455945],[113.946873,22.477343],[113.959135,22.504912],[113.976531,22.510606],[114.024047,22.509808],[114.030867,22.504274],[114.054702,22.49959],[114.064588,22.510553],[114.077003,22.515502],[114.081601,22.512415],[114.090338,22.520982],[114.084284,22.52508],[114.094093,22.533593],[114.114862,22.532795],[114.117238,22.526942],[114.135094,22.53886],[114.153488,22.539285],[114.157166,22.551947],[114.165596,22.558916],[114.182303,22.556788],[114.182686,22.552798],[114.201463,22.554341],[114.223304,22.552745],[114.232578,22.54003],[114.258864,22.55881],[114.292432,22.562959],[114.304847,22.568704],[114.311821,22.578597],[114.325309,22.588649],[114.346997,22.588702],[114.359489,22.591574],[114.381868,22.601519],[114.398345,22.602848],[114.422562,22.592744],[114.430686,22.583384],[114.434748,22.566576],[114.467625,22.53338],[114.471917,22.522206],[114.468162,22.491395],[114.474446,22.464515],[114.48027,22.45291],[114.48985,22.443647],[114.50694,22.438589],[114.52541,22.440559],[114.539281,22.449237],[114.549244,22.46574],[114.585417,22.473405],[114.611397,22.482027],[114.627798,22.502996],[114.627031,22.519918],[114.614539,22.545191],[114.589632,22.549766],[114.568097,22.560778],[114.559743,22.573172],[114.559054,22.583277],[114.572312,22.602689],[114.58672,22.612845],[114.60312,22.638739],[114.60289,22.655272],[114.580282,22.661491],[114.553229,22.656229],[114.515217,22.655485],[114.514451,22.660747],[114.505867,22.668455],[114.481956,22.668136],[114.478278,22.661864],[114.453447,22.669943],[114.449692,22.665319],[114.431912,22.660907],[114.428157,22.676746],[114.441338,22.682167],[114.445324,22.68897],[114.442028,22.697579],[114.426394,22.699918],[114.42057,22.713999],[114.409227,22.713574],[114.403403,22.723935],[114.413902,22.736261],[114.414055,22.752251],[114.41827,22.766327],[114.404706,22.781305],[114.396352,22.777322],[114.394819,22.759794],[114.388075,22.757191],[114.36562,22.766062],[114.355964,22.764893],[114.354125,22.778172],[114.342706,22.783642],[114.351136,22.789696],[114.353128,22.806636],[114.33052,22.809291],[114.318565,22.806583],[114.314503,22.800157],[114.294347,22.803397],[114.284844,22.808282],[114.282852,22.802388],[114.26147,22.781783],[114.250817,22.781677],[114.245529,22.790652],[114.234953,22.792989],[114.229205,22.81253]]],[[[113.819961,22.396362],[113.824176,22.40435],[113.811224,22.420432],[113.798885,22.422509],[113.7867,22.413563],[113.801338,22.407386],[113.807315,22.40025],[113.819961,22.396362]]],[[[113.844485,22.510234],[113.856823,22.503582],[113.8569,22.509595],[113.842569,22.515821],[113.844485,22.510234]]],[[[113.839657,22.498526],[113.847244,22.491927],[113.851995,22.49661],[113.844485,22.503369],[113.839657,22.498526]]]]}},{type:"Feature",properties:{adcode:440400,name:"珠海市",center:[113.553986,22.224979],centroid:[113.337286,22.160135],childrenNum:3,level:"city",parent:{adcode:44e4},subFeatureIndex:3,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[113.262652,22.392048],[113.24947,22.399344],[113.237285,22.391782],[113.212224,22.398599],[113.209389,22.388054],[113.192145,22.381662],[113.18839,22.394924],[113.181646,22.40238],[113.165399,22.40025],[113.1631,22.387947],[113.169154,22.377987],[113.183255,22.369837],[113.193065,22.358171],[113.185478,22.294762],[113.176281,22.280158],[113.176128,22.267792],[113.168541,22.238417],[113.158885,22.228712],[113.129686,22.218208],[113.120413,22.209622],[113.115584,22.215115],[113.106388,22.209355],[113.109453,22.204609],[113.097421,22.187702],[113.091903,22.136595],[113.087152,22.126137],[113.092057,22.065346],[113.10156,22.048262],[113.143097,22.011846],[113.147542,22.004689],[113.151451,21.979853],[113.159574,21.969009],[113.182106,21.952982],[113.218126,21.904998],[113.235216,21.887788],[113.26679,21.871645],[113.289399,21.883405],[113.300051,21.898958],[113.3199,21.909701],[113.328024,21.934442],[113.33017,21.961637],[113.33768,21.969009],[113.352165,21.974511],[113.410256,21.99091],[113.442214,22.009496],[113.448805,22.017079],[113.450567,22.032244],[113.459764,22.043724],[113.482679,22.054669],[113.503831,22.054722],[113.520308,22.069136],[113.530654,22.07362],[113.554488,22.069884],[113.565754,22.07266],[113.56583,22.091715],[113.554028,22.103884],[113.554641,22.142411],[113.544602,22.154095],[113.534562,22.1741],[113.534332,22.185622],[113.54077,22.199382],[113.538241,22.209409],[113.54943,22.213995],[113.558856,22.212395],[113.568819,22.22466],[113.589895,22.226793],[113.597175,22.234951],[113.599781,22.261128],[113.592194,22.268058],[113.595412,22.28245],[113.590124,22.29391],[113.595949,22.304249],[113.612809,22.308832],[113.616948,22.31885],[113.605299,22.329135],[113.604762,22.339897],[113.62806,22.349274],[113.649289,22.386243],[113.669368,22.416279],[113.669904,22.435607],[113.659098,22.441358],[113.624841,22.442955],[113.617791,22.436885],[113.608901,22.408824],[113.603766,22.403392],[113.585986,22.40041],[113.568743,22.411912],[113.537168,22.416332],[113.51433,22.408717],[113.508889,22.413403],[113.49586,22.407546],[113.495247,22.395403],[113.48697,22.390184],[113.491339,22.376922],[113.489193,22.365842],[113.493255,22.354069],[113.490342,22.34075],[113.494787,22.339684],[113.504137,22.324286],[113.493331,22.317998],[113.482985,22.318797],[113.470493,22.310377],[113.480456,22.303876],[113.496397,22.282237],[113.50475,22.266992],[113.514407,22.261555],[113.512797,22.249986],[113.478847,22.23831],[113.486357,22.227113],[113.462676,22.218847],[113.458384,22.213781],[113.430565,22.201302],[113.415774,22.202902],[113.390943,22.231858],[113.385272,22.230365],[113.352395,22.249133],[113.345114,22.258569],[113.336607,22.280105],[113.32128,22.312189],[113.32036,22.329561],[113.307178,22.346504],[113.273841,22.384751],[113.262652,22.392048]]],[[[114.051789,22.086324],[114.056081,22.094277],[114.047651,22.108954],[114.026959,22.10319],[114.034546,22.091342],[114.051789,22.086324]]],[[[114.231045,22.016332],[114.241238,22.023701],[114.266451,22.027599],[114.284231,22.036196],[114.299865,22.036142],[114.311361,22.041428],[114.308985,22.048636],[114.323623,22.056377],[114.32301,22.064172],[114.305537,22.060542],[114.302778,22.050505],[114.282852,22.049704],[114.267218,22.041268],[114.239781,22.035502],[114.227826,22.028827],[114.222615,22.018948],[114.231045,22.016332]]],[[[113.714584,22.007413],[113.729988,22.016385],[113.723014,22.02872],[113.702628,22.029308],[113.695731,22.021565],[113.705694,22.016225],[113.705924,22.00784],[113.714584,22.007413]]],[[[113.824406,22.001271],[113.825402,21.990536],[113.831763,21.98888],[113.842339,21.998868],[113.830767,21.996625],[113.824406,22.001271]]],[[[114.009945,21.853148],[114.016536,21.863145],[114.031557,21.873623],[114.010252,21.86368],[114.009945,21.853148]]],[[[113.815056,22.157136],[113.808542,22.174207],[113.799575,22.166472],[113.815056,22.157136]]],[[[113.999293,22.045273],[114.001055,22.035929],[114.005424,22.045112],[113.999293,22.045273]]],[[[113.765165,21.961958],[113.768154,21.972001],[113.778653,21.978357],[113.780109,21.989254],[113.772905,21.998761],[113.765855,21.992672],[113.750067,21.995129],[113.742403,21.987812],[113.755738,21.974672],[113.758191,21.965163],[113.765165,21.961958]]],[[[114.034469,21.886077],[114.04926,21.88271],[114.052862,21.893346],[114.063592,21.892384],[114.058687,21.902326],[114.042976,21.895431],[114.034469,21.886077]]],[[[113.919436,22.036997],[113.924111,22.032778],[113.937753,22.036249],[113.934687,22.043991],[113.922962,22.048583],[113.919436,22.036997]]],[[[113.143251,21.831707],[113.145856,21.838872],[113.159881,21.851864],[113.177431,21.854752],[113.179653,21.847373],[113.187624,21.848389],[113.203871,21.86122],[113.205787,21.871324],[113.191532,21.87234],[113.18088,21.862183],[113.167698,21.876563],[113.151221,21.864963],[113.144707,21.873516],[113.137043,21.868651],[113.138269,21.839193],[113.143251,21.831707]]],[[[113.722937,21.922152],[113.743476,21.928244],[113.751677,21.940747],[113.743093,21.950738],[113.727842,21.955119],[113.717956,21.951273],[113.71719,21.935244],[113.725083,21.932572],[113.722937,21.922152]]],[[[113.876979,22.117653],[113.869622,22.11301],[113.880581,22.10746],[113.88426,22.112583],[113.876979,22.117653]]],[[[113.828238,22.117919],[113.83958,22.130993],[113.828544,22.156283],[113.818045,22.153295],[113.822413,22.136542],[113.816435,22.132327],[113.820727,22.120588],[113.828238,22.117919]]],[[[114.18989,21.986423],[114.202689,21.991497],[114.220239,21.989842],[114.223841,22.007787],[114.217863,22.011098],[114.18192,22.010938],[114.178701,22.003034],[114.180847,21.988506],[114.18989,21.986423]]],[[[113.165399,21.953463],[113.172373,21.941068],[113.172066,21.954745],[113.165399,21.953463]]],[[[114.153947,21.975099],[114.167972,21.983111],[114.17395,21.992939],[114.17234,21.999776],[114.160308,21.995343],[114.152568,22.000524],[114.148276,21.99091],[114.124212,21.985248],[114.123675,21.97996],[114.144598,21.980441],[114.153947,21.975099]]],[[[113.138039,21.919213],[113.127617,21.910395],[113.125164,21.896126],[113.141258,21.912854],[113.156202,21.919587],[113.158731,21.927015],[113.150455,21.937915],[113.144707,21.937007],[113.13597,21.925465],[113.138039,21.919213]]],[[[113.665306,22.039239],[113.670211,22.033419],[113.666532,22.02338],[113.675805,22.029361],[113.67136,22.045433],[113.665306,22.039239]]],[[[113.683163,21.938824],[113.709449,21.944968],[113.70669,21.957203],[113.692819,21.962973],[113.6814,21.949296],[113.683163,21.938824]]],[[[113.901733,22.114184],[113.900047,22.123683],[113.890161,22.122775],[113.886405,22.111249],[113.901733,22.114184]]],[[[113.707687,22.143532],[113.707993,22.134728],[113.722094,22.141878],[113.707687,22.143532]]],[[[114.007493,22.026958],[114.017992,22.028346],[114.013471,22.038225],[114.007493,22.026958]]],[[[113.702705,22.101696],[113.700866,22.094864],[113.711059,22.091769],[113.702705,22.101696]]],[[[114.126664,21.961744],[114.142835,21.965484],[114.139003,21.970345],[114.126664,21.961744]]],[[[113.576866,22.212075],[113.576176,22.201036],[113.586523,22.201036],[113.590738,22.208982],[113.576866,22.212075]]]]}},{type:"Feature",properties:{adcode:440500,name:"汕头市",center:[116.708463,23.37102],centroid:[116.575361,23.322231],childrenNum:7,level:"city",parent:{adcode:44e4},subFeatureIndex:4,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[116.552551,23.105891],[116.552245,23.114527],[116.566423,23.134339],[116.577765,23.141755],[116.597691,23.146522],[116.651874,23.152931],[116.665285,23.158174],[116.676014,23.168078],[116.701458,23.198207],[116.71487,23.20996],[116.724756,23.214407],[116.744682,23.215042],[116.788518,23.199266],[116.806758,23.20096],[116.814728,23.207631],[116.823542,23.230447],[116.816644,23.243044],[116.799861,23.244209],[116.791277,23.265801],[116.791814,23.278236],[116.786986,23.288554],[116.782771,23.313842],[116.806452,23.347958],[116.833045,23.36578],[116.858488,23.408023],[116.8719,23.414631],[116.873433,23.445074],[116.885235,23.454481],[116.896194,23.476197],[116.885158,23.478734],[116.88853,23.501609],[116.899183,23.518881],[116.91704,23.531662],[116.918342,23.561603],[116.909146,23.58193],[116.911062,23.602201],[116.900563,23.611965],[116.900639,23.61946],[116.891289,23.622785],[116.874812,23.616082],[116.86278,23.623471],[116.863087,23.632601],[116.83818,23.644632],[116.830976,23.645793],[116.821319,23.635609],[116.822545,23.627429],[116.831895,23.622152],[116.827527,23.611807],[116.815035,23.612493],[116.805379,23.606793],[116.795799,23.610488],[116.791737,23.59935],[116.794496,23.589532],[116.785223,23.579554],[116.772578,23.584147],[116.761389,23.573958],[116.755794,23.575648],[116.747211,23.59233],[116.738934,23.60162],[116.71303,23.597925],[116.714946,23.584728],[116.702991,23.574433],[116.718701,23.563135],[116.719391,23.552522],[116.70621,23.542541],[116.70483,23.517561],[116.71326,23.493103],[116.717935,23.471072],[116.7128,23.459236],[116.702378,23.456172],[116.698469,23.446977],[116.702608,23.438204],[116.68659,23.429483],[116.681915,23.438627],[116.668504,23.428638],[116.654403,23.431069],[116.650264,23.426312],[116.630108,23.429378],[116.614015,23.433289],[116.605431,23.443013],[116.58995,23.453265],[116.588111,23.461984],[116.580294,23.461139],[116.579834,23.447981],[116.58949,23.443383],[116.591177,23.426524],[116.58198,23.423194],[116.575313,23.40797],[116.577535,23.40242],[116.569105,23.388093],[116.568339,23.378258],[116.561978,23.38693],[116.553088,23.412305],[116.544887,23.424356],[116.523429,23.437517],[116.512316,23.439472],[116.469553,23.437622],[116.465721,23.442485],[116.472005,23.455802],[116.482658,23.465472],[116.491164,23.478734],[116.492314,23.492839],[116.482581,23.500552],[116.465797,23.497647],[116.448707,23.488349],[116.435832,23.473344],[116.426482,23.468642],[116.415676,23.479737],[116.41491,23.510271],[116.408856,23.512596],[116.401115,23.500394],[116.377051,23.500658],[116.355363,23.472288],[116.350764,23.449619],[116.332371,23.443647],[116.319649,23.449196],[116.316891,23.442273],[116.322868,23.421767],[116.331758,23.424409],[116.34563,23.408182],[116.34517,23.399565],[116.350994,23.386559],[116.349768,23.358112],[116.354903,23.347324],[116.348848,23.335794],[116.329689,23.336376],[116.319573,23.332303],[116.319343,23.325903],[116.330839,23.316487],[116.328846,23.299559],[116.323558,23.302839],[116.308997,23.296067],[116.312752,23.286649],[116.302406,23.279348],[116.305548,23.272839],[116.298727,23.263526],[116.294129,23.239815],[116.279415,23.226],[116.26677,23.227906],[116.259719,23.216842],[116.261328,23.205301],[116.269222,23.204984],[116.26447,23.196724],[116.252745,23.191536],[116.262325,23.175174],[116.252362,23.176286],[116.254891,23.152507],[116.244545,23.140431],[116.261558,23.12295],[116.29183,23.110501],[116.29137,23.099162],[116.302866,23.096036],[116.312829,23.102712],[116.327543,23.09646],[116.340648,23.086498],[116.346703,23.05857],[116.368314,23.05751],[116.374982,23.050408],[116.370077,23.046856],[116.3805,23.039807],[116.395904,23.044524],[116.405484,23.053959],[116.426865,23.063393],[116.437212,23.080246],[116.446561,23.085863],[116.445488,23.093281],[116.453919,23.091161],[116.478826,23.104249],[116.509787,23.100646],[116.520287,23.094553],[116.552551,23.105891]]],[[[117.14542,23.456119],[117.141281,23.460029],[117.12764,23.458814],[117.132928,23.47271],[117.129479,23.48333],[117.109247,23.476831],[117.103882,23.464573],[117.093383,23.459395],[117.084569,23.461878],[117.079435,23.472922],[117.06449,23.475669],[117.051232,23.467849],[117.0228,23.43683],[117.016669,23.438785],[117.001341,23.457334],[116.98563,23.460822],[116.974441,23.457123],[116.961413,23.447241],[116.951067,23.44629],[116.944706,23.440001],[116.945089,23.422824],[116.964708,23.416375],[116.981722,23.414525],[116.999502,23.416216],[117.028854,23.414789],[117.029927,23.406332],[117.051155,23.400781],[117.079128,23.409027],[117.098747,23.405063],[117.102196,23.393644],[117.114075,23.399459],[117.124268,23.389732],[117.142967,23.400411],[117.145496,23.411829],[117.135993,23.422665],[117.136836,23.439895],[117.148562,23.437992],[117.154769,23.445074],[117.145113,23.450095],[117.14542,23.456119]]]]}},{type:"Feature",properties:{adcode:440600,name:"佛山市",center:[113.122717,23.028762],centroid:[112.949778,23.004314],childrenNum:5,level:"city",parent:{adcode:44e4},subFeatureIndex:5,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[112.975184,23.463622],[112.966294,23.460663],[112.965835,23.452155],[112.957634,23.447558],[112.94223,23.460188],[112.930198,23.463094],[112.933493,23.47065],[112.925753,23.472393],[112.928435,23.483488],[112.903298,23.488613],[112.887741,23.517402],[112.893259,23.526434],[112.911192,23.541643],[112.91533,23.55231],[112.900309,23.566725],[112.893412,23.55268],[112.871647,23.570896],[112.86291,23.57343],[112.848502,23.566936],[112.827197,23.567042],[112.830493,23.545762],[112.831642,23.537577],[112.840762,23.536046],[112.850418,23.527596],[112.845284,23.502929],[112.845743,23.487134],[112.838156,23.484704],[112.831029,23.468114],[112.811793,23.462513],[112.802673,23.444229],[112.803669,23.435773],[112.796389,23.429113],[112.794166,23.407547],[112.785736,23.394173],[112.787269,23.371173],[112.806582,23.367419],[112.810107,23.371332],[112.805892,23.387511],[112.814092,23.391793],[112.838386,23.387352],[112.859691,23.364563],[112.863907,23.349122],[112.883296,23.347324],[112.87134,23.315588],[112.866895,23.293263],[112.857546,23.287231],[112.847966,23.275061],[112.844977,23.263314],[112.823595,23.24569],[112.8472,23.238651],[112.842984,23.224465],[112.831949,23.215678],[112.815012,23.217107],[112.810873,23.200378],[112.80091,23.200431],[112.806582,23.212395],[112.799837,23.228224],[112.795316,23.226318],[112.7934,23.208213],[112.786349,23.205937],[112.781521,23.225842],[112.769412,23.223354],[112.772861,23.215678],[112.766347,23.21356],[112.764431,23.202919],[112.772938,23.199742],[112.771941,23.191694],[112.775773,23.166754],[112.793936,23.150071],[112.798458,23.13863],[112.799684,23.109971],[112.805355,23.091426],[112.818767,23.072614],[112.819227,23.052051],[112.834094,23.014784],[112.820453,23.010225],[112.794856,22.990394],[112.788189,22.991879],[112.790564,23.00206],[112.789721,23.00137],[112.788572,23.001158],[112.787882,23.000999],[112.777076,22.996545],[112.759679,22.979735],[112.751556,22.99103],[112.734772,22.98122],[112.736228,22.963878],[112.74144,22.962923],[112.734082,22.940751],[112.708869,22.927754],[112.699749,22.94839],[112.686874,22.948443],[112.672696,22.940486],[112.690092,22.927277],[112.696683,22.917196],[112.68649,22.907593],[112.692468,22.901969],[112.685418,22.89836],[112.677524,22.902764],[112.676374,22.895442],[112.659284,22.887163],[112.635526,22.883714],[112.632384,22.877664],[112.604258,22.870552],[112.591613,22.869809],[112.587168,22.862962],[112.561648,22.873312],[112.557816,22.863387],[112.563104,22.854151],[112.57414,22.84741],[112.571841,22.833077],[112.557433,22.826122],[112.532449,22.822883],[112.527544,22.815131],[112.52034,22.82729],[112.510531,22.823042],[112.499035,22.826918],[112.500414,22.812476],[112.489992,22.809131],[112.482788,22.795006],[112.463398,22.789271],[112.443779,22.791661],[112.441403,22.787731],[112.413507,22.774454],[112.392509,22.76978],[112.392739,22.744442],[112.399023,22.726485],[112.410748,22.704488],[112.403085,22.700183],[112.401475,22.690565],[112.411898,22.671219],[112.426306,22.670847],[112.435809,22.680998],[112.448607,22.70842],[112.463168,22.711661],[112.47658,22.704009],[112.47704,22.715912],[112.500108,22.728664],[112.507542,22.723457],[112.523176,22.728079],[112.53835,22.71825],[112.549462,22.70098],[112.560038,22.695826],[112.554214,22.682061],[112.535591,22.67765],[112.540189,22.661864],[112.536281,22.648627],[112.546474,22.642248],[112.577359,22.656388],[112.583566,22.664362],[112.584716,22.677809],[112.595981,22.680786],[112.600273,22.688439],[112.587321,22.696357],[112.604182,22.706241],[112.616674,22.707995],[112.620965,22.70114],[112.625104,22.711077],[112.641044,22.712883],[112.646256,22.726698],[112.660127,22.727335],[112.664649,22.713043],[112.672083,22.713521],[112.665109,22.724041],[112.680053,22.713999],[112.682659,22.72165],[112.675914,22.727495],[112.683885,22.733923],[112.690322,22.726379],[112.701128,22.728398],[112.687563,22.737164],[112.680436,22.747045],[112.69653,22.75905],[112.702891,22.756395],[112.707796,22.74407],[112.698599,22.733764],[112.709022,22.729567],[112.706646,22.718303],[112.692392,22.705232],[112.69538,22.695613],[112.708256,22.71028],[112.717989,22.691681],[112.734082,22.698217],[112.741286,22.691362],[112.744505,22.696729],[112.755771,22.692425],[112.769489,22.701246],[112.778302,22.715221],[112.807961,22.72877],[112.810413,22.750498],[112.803899,22.752145],[112.811486,22.765318],[112.818001,22.765424],[112.822369,22.784545],[112.812099,22.791714],[112.819303,22.803025],[112.835857,22.803821],[112.843061,22.810671],[112.852947,22.809609],[112.850648,22.830157],[112.844594,22.835306],[112.851491,22.839978],[112.860305,22.833767],[112.867892,22.835412],[112.873639,22.848206],[112.883679,22.852187],[112.888967,22.845764],[112.900463,22.845286],[112.905904,22.851444],[112.923454,22.856274],[112.963995,22.826971],[112.980396,22.802759],[112.988596,22.800423],[113.025229,22.802335],[113.049523,22.807751],[113.059562,22.801219],[113.075273,22.777959],[113.087228,22.717878],[113.102096,22.698536],[113.113362,22.701618],[113.161414,22.673717],[113.17199,22.680679],[113.189386,22.673876],[113.201035,22.675949],[113.199273,22.682539],[113.204254,22.697314],[113.222264,22.712246],[113.236289,22.740777],[113.243033,22.745345],[113.254069,22.74083],[113.260889,22.730311],[113.270546,22.726485],[113.284877,22.738864],[113.301431,22.736261],[113.329097,22.741255],[113.329327,22.749011],[113.342432,22.758254],[113.358756,22.764893],[113.365116,22.772595],[113.356533,22.792989],[113.38305,22.799308],[113.393396,22.809822],[113.37439,22.822618],[113.364273,22.823467],[113.335994,22.817945],[113.312083,22.830369],[113.309631,22.851179],[113.296296,22.862485],[113.301354,22.866094],[113.300434,22.87708],[113.27706,22.894699],[113.28595,22.901438],[113.282424,22.927383],[113.298212,22.934014],[113.285183,22.951095],[113.267557,22.958786],[113.251923,22.970348],[113.250007,23.009058],[113.25836,23.013989],[113.254912,23.044842],[113.225713,23.041874],[113.211688,23.043305],[113.195747,23.056185],[113.184865,23.05963],[113.177201,23.076695],[113.193678,23.083902],[113.208776,23.083531],[113.215826,23.100646],[113.208163,23.099692],[113.203718,23.121891],[113.209695,23.121838],[113.211535,23.142603],[113.191992,23.14345],[113.186857,23.14827],[113.1877,23.159127],[113.209465,23.17708],[113.209006,23.192171],[113.204867,23.201172],[113.191072,23.214937],[113.177508,23.220866],[113.176511,23.236587],[113.182029,23.251459],[113.177738,23.271304],[113.160877,23.286649],[113.150608,23.289983],[113.150838,23.297972],[113.128,23.31453],[113.124704,23.307653],[113.105775,23.302733],[113.11022,23.295961],[113.105545,23.289718],[113.090524,23.28993],[113.086156,23.285274],[113.072284,23.284268],[113.081941,23.261726],[113.079795,23.250083],[113.070215,23.248813],[113.053508,23.253418],[113.044925,23.2522],[113.052742,23.26342],[113.051439,23.278395],[113.042549,23.283422],[113.032509,23.300881],[113.037567,23.320084],[113.023466,23.324898],[113.027604,23.33352],[113.043392,23.351131],[113.034808,23.357372],[113.018331,23.341347],[113.012583,23.352612],[112.989822,23.354728],[112.980626,23.380268],[112.988366,23.390102],[112.990588,23.402631],[113.001088,23.406332],[112.988673,23.419811],[112.982771,23.434451],[112.989132,23.443277],[112.978633,23.441586],[112.974188,23.434081],[112.96024,23.425995],[112.961926,23.44444],[112.972962,23.450042],[112.975184,23.463622]]],[[[112.789721,23.00137],[112.790564,23.00206],[112.787882,23.000999],[112.788572,23.001158],[112.789721,23.00137]]]]}},{type:"Feature",properties:{adcode:440700,name:"江门市",center:[113.094942,22.590431],centroid:[112.676451,22.284348],childrenNum:7,level:"city",parent:{adcode:44e4},subFeatureIndex:6,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[112.165431,22.385018],[112.154012,22.37591],[112.153323,22.368452],[112.144433,22.358597],[112.150564,22.35327],[112.147268,22.339098],[112.13447,22.337233],[112.1347,22.349221],[112.128185,22.349754],[112.119832,22.337766],[112.119985,22.35636],[112.107877,22.347463],[112.098757,22.351618],[112.081896,22.351086],[112.065036,22.324392],[112.068945,22.318477],[112.062201,22.304515],[112.068332,22.295988],[112.061511,22.28357],[112.049479,22.270777],[112.036604,22.262781],[112.019973,22.268271],[112.010547,22.266193],[112.004262,22.248333],[112.021353,22.242842],[112.024112,22.235217],[112.037906,22.232178],[112.037906,22.215061],[112.051625,22.207542],[112.052161,22.194742],[112.041585,22.187489],[112.03668,22.168019],[112.051165,22.14684],[112.038826,22.131366],[112.027254,22.127044],[112.034381,22.113437],[112.072776,22.125177],[112.073236,22.130192],[112.086341,22.131313],[112.089867,22.137342],[112.105884,22.135795],[112.106727,22.125497],[112.126806,22.105538],[112.126116,22.096572],[112.143206,22.095185],[112.149721,22.090915],[112.156541,22.095718],[112.16773,22.085417],[112.173785,22.085204],[112.185051,22.066841],[112.199075,22.064706],[112.212334,22.069243],[112.226818,22.063585],[112.231263,22.0528],[112.216779,22.03956],[112.221607,22.01788],[112.232029,22.019589],[112.225669,22.012219],[112.239387,22.006185],[112.263757,22.001432],[112.273644,21.99358],[112.276939,21.982524],[112.299011,21.985248],[112.318477,21.976381],[112.323841,21.962919],[112.331045,21.9595],[112.340472,21.942831],[112.341085,21.919213],[112.346909,21.920442],[112.345147,21.906067],[112.350818,21.901631],[112.348365,21.885276],[112.343077,21.876723],[112.356872,21.872019],[112.370054,21.861434],[112.351737,21.849298],[112.358558,21.834006],[112.342464,21.818499],[112.34576,21.811814],[112.32775,21.799193],[112.333574,21.770844],[112.326754,21.767527],[112.313955,21.751263],[112.304529,21.744415],[112.310047,21.732483],[112.303456,21.71445],[112.307824,21.704174],[112.315105,21.700749],[112.323995,21.705994],[112.35327,21.707118],[112.409522,21.728417],[112.415806,21.734784],[112.427379,21.790207],[112.439411,21.803685],[112.47773,21.795663],[112.497502,21.785393],[112.523406,21.761],[112.535591,21.754099],[112.558812,21.750996],[112.598817,21.75014],[112.639358,21.756025],[112.651697,21.762124],[112.686031,21.810531],[112.737454,21.864214],[112.767113,21.89046],[112.792327,21.921297],[112.800374,21.924824],[112.832332,21.924557],[112.840915,21.920496],[112.86291,21.883084],[112.885135,21.852185],[112.893565,21.844326],[112.911345,21.838979],[112.944529,21.84208],[112.972042,21.857157],[112.989669,21.86956],[113.037797,21.935297],[113.04753,21.956455],[113.051822,21.977556],[113.054198,22.003835],[113.050672,22.018254],[113.032279,22.045753],[113.03067,22.066521],[113.035498,22.077357],[113.045844,22.088513],[113.078568,22.116212],[113.087152,22.126137],[113.091903,22.136595],[113.097421,22.187702],[113.109453,22.204609],[113.106388,22.209355],[113.115584,22.215115],[113.120413,22.209622],[113.129686,22.218208],[113.158885,22.228712],[113.168541,22.238417],[113.176128,22.267792],[113.176281,22.280158],[113.185478,22.294762],[113.193065,22.358171],[113.183255,22.369837],[113.169154,22.377987],[113.1631,22.387947],[113.165399,22.40025],[113.181646,22.40238],[113.18839,22.394924],[113.192145,22.381662],[113.209389,22.388054],[113.212224,22.398599],[113.237285,22.391782],[113.24947,22.399344],[113.262652,22.392048],[113.256368,22.410794],[113.256444,22.43779],[113.245179,22.457276],[113.240121,22.476172],[113.2251,22.497142],[113.2251,22.497142],[113.215367,22.513107],[113.187087,22.539924],[113.188697,22.552798],[113.185095,22.574289],[113.176358,22.590032],[113.157045,22.614228],[113.157199,22.63204],[113.163176,22.651392],[113.17061,22.651392],[113.160801,22.665425],[113.161414,22.673717],[113.113362,22.701618],[113.102096,22.698536],[113.087228,22.717878],[113.075273,22.777959],[113.059562,22.801219],[113.049523,22.807751],[113.025229,22.802335],[112.988596,22.800423],[112.980396,22.802759],[112.963995,22.826971],[112.923454,22.856274],[112.905904,22.851444],[112.900463,22.845286],[112.888967,22.845764],[112.883679,22.852187],[112.873639,22.848206],[112.867892,22.835412],[112.860305,22.833767],[112.851491,22.839978],[112.844594,22.835306],[112.850648,22.830157],[112.852947,22.809609],[112.843061,22.810671],[112.835857,22.803821],[112.819303,22.803025],[112.812099,22.791714],[112.822369,22.784545],[112.818001,22.765424],[112.811486,22.765318],[112.803899,22.752145],[112.810413,22.750498],[112.807961,22.72877],[112.778302,22.715221],[112.769489,22.701246],[112.755771,22.692425],[112.744505,22.696729],[112.741286,22.691362],[112.734082,22.698217],[112.717989,22.691681],[112.708256,22.71028],[112.69538,22.695613],[112.692392,22.705232],[112.706646,22.718303],[112.709022,22.729567],[112.698599,22.733764],[112.707796,22.74407],[112.702891,22.756395],[112.69653,22.75905],[112.680436,22.747045],[112.687563,22.737164],[112.701128,22.728398],[112.690322,22.726379],[112.683885,22.733923],[112.675914,22.727495],[112.682659,22.72165],[112.680053,22.713999],[112.665109,22.724041],[112.672083,22.713521],[112.664649,22.713043],[112.660127,22.727335],[112.646256,22.726698],[112.641044,22.712883],[112.625104,22.711077],[112.620965,22.70114],[112.616674,22.707995],[112.604182,22.706241],[112.587321,22.696357],[112.600273,22.688439],[112.595981,22.680786],[112.584716,22.677809],[112.583566,22.664362],[112.577359,22.656388],[112.546474,22.642248],[112.536281,22.648627],[112.540189,22.661864],[112.535591,22.67765],[112.554214,22.682061],[112.560038,22.695826],[112.549462,22.70098],[112.53835,22.71825],[112.523176,22.728079],[112.507542,22.723457],[112.500108,22.728664],[112.47704,22.715912],[112.47658,22.704009],[112.492674,22.686897],[112.489992,22.676215],[112.500261,22.668667],[112.506545,22.657664],[112.505243,22.638473],[112.515742,22.626617],[112.52172,22.607262],[112.505626,22.597849],[112.483171,22.592372],[112.475047,22.585511],[112.463552,22.584873],[112.456348,22.600562],[112.441787,22.606039],[112.435732,22.619971],[112.440867,22.627627],[112.443243,22.642248],[112.428375,22.657133],[112.435272,22.661279],[112.429218,22.666063],[112.419562,22.664202],[112.412741,22.656814],[112.416113,22.647723],[112.400402,22.635921],[112.407146,22.628425],[112.405077,22.618216],[112.398333,22.619917],[112.396034,22.602636],[112.390363,22.594765],[112.380247,22.594978],[112.379404,22.57881],[112.371127,22.558278],[112.377411,22.552479],[112.366835,22.550404],[112.364306,22.558544],[112.344533,22.564342],[112.342694,22.558065],[112.353577,22.556682],[112.359631,22.545457],[112.342541,22.55067],[112.33641,22.545457],[112.323918,22.554554],[112.331505,22.563916],[112.328133,22.569874],[112.309127,22.572427],[112.303609,22.560139],[112.307747,22.556841],[112.302153,22.544818],[112.307364,22.525399],[112.301233,22.515289],[112.275636,22.510659],[112.25732,22.500229],[112.262531,22.480803],[112.252875,22.458926],[112.242835,22.445191],[112.235938,22.427035],[112.243678,22.408238],[112.226895,22.408025],[112.211184,22.399078],[112.196163,22.404936],[112.188423,22.398066],[112.192791,22.384432],[112.186353,22.376069],[112.189189,22.36467],[112.175088,22.36989],[112.172022,22.381769],[112.165431,22.385018]]],[[[112.77539,21.564101],[112.806735,21.578778],[112.817311,21.59008],[112.81164,21.599935],[112.798918,21.610861],[112.798611,21.618572],[112.805432,21.639509],[112.821066,21.653697],[112.813096,21.674843],[112.805432,21.68132],[112.811256,21.703746],[112.81869,21.712202],[112.826124,21.729005],[112.832945,21.736389],[112.866436,21.742542],[112.875785,21.750354],[112.876015,21.772716],[112.859232,21.770576],[112.840839,21.776674],[112.817311,21.767367],[112.806888,21.769346],[112.800067,21.759502],[112.789108,21.759556],[112.781368,21.768329],[112.776386,21.751103],[112.782287,21.737994],[112.77493,21.732269],[112.765351,21.733874],[112.740443,21.727507],[112.724196,21.719694],[112.707872,21.698501],[112.712164,21.688118],[112.70542,21.682605],[112.713467,21.673344],[112.727568,21.672381],[112.734542,21.666599],[112.749257,21.671417],[112.754621,21.682658],[112.763358,21.681802],[112.780295,21.671524],[112.77608,21.655625],[112.752399,21.649896],[112.738681,21.630353],[112.73094,21.613752],[112.735385,21.602506],[112.744888,21.604006],[112.756001,21.611932],[112.753548,21.583546],[112.76696,21.588099],[112.770255,21.583224],[112.761289,21.573743],[112.77539,21.564101]]],[[[112.530993,21.583921],[112.53766,21.591259],[112.546703,21.586813],[112.562414,21.59008],[112.560881,21.59474],[112.544788,21.600631],[112.54701,21.60754],[112.568622,21.619429],[112.583566,21.613324],[112.595138,21.613324],[112.598817,21.606416],[112.610543,21.611396],[112.621502,21.606737],[112.62495,21.616162],[112.634683,21.623766],[112.637672,21.632655],[112.659821,21.630942],[112.665645,21.642507],[112.650241,21.646362],[112.639895,21.6545],[112.640431,21.673719],[112.665952,21.683943],[112.669707,21.693952],[112.664036,21.713754],[112.657215,21.708242],[112.648631,21.715092],[112.631465,21.706904],[112.610006,21.702676],[112.592303,21.693042],[112.589237,21.676128],[112.572377,21.672381],[112.559808,21.665475],[112.561648,21.657177],[112.570155,21.652787],[112.570461,21.64572],[112.550382,21.633726],[112.544328,21.638866],[112.535055,21.628479],[112.524249,21.596293],[112.524938,21.586277],[112.530993,21.583921]]],[[[112.435426,21.663548],[112.445772,21.649146],[112.456348,21.648772],[112.460869,21.660764],[112.468073,21.66692],[112.466081,21.686673],[112.458417,21.690098],[112.449987,21.673077],[112.435426,21.663548]]],[[[112.680513,21.69818],[112.690092,21.699893],[112.686184,21.713701],[112.6799,21.707493],[112.680513,21.69818]]],[[[112.883449,21.593776],[112.893105,21.594794],[112.902532,21.602292],[112.903222,21.610861],[112.883066,21.615466],[112.861991,21.60663],[112.867049,21.595597],[112.883449,21.593776]]],[[[113.025459,21.847801],[113.032663,21.854698],[113.04684,21.854752],[113.051975,21.868812],[113.045844,21.882763],[113.023466,21.879823],[113.007372,21.869186],[113.020247,21.849619],[113.025459,21.847801]]],[[[112.656372,21.595704],[112.667025,21.607862],[112.65369,21.60588],[112.656372,21.595704]]],[[[112.587934,21.58617],[112.60035,21.591741],[112.59989,21.599185],[112.581727,21.600578],[112.579274,21.591634],[112.587934,21.58617]]],[[[112.674228,21.610646],[112.672312,21.617608],[112.664802,21.612467],[112.674228,21.610646]]],[[[112.801677,21.564261],[112.814245,21.569458],[112.818077,21.579635],[112.807195,21.577439],[112.794013,21.568922],[112.801677,21.564261]]]]}},{type:"Feature",properties:{adcode:440800,name:"湛江市",center:[110.364977,21.274898],centroid:[110.109828,21.047893],childrenNum:9,level:"city",parent:{adcode:44e4},subFeatureIndex:7,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[110.645401,21.227394],[110.644635,21.254507],[110.637967,21.289022],[110.62287,21.291062],[110.6126,21.286231],[110.592138,21.265351],[110.570296,21.281884],[110.555582,21.286929],[110.522168,21.303567],[110.523011,21.316607],[110.529755,21.318056],[110.538875,21.330183],[110.55152,21.32648],[110.548225,21.333456],[110.56041,21.337963],[110.556961,21.344455],[110.568457,21.361408],[110.558187,21.370581],[110.558801,21.37616],[110.546998,21.371547],[110.539258,21.376696],[110.531288,21.39874],[110.53305,21.411558],[110.521785,21.414132],[110.50845,21.427002],[110.508066,21.436439],[110.494348,21.443194],[110.49021,21.438744],[110.484002,21.447108],[110.484539,21.456705],[110.494118,21.474234],[110.490823,21.482811],[110.509063,21.479273],[110.508066,21.490583],[110.508373,21.490958],[110.510442,21.499587],[110.497567,21.517111],[110.485152,21.513735],[110.477718,21.526221],[110.483849,21.543849],[110.475572,21.554136],[110.470361,21.547546],[110.45534,21.554511],[110.450358,21.550439],[110.443768,21.556386],[110.434494,21.553868],[110.422692,21.562226],[110.429666,21.575725],[110.427904,21.580653],[110.439399,21.581082],[110.443154,21.58692],[110.427214,21.600096],[110.417481,21.598168],[110.42024,21.591312],[110.413342,21.586063],[110.406522,21.60181],[110.412653,21.60438],[110.412653,21.616966],[110.405525,21.61809],[110.405295,21.634636],[110.396865,21.633137],[110.407058,21.648611],[110.385753,21.657552],[110.382457,21.667456],[110.412346,21.675753],[110.40974,21.686619],[110.402843,21.689188],[110.396712,21.673612],[110.39242,21.681588],[110.385753,21.674736],[110.367666,21.683354],[110.369889,21.689349],[110.351419,21.713647],[110.368739,21.721835],[110.365367,21.748],[110.375177,21.760305],[110.370042,21.770148],[110.373184,21.784163],[110.380312,21.784484],[110.388359,21.789084],[110.386749,21.795556],[110.37556,21.798765],[110.377246,21.806627],[110.362225,21.797642],[110.348354,21.802509],[110.350193,21.809675],[110.365137,21.807055],[110.357857,21.815451],[110.348124,21.809354],[110.345901,21.800851],[110.339387,21.806359],[110.342606,21.837322],[110.351572,21.845663],[110.354255,21.856462],[110.350729,21.863947],[110.362532,21.868224],[110.372571,21.856355],[110.387362,21.852239],[110.398398,21.861755],[110.387592,21.890407],[110.381001,21.892865],[110.368126,21.889017],[110.34866,21.890941],[110.337318,21.887841],[110.323906,21.892812],[110.312027,21.906601],[110.290416,21.917984],[110.283748,21.892224],[110.272482,21.895003],[110.254779,21.881694],[110.236003,21.878647],[110.210099,21.887467],[110.212015,21.893079],[110.185729,21.893614],[110.18205,21.899653],[110.161281,21.894255],[110.150859,21.897088],[110.141815,21.881801],[110.133462,21.899867],[110.11982,21.901684],[110.107175,21.882603],[110.107942,21.870789],[110.101197,21.870255],[110.097212,21.886291],[110.092154,21.883993],[110.082038,21.864481],[110.054372,21.856837],[110.038048,21.869988],[110.022184,21.869667],[110.00655,21.875119],[110.005017,21.880198],[109.986241,21.879128],[109.978654,21.866246],[109.944933,21.846839],[109.953363,21.842294],[109.945393,21.830317],[109.946773,21.824328],[109.936197,21.81283],[109.940718,21.807964],[109.935584,21.798658],[109.939952,21.768115],[109.931292,21.752173],[109.941715,21.73671],[109.922632,21.727507],[109.923781,21.704442],[109.915351,21.705619],[109.904622,21.686994],[109.913742,21.683782],[109.906844,21.672488],[109.915811,21.668794],[109.898338,21.649628],[109.884773,21.648076],[109.874044,21.658087],[109.864157,21.646844],[109.853275,21.649949],[109.844615,21.638331],[109.820014,21.637849],[109.809055,21.642989],[109.807216,21.628907],[109.795183,21.63046],[109.784684,21.63817],[109.786064,21.646523],[109.777863,21.670507],[109.766368,21.668045],[109.765985,21.657231],[109.757018,21.644917],[109.753799,21.627836],[109.746212,21.622963],[109.743836,21.60106],[109.754489,21.582582],[109.752113,21.5776],[109.754795,21.556333],[109.772882,21.531258],[109.774185,21.507626],[109.788363,21.490476],[109.785604,21.456919],[109.819171,21.445285],[109.843465,21.442926],[109.894353,21.442283],[109.904699,21.430112],[109.889754,21.395898],[109.868832,21.365807],[109.862165,21.362642],[109.836798,21.359155],[109.770659,21.35953],[109.757478,21.346762],[109.760083,21.335548],[109.765218,21.262184],[109.763992,21.226266],[109.758551,21.21746],[109.720768,21.183734],[109.674939,21.136622],[109.667505,21.121793],[109.667122,21.112604],[109.673866,21.068265],[109.664133,21.010363],[109.655626,20.929251],[109.654937,20.903532],[109.657082,20.888033],[109.664823,20.862306],[109.693026,20.807394],[109.711725,20.774706],[109.729888,20.719653],[109.732724,20.674767],[109.745062,20.621134],[109.749124,20.617953],[109.77748,20.622536],[109.793344,20.615635],[109.803,20.600754],[109.813576,20.574655],[109.81212,20.541593],[109.816565,20.518774],[109.824459,20.502913],[109.83994,20.489478],[109.888298,20.475448],[109.896882,20.461848],[109.898798,20.447276],[109.895579,20.427521],[109.886612,20.410084],[109.864924,20.401716],[109.860709,20.391997],[109.861245,20.376663],[109.871131,20.361705],[109.902476,20.339508],[109.915811,20.316875],[109.91742,20.282407],[109.909297,20.230691],[109.913512,20.219448],[109.929223,20.211718],[109.949302,20.216691],[109.968461,20.228259],[109.986318,20.251714],[109.993368,20.254471],[110.026246,20.257389],[110.07652,20.259929],[110.082574,20.258686],[110.117981,20.219773],[110.146337,20.21761],[110.168639,20.219502],[110.192243,20.227664],[110.21646,20.250526],[110.258305,20.253174],[110.277464,20.24885],[110.285664,20.238312],[110.296777,20.249175],[110.327508,20.251552],[110.348814,20.25901],[110.376173,20.288621],[110.389585,20.293213],[110.404529,20.289161],[110.425145,20.291646],[110.43641,20.297157],[110.452274,20.311203],[110.483542,20.358302],[110.491666,20.374125],[110.516727,20.404361],[110.541557,20.420665],[110.545772,20.427521],[110.55175,20.462982],[110.546462,20.48079],[110.522934,20.514728],[110.49979,20.572443],[110.493275,20.613856],[110.486915,20.64011],[110.466146,20.680264],[110.442235,20.671479],[110.41135,20.671156],[110.392267,20.682905],[110.405295,20.721377],[110.407365,20.732098],[110.407748,20.764365],[110.404759,20.783269],[110.393723,20.816655],[110.357014,20.839375],[110.33249,20.848365],[110.291489,20.848203],[110.269034,20.839698],[110.257691,20.843305],[110.233244,20.858485],[110.209716,20.860207],[110.20121,20.867312],[110.184196,20.891746],[110.177682,20.907083],[110.175689,20.94028],[110.179521,20.960453],[110.180747,20.981753],[110.205041,21.003426],[110.207264,21.009718],[110.201899,21.029344],[110.203739,21.040312],[110.211249,21.054182],[110.217993,21.053053],[110.216997,21.04058],[110.23424,21.014342],[110.247652,21.020741],[110.249644,21.045258],[110.29693,21.093795],[110.311644,21.099761],[110.334406,21.101427],[110.348967,21.106048],[110.359696,21.113894],[110.371498,21.131035],[110.37694,21.133345],[110.388282,21.125823],[110.401234,21.131088],[110.409894,21.146508],[110.422386,21.190716],[110.427674,21.193563],[110.439706,21.186312],[110.451125,21.186419],[110.460475,21.193079],[110.46331,21.203015],[110.481397,21.207579],[110.491896,21.216118],[110.501092,21.217514],[110.52439,21.206344],[110.534736,21.204411],[110.562786,21.211016],[110.626395,21.215688],[110.645401,21.227394]]],[[[110.508373,21.490958],[110.508066,21.490583],[110.514044,21.480774],[110.506687,21.472251],[110.494118,21.474234],[110.484539,21.456705],[110.49044,21.456866],[110.484002,21.447108],[110.49021,21.438744],[110.494348,21.443194],[110.508066,21.436439],[110.50845,21.427002],[110.521785,21.414132],[110.53305,21.411558],[110.531288,21.39874],[110.539258,21.376696],[110.546998,21.371547],[110.558801,21.37616],[110.558187,21.370581],[110.568457,21.361408],[110.556961,21.344455],[110.56041,21.337963],[110.548225,21.333456],[110.55152,21.32648],[110.538875,21.330183],[110.529755,21.318056],[110.523011,21.316607],[110.522168,21.303567],[110.555582,21.286929],[110.570296,21.281884],[110.592138,21.265351],[110.6126,21.286231],[110.62287,21.291062],[110.637967,21.289022],[110.644635,21.254507],[110.645401,21.227394],[110.659579,21.239636],[110.688855,21.278126],[110.713149,21.312582],[110.741351,21.344133],[110.768558,21.364948],[110.796377,21.374765],[110.848414,21.369401],[110.888572,21.367577],[110.907272,21.369669],[110.929113,21.376052],[110.950879,21.388282],[110.977012,21.406785],[110.965363,21.433329],[110.950112,21.443731],[110.938233,21.441854],[110.929037,21.447912],[110.927121,21.441586],[110.910337,21.439817],[110.901907,21.425768],[110.893554,21.436653],[110.880449,21.444856],[110.895853,21.451236],[110.895316,21.460833],[110.883897,21.469678],[110.870409,21.471125],[110.877843,21.476754],[110.874471,21.484848],[110.876004,21.49814],[110.867344,21.506125],[110.857841,21.496103],[110.840674,21.493638],[110.856231,21.503714],[110.848721,21.517058],[110.848031,21.527668],[110.828872,21.542671],[110.822127,21.541974],[110.818679,21.551672],[110.826342,21.559815],[110.817759,21.569083],[110.813697,21.583064],[110.795611,21.579582],[110.793618,21.596025],[110.79883,21.619857],[110.798216,21.631852],[110.786874,21.633298],[110.771853,21.647808],[110.761507,21.647969],[110.75461,21.634797],[110.749858,21.635922],[110.736217,21.623874],[110.73683,21.609522],[110.743344,21.606201],[110.747176,21.588741],[110.736523,21.58542],[110.734301,21.575564],[110.727403,21.573636],[110.725257,21.547761],[110.735987,21.533348],[110.72817,21.531097],[110.729396,21.523863],[110.714758,21.526811],[110.717364,21.519684],[110.730775,21.501088],[110.723342,21.503553],[110.708474,21.500927],[110.713532,21.511752],[110.708014,21.519362],[110.706788,21.521023],[110.693453,21.513896],[110.677742,21.521398],[110.672148,21.51261],[110.681881,21.507519],[110.687935,21.49144],[110.683337,21.488332],[110.665863,21.497497],[110.656973,21.490904],[110.657893,21.503607],[110.645095,21.501248],[110.645478,21.482918],[110.621184,21.481042],[110.609381,21.498997],[110.599035,21.507304],[110.590069,21.500605],[110.577194,21.499158],[110.575201,21.515772],[110.557038,21.512663],[110.54171,21.493102],[110.545466,21.47922],[110.538875,21.473859],[110.532437,21.480345],[110.518183,21.480184],[110.517646,21.489725],[110.508373,21.490958]]],[[[110.396329,21.90612],[110.413726,21.911304],[110.400391,21.913976],[110.413419,21.915686],[110.414799,21.932732],[110.440702,21.93658],[110.442388,21.940854],[110.418477,21.944381],[110.412959,21.953837],[110.400007,21.955387],[110.391117,21.950258],[110.372954,21.93332],[110.384297,21.930595],[110.395946,21.91264],[110.396329,21.90612]]],[[[110.381078,21.783361],[110.379162,21.763675],[110.389048,21.762124],[110.391041,21.776674],[110.381078,21.783361]]],[[[110.545006,21.083853],[110.574971,21.087991],[110.582328,21.094763],[110.604247,21.155856],[110.615819,21.177718],[110.631606,21.190877],[110.635132,21.205807],[110.632373,21.21107],[110.613443,21.207633],[110.60394,21.198074],[110.589532,21.194529],[110.583018,21.201726],[110.557115,21.201618],[110.525463,21.190501],[110.506534,21.209781],[110.496034,21.212144],[110.482853,21.201028],[110.465073,21.198933],[110.465533,21.191683],[110.457409,21.184915],[110.433805,21.183626],[110.432042,21.174173],[110.436717,21.16676],[110.451201,21.165203],[110.46331,21.14957],[110.489214,21.139094],[110.502012,21.142908],[110.510825,21.137858],[110.520405,21.114539],[110.530521,21.115667],[110.533357,21.108359],[110.528759,21.099922],[110.53466,21.088529],[110.545006,21.083853]]],[[[110.51757,21.078962],[110.497644,21.076059],[110.478944,21.062729],[110.459708,21.06289],[110.433881,21.078693],[110.413879,21.093688],[110.398551,21.096268],[110.383684,21.092774],[110.352492,21.079499],[110.334865,21.078585],[110.328964,21.088152],[110.306126,21.088099],[110.283595,21.053644],[110.275778,21.033591],[110.262673,21.025956],[110.227649,20.994876],[110.211096,20.986862],[110.205348,20.978526],[110.198451,20.956903],[110.20121,20.938397],[110.214468,20.937698],[110.241598,20.949372],[110.272253,20.952976],[110.309498,20.963358],[110.347664,20.984765],[110.363911,20.988046],[110.391654,20.985894],[110.407518,20.990466],[110.434341,20.985141],[110.451661,20.988368],[110.467372,20.987185],[110.47289,20.983151],[110.495651,20.950125],[110.501935,20.925593],[110.511822,20.916553],[110.526153,20.916284],[110.535809,20.92301],[110.538108,20.937644],[110.536576,20.961798],[110.539181,20.9874],[110.560717,21.048322],[110.560103,21.061385],[110.548838,21.069609],[110.530138,21.077457],[110.51757,21.078962]]],[[[110.714758,21.526811],[110.706788,21.521023],[110.708014,21.519362],[110.717364,21.519684],[110.714758,21.526811]]],[[[110.405372,20.678054],[110.42047,20.676977],[110.423995,20.683659],[110.428593,20.675198],[110.438786,20.679779],[110.435414,20.698747],[110.423842,20.71114],[110.41043,20.707908],[110.408744,20.695999],[110.401004,20.691581],[110.405372,20.678054]]],[[[110.645018,20.935654],[110.639807,20.940173],[110.604553,20.952331],[110.589686,20.953084],[110.584091,20.948834],[110.567691,20.925324],[110.548914,20.908644],[110.546002,20.894975],[110.55152,20.872641],[110.562632,20.861068],[110.588536,20.856762],[110.611757,20.860046],[110.621107,20.87038],[110.634135,20.899011],[110.646321,20.917307],[110.645018,20.935654]]],[[[110.556655,20.327463],[110.564548,20.325302],[110.593671,20.360678],[110.594284,20.371155],[110.58639,20.381091],[110.575891,20.350687],[110.556655,20.327463]]],[[[110.420776,21.159992],[110.419473,21.151182],[110.442235,21.148281],[110.447753,21.160153],[110.42775,21.163323],[110.420776,21.159992]]],[[[110.395409,21.104382],[110.396099,21.098525],[110.426524,21.094602],[110.428593,21.105189],[110.416101,21.112389],[110.395409,21.104382]]]]}},{type:"Feature",properties:{adcode:440900,name:"茂名市",center:[110.919229,21.659751],centroid:[110.958736,22.008884],childrenNum:5,level:"city",parent:{adcode:44e4},subFeatureIndex:8,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[110.706788,21.521023],[110.714758,21.526811],[110.729396,21.523863],[110.72817,21.531097],[110.735987,21.533348],[110.725257,21.547761],[110.727403,21.573636],[110.734301,21.575564],[110.736523,21.58542],[110.747176,21.588741],[110.743344,21.606201],[110.73683,21.609522],[110.736217,21.623874],[110.749858,21.635922],[110.75461,21.634797],[110.761507,21.647969],[110.771853,21.647808],[110.786874,21.633298],[110.798216,21.631852],[110.79883,21.619857],[110.793618,21.596025],[110.795611,21.579582],[110.813697,21.583064],[110.817759,21.569083],[110.826342,21.559815],[110.818679,21.551672],[110.822127,21.541974],[110.828872,21.542671],[110.848031,21.527668],[110.848721,21.517058],[110.856231,21.503714],[110.840674,21.493638],[110.857841,21.496103],[110.867344,21.506125],[110.876004,21.49814],[110.874471,21.484848],[110.877843,21.476754],[110.870409,21.471125],[110.883897,21.469678],[110.895316,21.460833],[110.895853,21.451236],[110.880449,21.444856],[110.893554,21.436653],[110.901907,21.425768],[110.910337,21.439817],[110.927121,21.441586],[110.929037,21.447912],[110.938233,21.441854],[110.950112,21.443731],[110.965363,21.433329],[110.977012,21.406785],[111.00077,21.417993],[111.034797,21.438744],[111.061313,21.449199],[111.076564,21.45247],[111.108599,21.455472],[111.116646,21.453167],[111.146611,21.459225],[111.171442,21.458474],[111.211983,21.469035],[111.239113,21.471769],[111.251605,21.48056],[111.276895,21.484955],[111.290536,21.484204],[111.295595,21.476271],[111.281493,21.458152],[111.2818,21.446518],[111.273829,21.443891],[111.253597,21.452577],[111.250532,21.449574],[111.257736,21.436546],[111.257352,21.415151],[111.263483,21.412684],[111.285862,21.419012],[111.301189,21.433704],[111.307627,21.433811],[111.329852,21.446787],[111.353149,21.464317],[111.382502,21.495514],[111.395837,21.501731],[111.452395,21.515182],[111.459139,21.524935],[111.458909,21.534151],[111.44703,21.570904],[111.439367,21.575725],[111.428944,21.570315],[111.430783,21.57985],[111.42151,21.573743],[111.418291,21.578671],[111.423809,21.591794],[111.416452,21.598061],[111.427718,21.614234],[111.42059,21.617394],[111.415456,21.632762],[111.416299,21.646898],[111.421587,21.648772],[111.42289,21.661353],[111.43155,21.670293],[111.428944,21.676984],[111.44067,21.69347],[111.431243,21.71857],[111.40304,21.728095],[111.389859,21.727132],[111.381275,21.734463],[111.383651,21.750247],[111.388786,21.756239],[111.374301,21.774374],[111.386947,21.780258],[111.401508,21.798337],[111.423503,21.81374],[111.417218,21.850154],[111.402887,21.854858],[111.40327,21.862183],[111.374608,21.860525],[111.367864,21.862557],[111.362499,21.877044],[111.340044,21.874424],[111.325177,21.886986],[111.320119,21.897836],[111.310922,21.893988],[111.290077,21.907991],[111.287241,21.924129],[111.294675,21.935885],[111.283409,21.952181],[111.283716,21.971841],[111.287624,21.977984],[111.283333,21.986797],[111.287624,22.000043],[111.305941,22.011846],[111.304638,22.029948],[111.295901,22.03139],[111.285325,22.048369],[111.288467,22.058299],[111.300653,22.064012],[111.298583,22.069991],[111.304561,22.084403],[111.316976,22.082641],[111.312685,22.088353],[111.327169,22.10303],[111.32441,22.113383],[111.337515,22.118453],[111.340657,22.129445],[111.331384,22.142198],[111.33445,22.160017],[111.327169,22.171326],[111.348091,22.181035],[111.354069,22.193356],[111.346099,22.211488],[111.360507,22.233938],[111.37683,22.243162],[111.381275,22.240869],[111.388556,22.251319],[111.401278,22.253025],[111.416835,22.263367],[111.42266,22.272643],[111.433389,22.275255],[111.453468,22.270297],[111.459446,22.296415],[111.46481,22.30217],[111.459369,22.309738],[111.468182,22.326683],[111.465807,22.33004],[111.479601,22.334143],[111.492247,22.333557],[111.494163,22.339418],[111.511176,22.349594],[111.517001,22.365309],[111.531102,22.358384],[111.542751,22.368079],[111.55256,22.364723],[111.57149,22.375217],[111.590266,22.369784],[111.600689,22.375537],[111.60728,22.39322],[111.616783,22.390504],[111.630884,22.402859],[111.649584,22.426716],[111.660083,22.434915],[111.679089,22.45685],[111.683381,22.468774],[111.680315,22.4824],[111.678553,22.496397],[111.671425,22.503262],[111.648128,22.498207],[111.633873,22.503262],[111.625673,22.510925],[111.619618,22.497302],[111.616016,22.508158],[111.621304,22.521195],[111.616093,22.521408],[111.618315,22.533912],[111.610269,22.534125],[111.612031,22.542584],[111.60682,22.54966],[111.59632,22.551362],[111.569344,22.540722],[111.559381,22.528804],[111.561144,22.523377],[111.54459,22.517364],[111.545433,22.499324],[111.525201,22.480164],[111.507804,22.493949],[111.486882,22.505551],[111.469409,22.490277],[111.476919,22.480164],[111.47347,22.474629],[111.480444,22.46015],[111.471325,22.441996],[111.446034,22.442209],[111.43952,22.427834],[111.421817,22.426662],[111.417065,22.431135],[111.421127,22.446948],[111.409631,22.457116],[111.408788,22.475268],[111.403347,22.479526],[111.410628,22.492033],[111.413387,22.512628],[111.403117,22.516087],[111.384647,22.509808],[111.373688,22.516034],[111.350084,22.506988],[111.338588,22.522951],[111.329852,22.516087],[111.293295,22.50603],[111.276972,22.491927],[111.272067,22.506136],[111.277278,22.517843],[111.285172,22.523856],[111.293909,22.547638],[111.322724,22.54966],[111.326633,22.557267],[111.303641,22.569448],[111.303105,22.580724],[111.279271,22.592053],[111.25352,22.589234],[111.249076,22.58365],[111.219187,22.58583],[111.215662,22.594659],[111.196732,22.61024],[111.185849,22.60439],[111.174737,22.605773],[111.161862,22.620236],[111.144235,22.625713],[111.143162,22.638686],[111.136418,22.643789],[111.127911,22.666169],[111.137108,22.674514],[111.136878,22.685941],[111.124539,22.695826],[111.123543,22.701459],[111.108369,22.704328],[111.104767,22.694869],[111.089669,22.694285],[111.074035,22.667232],[111.06208,22.666169],[111.055642,22.648521],[111.030735,22.646767],[111.027976,22.651551],[111.010043,22.644906],[110.997091,22.631349],[110.987358,22.640228],[110.977319,22.641557],[110.959002,22.636506],[110.961761,22.625766],[110.957699,22.616727],[110.941299,22.608113],[110.895853,22.613537],[110.897922,22.591999],[110.887269,22.583543],[110.87769,22.582692],[110.861213,22.587745],[110.853779,22.582267],[110.83324,22.584926],[110.81546,22.578065],[110.807566,22.570672],[110.805804,22.558916],[110.799213,22.556841],[110.793542,22.571363],[110.778674,22.585405],[110.760204,22.580777],[110.764496,22.565938],[110.761507,22.559607],[110.748095,22.554767],[110.756909,22.548436],[110.754303,22.536838],[110.760817,22.516779],[110.750471,22.517045],[110.740432,22.498845],[110.739972,22.488734],[110.747789,22.476119],[110.741351,22.464302],[110.725947,22.461215],[110.705102,22.466432],[110.698358,22.474469],[110.688241,22.477769],[110.68349,22.473405],[110.692686,22.457755],[110.693529,22.448279],[110.706711,22.446415],[110.713302,22.437471],[110.713992,22.417078],[110.706864,22.405362],[110.712382,22.395457],[110.711539,22.369624],[110.723801,22.359876],[110.729396,22.366375],[110.741275,22.362007],[110.750165,22.344799],[110.749398,22.329774],[110.760511,22.324818],[110.773233,22.307393],[110.772619,22.295562],[110.785571,22.294603],[110.78971,22.286661],[110.784498,22.280798],[110.758748,22.274668],[110.738899,22.281917],[110.725334,22.295615],[110.720966,22.294123],[110.711999,22.27776],[110.695445,22.272323],[110.694526,22.258249],[110.686019,22.248547],[110.664637,22.245348],[110.653525,22.238203],[110.646857,22.223007],[110.652835,22.207702],[110.664714,22.203382],[110.67529,22.188449],[110.678892,22.17266],[110.670462,22.17282],[110.66548,22.165192],[110.658123,22.167539],[110.653141,22.159377],[110.629077,22.14908],[110.6208,22.15783],[110.606009,22.155909],[110.598422,22.163431],[110.602484,22.183382],[110.585317,22.185088],[110.560333,22.196396],[110.529295,22.164392],[110.529448,22.154469],[110.510672,22.145026],[110.489444,22.144599],[110.483389,22.150521],[110.490133,22.155162],[110.460245,22.178581],[110.453501,22.192182],[110.430816,22.206209],[110.414569,22.208555],[110.409817,22.203276],[110.41066,22.190209],[110.399318,22.187382],[110.390964,22.179008],[110.393493,22.170473],[110.381078,22.164232],[110.375407,22.166312],[110.348507,22.195862],[110.342529,22.183435],[110.337471,22.184022],[110.334789,22.170366],[110.326052,22.164445],[110.326589,22.152655],[110.334329,22.149027],[110.352186,22.132487],[110.360922,22.132113],[110.364601,22.12523],[110.362915,22.110288],[110.365674,22.098707],[110.350806,22.096999],[110.351266,22.088993],[110.359236,22.084083],[110.358853,22.075916],[110.351726,22.074421],[110.355481,22.061556],[110.353105,22.043564],[110.347741,22.038972],[110.363528,22.005811],[110.356324,22.00736],[110.359926,21.993901],[110.352952,21.976595],[110.376786,21.967781],[110.391117,21.950258],[110.400007,21.955387],[110.412959,21.953837],[110.418477,21.944381],[110.442388,21.940854],[110.440702,21.93658],[110.414799,21.932732],[110.413419,21.915686],[110.400391,21.913976],[110.413726,21.911304],[110.396329,21.90612],[110.387592,21.890407],[110.398398,21.861755],[110.387362,21.852239],[110.372571,21.856355],[110.362532,21.868224],[110.350729,21.863947],[110.354255,21.856462],[110.351572,21.845663],[110.342606,21.837322],[110.339387,21.806359],[110.345901,21.800851],[110.348124,21.809354],[110.357857,21.815451],[110.365137,21.807055],[110.350193,21.809675],[110.348354,21.802509],[110.362225,21.797642],[110.377246,21.806627],[110.37556,21.798765],[110.386749,21.795556],[110.388359,21.789084],[110.380312,21.784484],[110.381078,21.783361],[110.391041,21.776674],[110.389048,21.762124],[110.379162,21.763675],[110.375177,21.760305],[110.365367,21.748],[110.368739,21.721835],[110.351419,21.713647],[110.369889,21.689349],[110.367666,21.683354],[110.385753,21.674736],[110.39242,21.681588],[110.396712,21.673612],[110.402843,21.689188],[110.40974,21.686619],[110.412346,21.675753],[110.382457,21.667456],[110.385753,21.657552],[110.407058,21.648611],[110.396865,21.633137],[110.405295,21.634636],[110.405525,21.61809],[110.412653,21.616966],[110.412653,21.60438],[110.406522,21.60181],[110.413342,21.586063],[110.42024,21.591312],[110.417481,21.598168],[110.427214,21.600096],[110.443154,21.58692],[110.439399,21.581082],[110.427904,21.580653],[110.429666,21.575725],[110.422692,21.562226],[110.434494,21.553868],[110.443768,21.556386],[110.450358,21.550439],[110.45534,21.554511],[110.470361,21.547546],[110.475572,21.554136],[110.483849,21.543849],[110.477718,21.526221],[110.485152,21.513735],[110.497567,21.517111],[110.510442,21.499587],[110.508373,21.490958],[110.517646,21.489725],[110.518183,21.480184],[110.532437,21.480345],[110.538875,21.473859],[110.545466,21.47922],[110.54171,21.493102],[110.557038,21.512663],[110.575201,21.515772],[110.577194,21.499158],[110.590069,21.500605],[110.599035,21.507304],[110.609381,21.498997],[110.621184,21.481042],[110.645478,21.482918],[110.645095,21.501248],[110.657893,21.503607],[110.656973,21.490904],[110.665863,21.497497],[110.683337,21.488332],[110.687935,21.49144],[110.681881,21.507519],[110.672148,21.51261],[110.677742,21.521398],[110.693453,21.513896],[110.706788,21.521023]]],[[[110.508066,21.490583],[110.509063,21.479273],[110.490823,21.482811],[110.494118,21.474234],[110.506687,21.472251],[110.514044,21.480774],[110.508066,21.490583]]],[[[110.379162,21.763675],[110.381078,21.783361],[110.380312,21.784484],[110.373184,21.784163],[110.370042,21.770148],[110.375177,21.760305],[110.379162,21.763675]]],[[[110.717364,21.519684],[110.708014,21.519362],[110.713532,21.511752],[110.708474,21.500927],[110.723342,21.503553],[110.730775,21.501088],[110.717364,21.519684]]],[[[111.1847,21.37101],[111.194816,21.380075],[111.195659,21.391017],[111.1847,21.381953],[111.1847,21.37101]]],[[[110.484002,21.447108],[110.49044,21.456866],[110.484539,21.456705],[110.484002,21.447108]]]]}},{type:"Feature",properties:{adcode:441200,name:"肇庆市",center:[112.472529,23.051546],centroid:[112.210411,23.536359],childrenNum:8,level:"city",parent:{adcode:44e4},subFeatureIndex:9,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[112.830493,23.545762],[112.802137,23.545551],[112.796772,23.551835],[112.7934,23.571688],[112.800144,23.571846],[112.799761,23.588951],[112.781828,23.588529],[112.772171,23.603309],[112.756844,23.603309],[112.750483,23.610065],[112.752092,23.628643],[112.778302,23.641255],[112.784663,23.655291],[112.780908,23.671224],[112.768646,23.677397],[112.75922,23.672332],[112.751249,23.675286],[112.744965,23.668481],[112.739907,23.672596],[112.744965,23.686523],[112.728718,23.678504],[112.715076,23.691639],[112.72159,23.698549],[112.724579,23.710258],[112.713467,23.706883],[112.711321,23.712104],[112.725882,23.725816],[112.743126,23.752444],[112.730021,23.758507],[112.706033,23.752813],[112.69768,23.765677],[112.704194,23.790557],[112.700668,23.793192],[112.70588,23.806369],[112.689479,23.806369],[112.675455,23.815169],[112.655376,23.812587],[112.661353,23.821651],[112.675225,23.831241],[112.672159,23.851473],[112.679516,23.857216],[112.672159,23.864801],[112.692162,23.88961],[112.685494,23.895351],[112.693235,23.904251],[112.693464,23.912729],[112.683272,23.92405],[112.682582,23.939056],[112.675838,23.939846],[112.662886,23.949585],[112.645106,23.941004],[112.622651,23.943636],[112.608167,23.952586],[112.588318,23.956692],[112.575136,23.967325],[112.567012,23.964903],[112.564253,23.977325],[112.535668,23.970746],[112.516125,23.977009],[112.511297,24.001376],[112.506469,24.007269],[112.518501,24.016635],[112.507618,24.043309],[112.507542,24.051778],[112.497885,24.064401],[112.500798,24.08081],[112.489532,24.086122],[112.49367,24.095377],[112.486696,24.114148],[112.463782,24.120772],[112.452516,24.115725],[112.455351,24.12482],[112.446921,24.121929],[112.429831,24.127081],[112.428452,24.139802],[112.434659,24.147529],[112.429525,24.160564],[112.434813,24.164453],[112.43144,24.173387],[112.439028,24.180324],[112.439564,24.19057],[112.453052,24.20938],[112.458723,24.238377],[112.449987,24.28102],[112.444239,24.287741],[112.423777,24.284958],[112.411285,24.307061],[112.401858,24.310211],[112.393888,24.326641],[112.384845,24.328373],[112.373732,24.347949],[112.342004,24.353512],[112.319703,24.380167],[112.307211,24.378593],[112.288971,24.388666],[112.284679,24.377334],[112.293646,24.344538],[112.293723,24.327585],[112.27441,24.320604],[112.258316,24.324279],[112.256937,24.320762],[112.261995,24.290576],[112.255557,24.279182],[112.256324,24.2597],[112.249503,24.243367],[112.235708,24.246203],[112.218311,24.244365],[112.215093,24.223459],[112.196929,24.204074],[112.169876,24.197454],[112.166658,24.187943],[112.157538,24.185841],[112.148341,24.190098],[112.144433,24.201394],[112.129258,24.207489],[112.122591,24.222986],[112.11508,24.229027],[112.106114,24.228555],[112.086878,24.256917],[112.067872,24.260698],[112.058369,24.247043],[112.053157,24.24594],[112.050398,24.224247],[112.041355,24.216682],[112.04603,24.197611],[112.041815,24.191516],[112.024955,24.188364],[112.006868,24.19015],[111.997672,24.186945],[111.994223,24.19861],[111.986866,24.205124],[111.978052,24.222671],[111.961575,24.234753],[111.942646,24.234858],[111.920804,24.233492],[111.912834,24.221726],[111.877887,24.228922],[111.87122,24.176593],[111.886777,24.163875],[111.88785,24.15473],[111.878807,24.126818],[111.878653,24.1101],[111.883482,24.095587],[111.88877,24.092064],[111.887927,24.07918],[111.89697,24.069608],[111.905783,24.046833],[111.921034,24.037364],[111.921494,24.012005],[111.940347,23.987746],[111.917585,23.95227],[111.910151,23.952164],[111.911991,23.943952],[111.897506,23.946637],[111.8867,23.944321],[111.87896,23.936213],[111.866085,23.946321],[111.854436,23.947427],[111.851294,23.93416],[111.857655,23.918311],[111.845929,23.904409],[111.838879,23.91136],[111.822861,23.911202],[111.822631,23.903567],[111.812668,23.887504],[111.816884,23.875073],[111.823781,23.871755],[111.820102,23.855372],[111.824777,23.832348],[111.815274,23.829081],[111.810599,23.807001],[111.796191,23.815696],[111.791593,23.809162],[111.774963,23.80816],[111.765843,23.815011],[111.752355,23.812745],[111.745994,23.820755],[111.737794,23.819227],[111.719707,23.825814],[111.714572,23.837195],[111.696946,23.835931],[111.693497,23.817277],[111.664451,23.834877],[111.654872,23.833296],[111.653722,23.821967],[111.645828,23.815327],[111.649354,23.811059],[111.641153,23.79704],[111.639161,23.786551],[111.628048,23.788607],[111.629351,23.736362],[111.618315,23.73478],[111.621611,23.725974],[111.66675,23.718907],[111.662689,23.706408],[111.665294,23.699973],[111.643223,23.696123],[111.635559,23.684518],[111.637092,23.678293],[111.625596,23.6765],[111.61479,23.658773],[111.615633,23.638986],[111.607433,23.637403],[111.594405,23.643471],[111.58858,23.638142],[111.584288,23.644685],[111.564286,23.633181],[111.551104,23.640464],[111.538382,23.630859],[111.508264,23.62574],[111.487035,23.626638],[111.482744,23.605684],[111.488951,23.592277],[111.489028,23.561339],[111.481901,23.558858],[111.478452,23.543914],[111.480215,23.532613],[111.464274,23.511486],[111.459599,23.49976],[111.452012,23.500975],[111.438754,23.481005],[111.433849,23.480266],[111.428867,23.466581],[111.399745,23.469382],[111.399975,23.456859],[111.392848,23.446712],[111.395607,23.43831],[111.383421,23.399671],[111.392081,23.391106],[111.389169,23.375985],[111.37798,23.369587],[111.373382,23.355203],[111.364722,23.343886],[111.361963,23.330293],[111.365565,23.31982],[111.375068,23.315271],[111.375757,23.319926],[111.392618,23.325586],[111.408712,23.315958],[111.421127,23.316276],[111.442202,23.301411],[111.437834,23.295115],[111.453391,23.289559],[111.456917,23.281729],[111.472551,23.275061],[111.49286,23.284586],[111.506348,23.282311],[111.515774,23.288448],[111.519989,23.305484],[111.52796,23.310351],[111.523898,23.322624],[111.532175,23.324634],[111.550185,23.298183],[111.573866,23.270881],[111.576318,23.253682],[111.569191,23.243097],[111.542598,23.234787],[111.533784,23.22113],[111.539839,23.212978],[111.575322,23.194077],[111.594251,23.188518],[111.624446,23.189894],[111.637781,23.185446],[111.649507,23.164741],[111.656098,23.158492],[111.679089,23.154732],[111.692118,23.157909],[111.707522,23.150971],[111.726988,23.150865],[111.753658,23.137994],[111.770441,23.13328],[111.814048,23.129943],[111.836963,23.131585],[111.860414,23.141225],[111.876737,23.138365],[111.884708,23.131267],[111.899192,23.125599],[111.9218,23.124857],[111.959353,23.130843],[111.967553,23.129678],[111.979049,23.119719],[111.982727,23.097308],[111.991464,23.087028],[112.025951,23.081199],[112.035761,23.07272],[112.047563,23.072349],[112.083736,23.079716],[112.099446,23.089943],[112.118299,23.083001],[112.133473,23.08581],[112.165431,23.075052],[112.191182,23.074522],[112.234712,23.114898],[112.265137,23.119507],[112.285676,23.129731],[112.301233,23.122315],[112.311886,23.121255],[112.312729,23.115163],[112.327137,23.104196],[112.32637,23.093599],[112.317634,23.080298],[112.301233,23.079557],[112.295869,23.060849],[112.285446,23.042563],[112.289814,23.024274],[112.286825,23.020033],[112.299087,23.010331],[112.286595,22.984985],[112.285369,22.976235],[112.277322,22.970613],[112.290197,22.952633],[112.283683,22.944518],[112.280158,22.949026],[112.270885,22.943775],[112.257167,22.951625],[112.262914,22.939796],[112.261075,22.918735],[112.257703,22.910564],[112.26598,22.906638],[112.278319,22.91465],[112.285369,22.911254],[112.295332,22.915605],[112.307364,22.911254],[112.305602,22.896132],[112.29993,22.89178],[112.296022,22.873312],[112.298704,22.865138],[112.312269,22.850489],[112.310353,22.824848],[112.319703,22.825378],[112.336257,22.806476],[112.323841,22.802706],[112.315488,22.790015],[112.32844,22.786722],[112.356336,22.787997],[112.374116,22.794369],[112.384232,22.792245],[112.382622,22.784545],[112.392509,22.76978],[112.413507,22.774454],[112.441403,22.787731],[112.443779,22.791661],[112.463398,22.789271],[112.482788,22.795006],[112.489992,22.809131],[112.500414,22.812476],[112.499035,22.826918],[112.510531,22.823042],[112.52034,22.82729],[112.527544,22.815131],[112.532449,22.822883],[112.557433,22.826122],[112.571841,22.833077],[112.57414,22.84741],[112.563104,22.854151],[112.557816,22.863387],[112.561648,22.873312],[112.587168,22.862962],[112.591613,22.869809],[112.604258,22.870552],[112.632384,22.877664],[112.635526,22.883714],[112.659284,22.887163],[112.676374,22.895442],[112.677524,22.902764],[112.685418,22.89836],[112.692468,22.901969],[112.68649,22.907593],[112.696683,22.917196],[112.690092,22.927277],[112.672696,22.940486],[112.686874,22.948443],[112.699749,22.94839],[112.708869,22.927754],[112.734082,22.940751],[112.74144,22.962923],[112.736228,22.963878],[112.734772,22.98122],[112.751556,22.99103],[112.759679,22.979735],[112.777076,22.996545],[112.787882,23.000999],[112.790564,23.00206],[112.788189,22.991879],[112.794856,22.990394],[112.820453,23.010225],[112.834094,23.014784],[112.819227,23.052051],[112.818767,23.072614],[112.805355,23.091426],[112.799684,23.109971],[112.798458,23.13863],[112.793936,23.150071],[112.775773,23.166754],[112.771941,23.191694],[112.772938,23.199742],[112.764431,23.202919],[112.766347,23.21356],[112.772861,23.215678],[112.769412,23.223354],[112.781521,23.225842],[112.786349,23.205937],[112.7934,23.208213],[112.795316,23.226318],[112.799837,23.228224],[112.806582,23.212395],[112.80091,23.200431],[112.810873,23.200378],[112.815012,23.217107],[112.831949,23.215678],[112.842984,23.224465],[112.8472,23.238651],[112.823595,23.24569],[112.844977,23.263314],[112.847966,23.275061],[112.857546,23.287231],[112.866895,23.293263],[112.87134,23.315588],[112.883296,23.347324],[112.863907,23.349122],[112.859691,23.364563],[112.838386,23.387352],[112.814092,23.391793],[112.805892,23.387511],[112.810107,23.371332],[112.806582,23.367419],[112.787269,23.371173],[112.785736,23.394173],[112.794166,23.407547],[112.796389,23.429113],[112.803669,23.435773],[112.802673,23.444229],[112.811793,23.462513],[112.831029,23.468114],[112.838156,23.484704],[112.845743,23.487134],[112.845284,23.502929],[112.850418,23.527596],[112.840762,23.536046],[112.831642,23.537577],[112.830493,23.545762]]]]}},{type:"Feature",properties:{adcode:441300,name:"惠州市",center:[114.412599,23.079404],centroid:[114.507032,23.234461],childrenNum:5,level:"city",parent:{adcode:44e4},subFeatureIndex:10,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[114.514451,22.660747],[114.532231,22.665691],[114.558441,22.682752],[114.599365,22.691574],[114.608178,22.695613],[114.6045,22.713202],[114.59423,22.721172],[114.601741,22.730736],[114.685966,22.765212],[114.693706,22.774507],[114.695545,22.784173],[114.709647,22.787678],[114.731335,22.771214],[114.749881,22.76399],[114.75241,22.759741],[114.739305,22.734242],[114.733941,22.719259],[114.738462,22.686047],[114.730492,22.671591],[114.728576,22.651285],[114.740915,22.638473],[114.743597,22.620183],[114.738999,22.606358],[114.747352,22.581628],[114.806517,22.584873],[114.842766,22.590351],[114.875184,22.590351],[114.885453,22.569182],[114.883614,22.540243],[114.914422,22.545776],[114.925305,22.551628],[114.927374,22.55849],[114.923236,22.58833],[114.924232,22.610878],[114.93772,22.637357],[114.945307,22.645491],[114.974353,22.668455],[114.997881,22.683071],[115.008533,22.698058],[115.02616,22.702149],[115.023094,22.717559],[115.009836,22.729248],[115.007154,22.740724],[114.994432,22.754376],[114.999797,22.773551],[114.992286,22.771055],[114.977725,22.776631],[114.974276,22.78805],[114.952741,22.794582],[114.944388,22.809397],[114.950595,22.81614],[114.950135,22.834722],[114.940556,22.842473],[114.931666,22.840456],[114.927987,22.849745],[114.932356,22.859035],[114.925075,22.868323],[114.939023,22.870075],[114.941245,22.877452],[114.926071,22.890454],[114.926225,22.900854],[114.917794,22.907009],[114.930363,22.920698],[114.946304,22.919372],[114.953507,22.928656],[114.965923,22.926693],[114.975962,22.938682],[114.986308,22.935075],[114.997804,22.938682],[114.99995,22.949504],[115.010066,22.955922],[115.020029,22.955498],[115.043557,22.969924],[115.047925,22.966848],[115.062333,22.994106],[115.075974,22.995219],[115.074901,22.999727],[115.085937,23.007733],[115.099349,22.996227],[115.110998,23.009589],[115.129467,23.003279],[115.146864,22.991136],[115.14878,23.000363],[115.163341,23.012558],[115.165947,23.027084],[115.180431,23.040337],[115.194226,23.045637],[115.20235,23.043835],[115.220743,23.054754],[115.22695,23.0538],[115.24588,23.061803],[115.251551,23.073568],[115.265882,23.084114],[115.262664,23.091426],[115.290253,23.095559],[115.287724,23.117865],[115.281363,23.125016],[115.285348,23.135505],[115.28167,23.145145],[115.283509,23.157433],[115.294468,23.160981],[115.311635,23.157645],[115.317076,23.163523],[115.325277,23.159392],[115.336925,23.170302],[115.342367,23.19413],[115.376241,23.205143],[115.388119,23.22023],[115.404443,23.21986],[115.40314,23.230658],[115.409655,23.237963],[115.425289,23.236322],[115.419311,23.243785],[115.403447,23.250083],[115.401378,23.276437],[115.39494,23.288342],[115.384517,23.289877],[115.377313,23.302892],[115.365971,23.299823],[115.362369,23.305114],[115.348191,23.308552],[115.345585,23.316964],[115.334856,23.322412],[115.310792,23.307971],[115.303665,23.324634],[115.306884,23.344415],[115.303282,23.346425],[115.306117,23.360597],[115.295618,23.357319],[115.277608,23.375879],[115.265039,23.384445],[115.240822,23.376725],[115.235457,23.385343],[115.221739,23.384445],[115.205799,23.377412],[115.197675,23.380796],[115.189551,23.376619],[115.17637,23.381008],[115.168553,23.377307],[115.169089,23.368794],[115.157517,23.362342],[115.141346,23.360809],[115.12234,23.368159],[115.11345,23.35954],[115.100269,23.355997],[115.087623,23.343886],[115.078274,23.344944],[115.069384,23.330875],[115.06126,23.331351],[115.056125,23.321195],[115.048768,23.320561],[115.031525,23.329235],[115.007154,23.332356],[115.007384,23.324475],[114.996884,23.31379],[114.992133,23.296755],[114.978032,23.294374],[114.971058,23.302469],[114.976116,23.316858],[114.970981,23.313631],[114.961631,23.326749],[114.948066,23.329606],[114.953891,23.343727],[114.944158,23.350179],[114.923236,23.338597],[114.913043,23.338756],[114.915419,23.316064],[114.919097,23.314848],[114.91174,23.295908],[114.91174,23.274532],[114.89488,23.254899],[114.898865,23.246643],[114.879629,23.241139],[114.87595,23.222877],[114.859933,23.211072],[114.861926,23.199901],[114.868823,23.189841],[114.856944,23.177451],[114.850353,23.165271],[114.834413,23.171784],[114.827362,23.184493],[114.804294,23.199795],[114.802455,23.205566],[114.786361,23.207101],[114.782989,23.224571],[114.786284,23.236269],[114.793258,23.23971],[114.786821,23.25654],[114.786821,23.266277],[114.78023,23.265801],[114.779234,23.275114],[114.768581,23.2794],[114.779617,23.294903],[114.776628,23.313472],[114.761684,23.314636],[114.75448,23.328812],[114.73693,23.328389],[114.73509,23.334366],[114.72758,23.327649],[114.727427,23.338333],[114.715854,23.347905],[114.719916,23.358588],[114.697461,23.366203],[114.703746,23.367578],[114.70022,23.389256],[114.693246,23.393538],[114.707501,23.40427],[114.686119,23.413521],[114.665657,23.409662],[114.659985,23.403318],[114.652858,23.411882],[114.650712,23.396922],[114.632779,23.407865],[114.642435,23.416956],[114.66673,23.447347],[114.676079,23.45522],[114.697155,23.46061],[114.698381,23.470438],[114.68267,23.493949],[114.685582,23.508317],[114.698764,23.520624],[114.692173,23.532402],[114.677076,23.529338],[114.661825,23.535623],[114.65554,23.562871],[114.6396,23.556429],[114.636764,23.548614],[114.625039,23.549406],[114.623583,23.529233],[114.606646,23.536838],[114.611321,23.544178],[114.600591,23.555214],[114.583041,23.563504],[114.57898,23.561498],[114.567637,23.570738],[114.567561,23.579554],[114.554609,23.590165],[114.556985,23.5965],[114.55047,23.605315],[114.557061,23.622204],[114.545872,23.631757],[114.530545,23.666634],[114.520428,23.668428],[114.512688,23.688527],[114.493529,23.699182],[114.473143,23.703349],[114.440112,23.687578],[114.424248,23.697178],[114.421413,23.709942],[114.405395,23.708201],[114.388612,23.739262],[114.378649,23.744693],[114.368839,23.725499],[114.355351,23.736046],[114.357267,23.747593],[114.341556,23.7516],[114.337954,23.770632],[114.348913,23.791453],[114.342706,23.796882],[114.34102,23.807844],[114.332666,23.808635],[114.326918,23.8324],[114.33029,23.852948],[114.343855,23.86654],[114.356347,23.869595],[114.346154,23.878392],[114.34991,23.887925],[114.331517,23.900512],[114.32163,23.894403],[114.303161,23.891454],[114.28814,23.90541],[114.279633,23.901091],[114.268367,23.902829],[114.263156,23.911044],[114.248671,23.906516],[114.236716,23.910676],[114.247905,23.929737],[114.254649,23.934686],[114.251047,23.940477],[114.271739,23.948479],[114.271816,23.959482],[114.263309,23.960218],[114.258711,23.952744],[114.244303,23.948269],[114.238479,23.941899],[114.21702,23.942636],[114.213341,23.946163],[114.201999,23.941267],[114.19196,23.9449],[114.186518,23.95627],[114.174333,23.959429],[114.16368,23.953586],[114.158162,23.939846],[114.142835,23.940425],[114.119844,23.936002],[114.117008,23.929737],[114.075624,23.924366],[114.074398,23.930895],[114.056771,23.935844],[114.04129,23.906937],[114.036232,23.901776],[114.04267,23.889874],[114.041827,23.871491],[114.047728,23.867488],[114.050487,23.85474],[114.057767,23.846784],[114.052249,23.830029],[114.040294,23.824444],[114.035312,23.813378],[114.047728,23.803312],[114.037228,23.793509],[114.056311,23.784021],[114.05999,23.775851],[114.038454,23.771212],[114.027419,23.760141],[114.02489,23.752549],[114.018222,23.76283],[114.009945,23.762988],[114.017686,23.778276],[114.013087,23.777959],[113.998756,23.762988],[113.976071,23.757716],[113.972853,23.739262],[113.96105,23.738207],[113.955916,23.732671],[113.940282,23.738155],[113.93645,23.732143],[113.920049,23.729454],[113.912386,23.716534],[113.900967,23.715426],[113.897595,23.700184],[113.881884,23.685151],[113.847857,23.679348],[113.839963,23.655449],[113.818811,23.656188],[113.827778,23.648009],[113.825555,23.639883],[113.816742,23.63582],[113.817432,23.623471],[113.832223,23.624263],[113.834215,23.61756],[113.843565,23.617877],[113.859582,23.60996],[113.858356,23.593491],[113.864027,23.587368],[113.852838,23.570579],[113.862495,23.566303],[113.871384,23.541327],[113.888168,23.535095],[113.89315,23.520254],[113.906408,23.511856],[113.911543,23.504144],[113.923115,23.503088],[113.929936,23.494213],[113.946643,23.492522],[113.940895,23.483594],[113.931162,23.483066],[113.938749,23.476726],[113.96105,23.480371],[113.974156,23.478839],[113.981743,23.472129],[113.974462,23.46489],[113.955456,23.466053],[113.952774,23.442907],[113.960054,23.43276],[113.975382,23.429378],[113.98795,23.431439],[113.984195,23.421238],[113.986801,23.405591],[114.000442,23.39338],[113.995997,23.386771],[113.982049,23.379369],[113.990556,23.354833],[114.000902,23.346636],[113.993928,23.333149],[113.984195,23.330505],[113.996151,23.309346],[113.996687,23.297443],[113.978217,23.30104],[113.977451,23.304849],[113.958445,23.314953],[113.958905,23.33262],[113.939285,23.342934],[113.927483,23.339972],[113.895985,23.34505],[113.889394,23.334154],[113.894989,23.314689],[113.888475,23.290512],[113.890314,23.282681],[113.877209,23.264213],[113.895142,23.253523],[113.890084,23.242144],[113.903802,23.212554],[113.893993,23.21266],[113.8838,23.191694],[113.889011,23.178616],[113.902116,23.177186],[113.895679,23.164529],[113.874757,23.165377],[113.858739,23.157221],[113.849849,23.148853],[113.844715,23.125599],[113.848163,23.116911],[113.863261,23.114633],[113.876596,23.124275],[113.894836,23.111295],[113.905565,23.11511],[113.938366,23.107534],[113.962737,23.114209],[113.970554,23.113308],[113.986418,23.10197],[113.993315,23.092645],[114.010252,23.083425],[114.029871,23.084379],[114.049797,23.097467],[114.065891,23.101441],[114.088959,23.094182],[114.091564,23.077331],[114.102217,23.058623],[114.120993,23.048022],[114.150269,23.024698],[114.151035,23.019079],[114.139233,23.023479],[114.124442,22.994],[114.132182,22.994424],[114.13816,22.986417],[114.15571,22.983129],[114.158546,22.978303],[114.178701,22.989174],[114.182303,22.995432],[114.20039,22.986682],[114.212498,22.987796],[114.222385,22.980743],[114.223841,22.963719],[114.211349,22.953959],[114.213035,22.928444],[114.229742,22.914703],[114.245299,22.911732],[114.249208,22.905152],[114.259171,22.906054],[114.26032,22.899634],[114.251737,22.884351],[114.24484,22.88053],[114.236946,22.88589],[114.231198,22.880318],[114.2348,22.862962],[114.233114,22.842314],[114.235643,22.839872],[114.23388,22.816937],[114.229205,22.81253],[114.234953,22.792989],[114.245529,22.790652],[114.250817,22.781677],[114.26147,22.781783],[114.282852,22.802388],[114.284844,22.808282],[114.294347,22.803397],[114.314503,22.800157],[114.318565,22.806583],[114.33052,22.809291],[114.353128,22.806636],[114.351136,22.789696],[114.342706,22.783642],[114.354125,22.778172],[114.355964,22.764893],[114.36562,22.766062],[114.388075,22.757191],[114.394819,22.759794],[114.396352,22.777322],[114.404706,22.781305],[114.41827,22.766327],[114.414055,22.752251],[114.413902,22.736261],[114.403403,22.723935],[114.409227,22.713574],[114.42057,22.713999],[114.426394,22.699918],[114.442028,22.697579],[114.445324,22.68897],[114.441338,22.682167],[114.428157,22.676746],[114.431912,22.660907],[114.449692,22.665319],[114.453447,22.669943],[114.478278,22.661864],[114.481956,22.668136],[114.505867,22.668455],[114.514451,22.660747]]],[[[114.650482,22.573916],[114.658913,22.560512],[114.657763,22.575565],[114.638144,22.585724],[114.641592,22.572799],[114.650482,22.573916]]],[[[114.628947,22.448492],[114.638527,22.454241],[114.652092,22.454507],[114.657227,22.462439],[114.631783,22.468082],[114.620287,22.466325],[114.628947,22.448492]]],[[[114.609941,22.670262],[114.61293,22.661704],[114.617988,22.669518],[114.609941,22.670262]]],[[[114.840007,22.51199],[114.84062,22.502038],[114.855641,22.513799],[114.845908,22.516779],[114.840007,22.51199]]],[[[114.649409,22.675152],[114.648107,22.664734],[114.653548,22.664043],[114.649409,22.675152]]],[[[114.72689,22.577693],[114.720836,22.588543],[114.719226,22.580246],[114.72689,22.577693]]],[[[114.641286,22.429378],[114.650482,22.428739],[114.659602,22.444073],[114.654238,22.445138],[114.641286,22.429378]]]]}},{type:"Feature",properties:{adcode:441400,name:"梅州市",center:[116.117582,24.299112],centroid:[116.084478,24.201791],childrenNum:8,level:"city",parent:{adcode:44e4},subFeatureIndex:11,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[116.368468,23.73304],[116.373296,23.740264],[116.380883,23.737364],[116.401958,23.76225],[116.402955,23.769261],[116.416903,23.777854],[116.436215,23.780331],[116.439357,23.773584],[116.451849,23.76905],[116.464954,23.755238],[116.485187,23.751547],[116.496146,23.752496],[116.504729,23.763673],[116.505955,23.793614],[116.516761,23.802679],[116.510324,23.808793],[116.513389,23.815854],[116.509864,23.827764],[116.518371,23.823443],[116.525881,23.8324],[116.516608,23.845994],[116.498981,23.85848],[116.496989,23.869226],[116.514386,23.866698],[116.522279,23.882131],[116.535384,23.88171],[116.536304,23.886608],[116.558682,23.899037],[116.557992,23.907253],[116.575083,23.909149],[116.590487,23.900933],[116.604741,23.910781],[116.604205,23.929474],[116.608343,23.94153],[116.604205,23.950322],[116.623518,23.947269],[116.62574,23.950006],[116.60842,23.961166],[116.610796,23.968483],[116.628652,23.973693],[116.637312,23.968851],[116.641144,23.989588],[116.646969,23.994429],[116.657775,23.988588],[116.684751,23.989588],[116.68797,23.981062],[116.69548,23.991903],[116.690422,24.005375],[116.697166,24.002586],[116.708815,24.019161],[116.708662,24.033471],[116.700155,24.050094],[116.71257,24.062455],[116.734642,24.053619],[116.744069,24.061982],[116.75748,24.082125],[116.76752,24.074657],[116.772195,24.09401],[116.766447,24.107523],[116.76637,24.124032],[116.780241,24.147319],[116.789745,24.157095],[116.796872,24.157043],[116.809594,24.169183],[116.831819,24.161878],[116.836034,24.173387],[116.847836,24.182689],[116.859485,24.177276],[116.867072,24.163717],[116.878568,24.167817],[116.883856,24.181638],[116.884315,24.193671],[116.900333,24.196771],[116.904548,24.202813],[116.896577,24.218784],[116.917116,24.232809],[116.933363,24.222251],[116.939188,24.239585],[116.935203,24.249879],[116.939418,24.274561],[116.935892,24.284748],[116.918189,24.283383],[116.914281,24.287741],[116.912978,24.31147],[116.919569,24.320972],[116.909299,24.329212],[116.908226,24.341756],[116.896118,24.35073],[116.896961,24.360071],[116.903935,24.369883],[116.885235,24.396221],[116.87328,24.391132],[116.869448,24.407237],[116.863547,24.409807],[116.8555,24.423812],[116.848219,24.426906],[116.838946,24.442586],[116.841475,24.453389],[116.85343,24.453127],[116.860788,24.46225],[116.849369,24.47908],[116.832278,24.496117],[116.814269,24.483798],[116.816798,24.490403],[116.796795,24.50204],[116.783307,24.51834],[116.781085,24.533747],[116.772348,24.534743],[116.758323,24.546637],[116.757327,24.557483],[116.767826,24.564189],[116.761159,24.582943],[116.781621,24.603056],[116.787522,24.614735],[116.798864,24.624003],[116.798558,24.637146],[116.811969,24.644895],[116.815342,24.65458],[116.80124,24.678293],[116.777559,24.67955],[116.753802,24.654528],[116.741923,24.666568],[116.707282,24.665103],[116.700462,24.655732],[116.690116,24.659501],[116.667048,24.658611],[116.650954,24.651387],[116.635167,24.647722],[116.632101,24.640078],[116.624131,24.641387],[116.596465,24.654057],[116.586425,24.636727],[116.57217,24.628978],[116.570484,24.621752],[116.553318,24.613059],[116.530096,24.604941],[116.510477,24.615572],[116.513466,24.645052],[116.517681,24.651544],[116.504959,24.66704],[116.501511,24.698339],[116.486949,24.71859],[116.469706,24.719323],[116.455911,24.713724],[116.446102,24.714456],[116.437365,24.733606],[116.417209,24.743076],[116.41537,24.756467],[116.419125,24.767295],[116.40717,24.777808],[116.399659,24.794019],[116.38939,24.790359],[116.374905,24.807197],[116.377894,24.821836],[116.417822,24.840656],[116.407323,24.853253],[116.393911,24.856912],[116.394754,24.877869],[116.379274,24.877503],[116.374599,24.86841],[116.3618,24.869873],[116.349768,24.856703],[116.351071,24.848549],[116.345783,24.829103],[116.332295,24.826646],[116.318193,24.818176],[116.299954,24.802909],[116.29137,24.800242],[116.26493,24.799876],[116.251289,24.793392],[116.233049,24.80066],[116.23895,24.813262],[116.250906,24.822777],[116.250063,24.827901],[116.23895,24.83041],[116.229294,24.826019],[116.22117,24.830828],[116.22048,24.842642],[116.210901,24.854455],[116.200938,24.85801],[116.191741,24.877137],[116.181012,24.875099],[116.153269,24.846667],[116.139551,24.844681],[116.116023,24.851424],[116.094871,24.849229],[116.09058,24.838199],[116.083222,24.853515],[116.068891,24.84996],[116.06276,24.859891],[116.051648,24.862034],[116.043907,24.87165],[116.038313,24.886909],[116.023368,24.902166],[116.015245,24.905719],[116.00306,24.896471],[115.985586,24.899658],[115.976696,24.915959],[115.962748,24.91319],[115.954625,24.918519],[115.908412,24.923272],[115.8973,24.937115],[115.878447,24.932571],[115.882049,24.923847],[115.885421,24.898823],[115.904044,24.888007],[115.907033,24.880168],[115.893544,24.871075],[115.871779,24.868671],[115.8599,24.864804],[115.864729,24.876144],[115.865572,24.89041],[115.856145,24.891769],[115.850474,24.900338],[115.831621,24.908175],[115.819666,24.906816],[115.809243,24.892866],[115.805105,24.873218],[115.80725,24.862766],[115.796674,24.858584],[115.782573,24.862922],[115.79108,24.855083],[115.785562,24.846145],[115.791846,24.83867],[115.78081,24.835115],[115.779278,24.819797],[115.77284,24.814046],[115.774143,24.80453],[115.765406,24.79381],[115.776672,24.77446],[115.765406,24.76332],[115.757129,24.749929],[115.757359,24.73617],[115.771614,24.726282],[115.769162,24.709904],[115.780887,24.702054],[115.794988,24.70174],[115.801196,24.705665],[115.808017,24.697606],[115.805641,24.685883],[115.797747,24.682114],[115.798284,24.674944],[115.779584,24.677299],[115.761804,24.668139],[115.780197,24.663166],[115.789471,24.644895],[115.786712,24.634162],[115.796828,24.629606],[115.818056,24.603213],[115.840971,24.584043],[115.840971,24.576238],[115.848941,24.569952],[115.844113,24.562722],[115.806101,24.562932],[115.785102,24.56728],[115.759429,24.5502],[115.743948,24.543651],[115.717968,24.539721],[115.708541,24.544856],[115.686086,24.547004],[115.678269,24.56487],[115.687083,24.570633],[115.685167,24.585352],[115.671679,24.604732],[115.660566,24.606774],[115.649607,24.614735],[115.635582,24.612168],[115.629068,24.619762],[115.608682,24.62615],[115.594198,24.615206],[115.578181,24.615206],[115.570747,24.61929],[115.567681,24.631963],[115.559481,24.64301],[115.529056,24.634476],[115.520779,24.628507],[115.520702,24.618296],[115.506065,24.601485],[115.513882,24.576186],[115.493649,24.569166],[115.50024,24.562093],[115.483227,24.562722],[115.488055,24.547947],[115.485679,24.541502],[115.491427,24.522847],[115.486982,24.516348],[115.493266,24.498004],[115.505452,24.493181],[115.515951,24.495068],[115.530129,24.491661],[115.538712,24.48233],[115.554116,24.484427],[115.551511,24.469433],[115.560401,24.477035],[115.57067,24.478398],[115.576495,24.470953],[115.575728,24.461044],[115.593048,24.459733],[115.58891,24.45061],[115.575805,24.441747],[115.573812,24.42785],[115.582166,24.42271],[115.583852,24.411276],[115.576035,24.395801],[115.557948,24.386201],[115.550898,24.359914],[115.552737,24.333359],[115.560477,24.329002],[115.563619,24.312993],[115.571743,24.309948],[115.567758,24.295249],[115.577721,24.290313],[115.580863,24.277554],[115.576725,24.270098],[115.592205,24.255289],[115.590826,24.242894],[115.577874,24.242264],[115.570823,24.235751],[115.573276,24.227136],[115.571437,24.204231],[115.564156,24.200816],[115.557718,24.206333],[115.551204,24.198504],[115.538099,24.192777],[115.538789,24.179588],[115.545303,24.170234],[115.520626,24.182689],[115.515185,24.190728],[115.503612,24.187575],[115.510356,24.175542],[115.507061,24.165977],[115.520856,24.143324],[115.509897,24.140381],[115.521929,24.137122],[115.522235,24.128868],[115.532581,24.12256],[115.537409,24.108838],[115.529592,24.098479],[115.513192,24.099058],[115.508364,24.105157],[115.500393,24.128395],[115.494339,24.122297],[115.483763,24.123506],[115.480084,24.130761],[115.481387,24.143167],[115.473494,24.142168],[115.463301,24.130077],[115.453261,24.125504],[115.446824,24.130498],[115.442302,24.124452],[115.44874,24.112781],[115.437551,24.104],[115.428967,24.076708],[115.417778,24.068241],[115.426132,24.053934],[115.445598,24.038311],[115.445214,24.016109],[115.449889,24.012531],[115.446517,23.99364],[115.452495,23.983956],[115.453261,23.967009],[115.425212,23.953796],[115.408505,23.950585],[115.411877,23.939898],[115.400688,23.927999],[115.403524,23.909675],[115.391491,23.89672],[115.391875,23.881921],[115.381835,23.88034],[115.378846,23.867646],[115.371872,23.865223],[115.37647,23.851052],[115.354399,23.842411],[115.356315,23.829028],[115.349801,23.818489],[115.363136,23.80426],[115.35072,23.800677],[115.358461,23.792455],[115.349264,23.782545],[115.317153,23.761617],[115.325966,23.75761],[115.347961,23.75392],[115.365588,23.760246],[115.387276,23.778223],[115.399385,23.768734],[115.382985,23.748173],[115.388503,23.734516],[115.403677,23.724392],[115.412567,23.723021],[115.411724,23.707568],[115.407432,23.703349],[115.420231,23.696123],[115.443528,23.703349],[115.445981,23.709572],[115.454028,23.706672],[115.457093,23.696281],[115.451652,23.680509],[115.452648,23.663363],[115.448893,23.662888],[115.441919,23.643102],[115.432722,23.63772],[115.43142,23.600195],[115.428737,23.581138],[115.437781,23.571688],[115.436708,23.561762],[115.450349,23.555954],[115.435328,23.534356],[115.432569,23.516134],[115.440616,23.500975],[115.432569,23.495903],[115.418468,23.495956],[115.416858,23.484122],[115.426438,23.483119],[115.426208,23.468431],[115.432876,23.468906],[115.440693,23.447981],[115.435558,23.43165],[115.454871,23.418119],[115.454411,23.404904],[115.460082,23.400252],[115.457017,23.38381],[115.463914,23.375456],[115.475486,23.373658],[115.505068,23.378734],[115.510816,23.388621],[115.50936,23.399935],[115.513652,23.407177],[115.507827,23.411142],[115.518403,23.422506],[115.52668,23.421978],[115.527293,23.428743],[115.543234,23.436935],[115.561244,23.434557],[115.582013,23.448668],[115.596804,23.464838],[115.594964,23.469434],[115.606537,23.471865],[115.616116,23.475035],[115.623167,23.489934],[115.622094,23.507102],[115.637115,23.514972],[115.642096,23.513863],[115.639797,23.528758],[115.659493,23.532613],[115.669686,23.548403],[115.687389,23.557538],[115.69467,23.550092],[115.70195,23.534092],[115.713829,23.519092],[115.723179,23.514656],[115.733755,23.51624],[115.736437,23.525958],[115.751612,23.52749],[115.759735,23.522895],[115.776059,23.524638],[115.786175,23.517455],[115.793302,23.525694],[115.788398,23.539267],[115.801349,23.543122],[115.80794,23.554158],[115.802116,23.557168],[115.812309,23.578974],[115.798131,23.597133],[115.807787,23.59877],[115.808247,23.606687],[115.800047,23.615502],[115.81844,23.644632],[115.83461,23.660884],[115.86036,23.65756],[115.863656,23.646057],[115.876148,23.633973],[115.896227,23.625846],[115.897836,23.620093],[115.914696,23.630859],[115.923663,23.628168],[115.954471,23.64516],[115.95861,23.655871],[115.972328,23.664102],[115.985816,23.676974],[116.006585,23.675497],[116.017467,23.661939],[116.01126,23.654236],[116.021223,23.644685],[116.039386,23.648168],[116.055786,23.639514],[116.056476,23.646374],[116.072417,23.642785],[116.074256,23.636295],[116.087208,23.626426],[116.09878,23.622574],[116.106137,23.628379],[116.117326,23.620885],[116.133497,23.62421],[116.150664,23.616241],[116.165455,23.616082],[116.17787,23.628221],[116.179939,23.637139],[116.191358,23.641361],[116.187373,23.652336],[116.17764,23.657296],[116.183005,23.674442],[116.181089,23.68552],[116.19588,23.685784],[116.214349,23.702558],[116.214119,23.71896],[116.227684,23.728821],[116.236957,23.727608],[116.233126,23.718169],[116.271598,23.746433],[116.271215,23.757294],[116.288458,23.763199],[116.295892,23.759139],[116.306621,23.769841],[116.320033,23.775534],[116.335437,23.773953],[116.338732,23.758823],[116.350151,23.751969],[116.35475,23.743058],[116.368468,23.73304]]]]}},{type:"Feature",properties:{adcode:441500,name:"汕尾市",center:[115.364238,22.774485],centroid:[115.53778,23.004558],childrenNum:4,level:"city",parent:{adcode:44e4},subFeatureIndex:12,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[115.606537,23.471865],[115.594964,23.469434],[115.596804,23.464838],[115.582013,23.448668],[115.561244,23.434557],[115.543234,23.436935],[115.527293,23.428743],[115.52668,23.421978],[115.518403,23.422506],[115.507827,23.411142],[115.513652,23.407177],[115.50936,23.399935],[115.510816,23.388621],[115.505068,23.378734],[115.475486,23.373658],[115.470888,23.35642],[115.47564,23.333467],[115.471348,23.327543],[115.497328,23.322465],[115.485756,23.315218],[115.468359,23.311409],[115.458396,23.312414],[115.460235,23.30067],[115.452342,23.29321],[115.459009,23.288554],[115.445674,23.279718],[115.437934,23.281993],[115.423909,23.277178],[115.430883,23.270617],[115.418161,23.25527],[115.419311,23.243785],[115.425289,23.236322],[115.409655,23.237963],[115.40314,23.230658],[115.404443,23.21986],[115.388119,23.22023],[115.376241,23.205143],[115.342367,23.19413],[115.336925,23.170302],[115.325277,23.159392],[115.317076,23.163523],[115.311635,23.157645],[115.294468,23.160981],[115.283509,23.157433],[115.28167,23.145145],[115.285348,23.135505],[115.281363,23.125016],[115.287724,23.117865],[115.290253,23.095559],[115.262664,23.091426],[115.265882,23.084114],[115.251551,23.073568],[115.24588,23.061803],[115.22695,23.0538],[115.220743,23.054754],[115.20235,23.043835],[115.194226,23.045637],[115.180431,23.040337],[115.165947,23.027084],[115.163341,23.012558],[115.14878,23.000363],[115.146864,22.991136],[115.129467,23.003279],[115.110998,23.009589],[115.099349,22.996227],[115.085937,23.007733],[115.074901,22.999727],[115.075974,22.995219],[115.062333,22.994106],[115.047925,22.966848],[115.043557,22.969924],[115.020029,22.955498],[115.010066,22.955922],[114.99995,22.949504],[114.997804,22.938682],[114.986308,22.935075],[114.975962,22.938682],[114.965923,22.926693],[114.953507,22.928656],[114.946304,22.919372],[114.930363,22.920698],[114.917794,22.907009],[114.926225,22.900854],[114.926071,22.890454],[114.941245,22.877452],[114.939023,22.870075],[114.925075,22.868323],[114.932356,22.859035],[114.927987,22.849745],[114.931666,22.840456],[114.940556,22.842473],[114.950135,22.834722],[114.950595,22.81614],[114.944388,22.809397],[114.952741,22.794582],[114.974276,22.78805],[114.977725,22.776631],[114.992286,22.771055],[114.999797,22.773551],[114.994432,22.754376],[115.007154,22.740724],[115.009836,22.729248],[115.023094,22.717559],[115.02616,22.702149],[115.039112,22.710811],[115.034513,22.721916],[115.023708,22.726167],[115.023784,22.736527],[115.034054,22.744442],[115.05352,22.747523],[115.050991,22.764628],[115.055129,22.778384],[115.066931,22.785607],[115.081799,22.789006],[115.106246,22.790174],[115.133376,22.799945],[115.154528,22.801644],[115.161195,22.786934],[115.173917,22.775357],[115.188402,22.772701],[115.194303,22.775463],[115.193307,22.791395],[115.18411,22.800635],[115.190241,22.818636],[115.198595,22.821874],[115.227947,22.825272],[115.244347,22.823945],[115.259521,22.817414],[115.233311,22.80175],[115.22902,22.782208],[115.235764,22.775569],[115.284429,22.783058],[115.310256,22.78412],[115.326886,22.781677],[115.337998,22.776684],[115.34344,22.768505],[115.346505,22.743008],[115.34183,22.72521],[115.35118,22.710545],[115.365741,22.698058],[115.378923,22.6937],[115.381375,22.683974],[115.396933,22.68525],[115.42912,22.683815],[115.441536,22.694285],[115.471731,22.697845],[115.493803,22.682805],[115.507827,22.682593],[115.537793,22.662927],[115.556722,22.665212],[115.559175,22.658515],[115.574195,22.650488],[115.581936,22.673185],[115.565382,22.685463],[115.567758,22.696251],[115.589063,22.724307],[115.607609,22.731533],[115.609142,22.752782],[115.602551,22.753898],[115.588067,22.744974],[115.573429,22.753101],[115.549595,22.749117],[115.541701,22.755492],[115.546376,22.766752],[115.570364,22.78651],[115.580173,22.80483],[115.583699,22.828564],[115.598949,22.842526],[115.63244,22.860043],[115.654205,22.865457],[115.682561,22.863918],[115.690301,22.857071],[115.696279,22.842791],[115.740116,22.840827],[115.755903,22.837324],[115.788398,22.809981],[115.794759,22.798883],[115.795985,22.783589],[115.793302,22.762397],[115.794222,22.744761],[115.805105,22.733711],[115.818746,22.731373],[115.829322,22.73472],[115.84488,22.749117],[115.86243,22.770789],[115.883352,22.785341],[115.909485,22.787147],[115.929487,22.801644],[115.942286,22.802759],[115.950563,22.795644],[115.959529,22.796175],[115.976083,22.812636],[115.997312,22.826865],[116.010647,22.828086],[116.038926,22.840774],[116.056093,22.844703],[116.070501,22.843588],[116.081077,22.834882],[116.088204,22.821609],[116.097094,22.816777],[116.106903,22.817892],[116.122538,22.82936],[116.138018,22.833607],[116.147675,22.843004],[116.155262,22.844384],[116.17672,22.860574],[116.192661,22.876019],[116.20408,22.892895],[116.21389,22.899262],[116.226918,22.914491],[116.223929,22.926852],[116.211667,22.926004],[116.198256,22.93168],[116.181549,22.92611],[116.16806,22.913695],[116.172505,22.893425],[116.156105,22.886208],[116.143843,22.890294],[116.135106,22.900589],[116.124453,22.892523],[116.109969,22.891143],[116.086595,22.901491],[116.080234,22.915764],[116.055633,22.920433],[116.026894,22.939107],[116.017697,22.934067],[116.005665,22.945632],[116.0026,22.937409],[115.983287,22.925897],[115.979225,22.938629],[115.967116,22.943775],[115.977846,22.951838],[115.973247,22.969818],[115.963515,22.94961],[115.958993,22.957036],[115.943819,22.956293],[115.9488,22.972682],[115.941213,22.987053],[115.94949,22.990023],[115.945505,22.996015],[115.959989,23.017435],[115.954471,23.021571],[115.942209,23.006195],[115.923586,23.017594],[115.937688,23.030424],[115.950716,23.024327],[115.955314,23.038322],[115.966963,23.04728],[115.964741,23.052952],[115.951099,23.061273],[115.950333,23.06599],[115.937688,23.067156],[115.939833,23.082206],[115.920751,23.100116],[115.923126,23.110977],[115.916612,23.112302],[115.908795,23.125652],[115.898832,23.129466],[115.883505,23.11956],[115.864345,23.117865],[115.85147,23.098791],[115.832924,23.112196],[115.833154,23.122897],[115.79951,23.133015],[115.791386,23.13953],[115.780657,23.15828],[115.76349,23.159233],[115.752991,23.167813],[115.725631,23.183805],[115.733525,23.192806],[115.730613,23.199107],[115.73866,23.211125],[115.752148,23.193601],[115.757743,23.215942],[115.750079,23.225683],[115.749236,23.236375],[115.758126,23.244949],[115.768089,23.24442],[115.797288,23.249184],[115.810929,23.24876],[115.831621,23.258128],[115.824571,23.272416],[115.797671,23.286596],[115.797288,23.309134],[115.802039,23.324422],[115.812845,23.326696],[115.819666,23.335741],[115.811236,23.346689],[115.787401,23.368952],[115.777668,23.383651],[115.739886,23.379263],[115.725938,23.369375],[115.703023,23.368265],[115.694057,23.354675],[115.676813,23.354992],[115.671602,23.38344],[115.673058,23.395071],[115.682868,23.407759],[115.657884,23.420445],[115.648304,23.430329],[115.646235,23.439684],[115.625236,23.45168],[115.61443,23.469751],[115.606537,23.471865]]],[[[116.769589,20.771743],[116.769742,20.75817],[116.761005,20.750306],[116.768976,20.743896],[116.797638,20.745458],[116.809747,20.738401],[116.831129,20.741526],[116.872513,20.738294],[116.880943,20.733499],[116.888301,20.713996],[116.88991,20.683066],[116.874506,20.650621],[116.848832,20.628304],[116.82791,20.619732],[116.791737,20.613155],[116.758476,20.618438],[116.748667,20.612292],[116.749586,20.600915],[116.770355,20.58792],[116.796029,20.582636],[116.825611,20.583714],[116.862933,20.588891],[116.887151,20.604043],[116.904931,20.619301],[116.917729,20.637037],[116.931831,20.666198],[116.933747,20.67633],[116.9257,20.726765],[116.911982,20.755908],[116.90677,20.762049],[116.886001,20.775514],[116.860328,20.779876],[116.845307,20.778529],[116.820093,20.780414],[116.769589,20.771743]]],[[[115.107702,22.77132],[115.117129,22.779712],[115.108622,22.783217],[115.107702,22.77132]]],[[[116.735562,20.694544],[116.736788,20.701118],[116.72238,20.707476],[116.71441,20.700256],[116.735562,20.694544]]],[[[115.185796,22.737695],[115.196525,22.735889],[115.195146,22.741945],[115.185796,22.737695]]],[[[115.943359,21.09745],[115.944125,21.08267],[115.953322,21.064288],[115.989188,21.035473],[116.016931,21.023214],[116.040075,21.020472],[116.055096,21.027408],[116.067358,21.040419],[116.065749,21.064879],[116.057549,21.087507],[116.043831,21.110186],[116.024441,21.124211],[116.000301,21.126951],[115.965047,21.12362],[115.950026,21.110616],[115.943359,21.09745]]],[[[115.926728,20.981538],[115.931173,20.964057],[115.939374,20.945821],[115.953168,20.928337],[115.969875,20.919513],[115.998844,20.922956],[116.000914,20.948404],[115.987196,20.966693],[115.954088,20.999823],[115.931557,20.992993],[115.926728,20.981538]]]]}},{type:"Feature",properties:{adcode:441600,name:"河源市",center:[114.697802,23.746266],centroid:[114.962729,24.043541],childrenNum:6,level:"city",parent:{adcode:44e4},subFeatureIndex:13,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[115.419311,23.243785],[115.418161,23.25527],[115.430883,23.270617],[115.423909,23.277178],[115.437934,23.281993],[115.445674,23.279718],[115.459009,23.288554],[115.452342,23.29321],[115.460235,23.30067],[115.458396,23.312414],[115.468359,23.311409],[115.485756,23.315218],[115.497328,23.322465],[115.471348,23.327543],[115.47564,23.333467],[115.470888,23.35642],[115.475486,23.373658],[115.463914,23.375456],[115.457017,23.38381],[115.460082,23.400252],[115.454411,23.404904],[115.454871,23.418119],[115.435558,23.43165],[115.440693,23.447981],[115.432876,23.468906],[115.426208,23.468431],[115.426438,23.483119],[115.416858,23.484122],[115.418468,23.495956],[115.432569,23.495903],[115.440616,23.500975],[115.432569,23.516134],[115.435328,23.534356],[115.450349,23.555954],[115.436708,23.561762],[115.437781,23.571688],[115.428737,23.581138],[115.43142,23.600195],[115.432722,23.63772],[115.441919,23.643102],[115.448893,23.662888],[115.452648,23.663363],[115.451652,23.680509],[115.457093,23.696281],[115.454028,23.706672],[115.445981,23.709572],[115.443528,23.703349],[115.420231,23.696123],[115.407432,23.703349],[115.411724,23.707568],[115.412567,23.723021],[115.403677,23.724392],[115.388503,23.734516],[115.382985,23.748173],[115.399385,23.768734],[115.387276,23.778223],[115.365588,23.760246],[115.347961,23.75392],[115.325966,23.75761],[115.317153,23.761617],[115.349264,23.782545],[115.358461,23.792455],[115.35072,23.800677],[115.363136,23.80426],[115.349801,23.818489],[115.356315,23.829028],[115.354399,23.842411],[115.37647,23.851052],[115.371872,23.865223],[115.378846,23.867646],[115.381835,23.88034],[115.391875,23.881921],[115.391491,23.89672],[115.403524,23.909675],[115.400688,23.927999],[115.411877,23.939898],[115.408505,23.950585],[115.425212,23.953796],[115.453261,23.967009],[115.452495,23.983956],[115.446517,23.99364],[115.449889,24.012531],[115.445214,24.016109],[115.445598,24.038311],[115.426132,24.053934],[115.417778,24.068241],[115.428967,24.076708],[115.437551,24.104],[115.44874,24.112781],[115.442302,24.124452],[115.446824,24.130498],[115.453261,24.125504],[115.463301,24.130077],[115.473494,24.142168],[115.481387,24.143167],[115.480084,24.130761],[115.483763,24.123506],[115.494339,24.122297],[115.500393,24.128395],[115.508364,24.105157],[115.513192,24.099058],[115.529592,24.098479],[115.537409,24.108838],[115.532581,24.12256],[115.522235,24.128868],[115.521929,24.137122],[115.509897,24.140381],[115.520856,24.143324],[115.507061,24.165977],[115.510356,24.175542],[115.503612,24.187575],[115.515185,24.190728],[115.520626,24.182689],[115.545303,24.170234],[115.538789,24.179588],[115.538099,24.192777],[115.551204,24.198504],[115.557718,24.206333],[115.564156,24.200816],[115.571437,24.204231],[115.573276,24.227136],[115.570823,24.235751],[115.577874,24.242264],[115.590826,24.242894],[115.592205,24.255289],[115.576725,24.270098],[115.580863,24.277554],[115.577721,24.290313],[115.567758,24.295249],[115.571743,24.309948],[115.563619,24.312993],[115.560477,24.329002],[115.552737,24.333359],[115.550898,24.359914],[115.557948,24.386201],[115.576035,24.395801],[115.583852,24.411276],[115.582166,24.42271],[115.573812,24.42785],[115.575805,24.441747],[115.58891,24.45061],[115.593048,24.459733],[115.575728,24.461044],[115.576495,24.470953],[115.57067,24.478398],[115.560401,24.477035],[115.551511,24.469433],[115.554116,24.484427],[115.538712,24.48233],[115.530129,24.491661],[115.515951,24.495068],[115.505452,24.493181],[115.493266,24.498004],[115.486982,24.516348],[115.491427,24.522847],[115.485679,24.541502],[115.488055,24.547947],[115.483227,24.562722],[115.50024,24.562093],[115.493649,24.569166],[115.513882,24.576186],[115.506065,24.601485],[115.520702,24.618296],[115.520779,24.628507],[115.529056,24.634476],[115.559481,24.64301],[115.559634,24.660915],[115.555189,24.671803],[115.556186,24.68269],[115.534191,24.691954],[115.523078,24.703049],[115.52783,24.712573],[115.523691,24.717544],[115.507904,24.716497],[115.506601,24.724921],[115.496485,24.734077],[115.500087,24.74114],[115.48292,24.749667],[115.478705,24.761123],[115.465677,24.767243],[115.450962,24.766301],[115.41295,24.792869],[115.401301,24.790359],[115.389499,24.774408],[115.372562,24.774408],[115.362829,24.757461],[115.363749,24.739361],[115.358537,24.735176],[115.338995,24.749092],[115.321981,24.748725],[115.306654,24.758664],[115.278528,24.754113],[115.269944,24.749406],[115.258908,24.728793],[115.247566,24.731671],[115.233771,24.723508],[115.224575,24.726386],[115.200204,24.713671],[115.18434,24.711421],[115.188095,24.697135],[115.195146,24.691902],[115.168859,24.695094],[115.155448,24.688761],[115.14832,24.68986],[115.138511,24.681277],[115.125636,24.681486],[115.120731,24.66437],[115.111611,24.671437],[115.104943,24.667825],[115.08724,24.687087],[115.083255,24.700484],[115.074212,24.697972],[115.073829,24.704252],[115.059421,24.702735],[115.054899,24.709904],[115.045549,24.69792],[115.046699,24.688761],[115.030911,24.678136],[115.024857,24.669133],[115.007844,24.672431],[115.003858,24.679183],[114.991213,24.673321],[114.978875,24.673216],[114.962321,24.665155],[114.955194,24.655418],[114.937414,24.651911],[114.936801,24.665417],[114.919634,24.667092],[114.909594,24.661543],[114.905839,24.632538],[114.898558,24.623008],[114.901854,24.607926],[114.893807,24.590957],[114.89327,24.582367],[114.88668,24.580271],[114.882924,24.569218],[114.869053,24.562355],[114.861619,24.56728],[114.854262,24.582524],[114.859243,24.597295],[114.846675,24.60248],[114.83288,24.596352],[114.826366,24.588286],[114.804217,24.605413],[114.796017,24.602166],[114.781226,24.612954],[114.768964,24.605779],[114.752717,24.616253],[114.729879,24.608922],[114.730415,24.592424],[114.735703,24.582838],[114.732868,24.57519],[114.738079,24.56508],[114.72666,24.549781],[114.71869,24.55413],[114.705202,24.526096],[114.699914,24.537101],[114.686502,24.538568],[114.677842,24.553815],[114.665197,24.583676],[114.638604,24.570371],[114.624349,24.575662],[114.608255,24.563613],[114.592468,24.537991],[114.572159,24.542288],[114.562579,24.53752],[114.546715,24.542812],[114.534147,24.559002],[114.500656,24.534166],[114.481113,24.529974],[114.469924,24.510688],[114.451455,24.500362],[114.442718,24.498633],[114.42877,24.486262],[114.422256,24.496903],[114.41099,24.502564],[114.402023,24.498528],[114.406315,24.517973],[114.403403,24.528716],[114.390758,24.533537],[114.387309,24.548],[114.391677,24.563455],[114.379722,24.563403],[114.37658,24.571995],[114.363858,24.582524],[114.351059,24.57849],[114.338567,24.583362],[114.331593,24.576971],[114.324006,24.579538],[114.308142,24.574143],[114.310518,24.558583],[114.293275,24.551982],[114.288906,24.537991],[114.273732,24.533695],[114.280169,24.523109],[114.280399,24.511526],[114.286607,24.500572],[114.310595,24.480757],[114.306839,24.472998],[114.292968,24.468856],[114.283465,24.453965],[114.257868,24.435245],[114.242004,24.426014],[114.245683,24.411328],[114.254879,24.400155],[114.249898,24.386935],[114.249208,24.362695],[114.278637,24.364951],[114.293581,24.352672],[114.292508,24.346952],[114.280859,24.337348],[114.272966,24.324856],[114.280553,24.313098],[114.279326,24.303176],[114.263692,24.27829],[114.266451,24.272776],[114.254649,24.266055],[114.272889,24.257495],[114.254802,24.256707],[114.263156,24.246676],[114.274958,24.224195],[114.274192,24.212742],[114.290899,24.207594],[114.298026,24.195142],[114.289289,24.1819],[114.292891,24.175069],[114.306533,24.165399],[114.316419,24.147319],[114.33029,24.137279],[114.329831,24.126871],[114.337418,24.125294],[114.340713,24.135807],[114.352209,24.143219],[114.365161,24.132233],[114.378879,24.139172],[114.393517,24.140959],[114.419956,24.139329],[114.422179,24.131181],[114.433215,24.133337],[114.439499,24.121982],[114.446856,24.121245],[114.46387,24.110836],[114.479044,24.112939],[114.482953,24.118827],[114.474063,24.135229],[114.463946,24.14017],[114.469311,24.144376],[114.469848,24.162141],[114.46272,24.161931],[114.460574,24.169604],[114.470537,24.171811],[114.474216,24.16624],[114.48119,24.172284],[114.491613,24.192357],[114.511155,24.205335],[114.512458,24.210904],[114.548324,24.230603],[114.556065,24.245888],[114.566028,24.233019],[114.577293,24.227241],[114.591318,24.225981],[114.597602,24.21248],[114.590935,24.203653],[114.590782,24.187838],[114.600055,24.174911],[114.594077,24.164138],[114.568327,24.159303],[114.558134,24.15063],[114.565568,24.136175],[114.554226,24.124295],[114.546715,24.130393],[114.535833,24.124347],[114.533993,24.138856],[114.527939,24.135807],[114.522957,24.12419],[114.509469,24.106682],[114.495828,24.118617],[114.489697,24.114043],[114.493222,24.106787],[114.481267,24.086595],[114.46364,24.07592],[114.44586,24.07066],[114.437813,24.062192],[114.436587,24.048569],[114.440725,24.033208],[114.425628,24.032998],[114.420416,24.019582],[114.412523,24.027421],[114.398038,24.026],[114.399494,24.018003],[114.389685,24.012741],[114.385546,24.003901],[114.391984,23.991693],[114.385393,23.994482],[114.382941,23.981851],[114.389685,23.97043],[114.384856,23.967798],[114.386696,23.95627],[114.378036,23.942794],[114.382481,23.932159],[114.370449,23.92742],[114.36769,23.912519],[114.360486,23.910412],[114.362632,23.901091],[114.34991,23.887925],[114.346154,23.878392],[114.356347,23.869595],[114.343855,23.86654],[114.33029,23.852948],[114.326918,23.8324],[114.332666,23.808635],[114.34102,23.807844],[114.342706,23.796882],[114.348913,23.791453],[114.337954,23.770632],[114.341556,23.7516],[114.357267,23.747593],[114.355351,23.736046],[114.368839,23.725499],[114.378649,23.744693],[114.388612,23.739262],[114.405395,23.708201],[114.421413,23.709942],[114.424248,23.697178],[114.440112,23.687578],[114.473143,23.703349],[114.493529,23.699182],[114.512688,23.688527],[114.520428,23.668428],[114.530545,23.666634],[114.545872,23.631757],[114.557061,23.622204],[114.55047,23.605315],[114.556985,23.5965],[114.554609,23.590165],[114.567561,23.579554],[114.567637,23.570738],[114.57898,23.561498],[114.583041,23.563504],[114.600591,23.555214],[114.611321,23.544178],[114.606646,23.536838],[114.623583,23.529233],[114.625039,23.549406],[114.636764,23.548614],[114.6396,23.556429],[114.65554,23.562871],[114.661825,23.535623],[114.677076,23.529338],[114.692173,23.532402],[114.698764,23.520624],[114.685582,23.508317],[114.68267,23.493949],[114.698381,23.470438],[114.697155,23.46061],[114.676079,23.45522],[114.66673,23.447347],[114.642435,23.416956],[114.632779,23.407865],[114.650712,23.396922],[114.652858,23.411882],[114.659985,23.403318],[114.665657,23.409662],[114.686119,23.413521],[114.707501,23.40427],[114.693246,23.393538],[114.70022,23.389256],[114.703746,23.367578],[114.697461,23.366203],[114.719916,23.358588],[114.715854,23.347905],[114.727427,23.338333],[114.72758,23.327649],[114.73509,23.334366],[114.73693,23.328389],[114.75448,23.328812],[114.761684,23.314636],[114.776628,23.313472],[114.779617,23.294903],[114.768581,23.2794],[114.779234,23.275114],[114.78023,23.265801],[114.786821,23.266277],[114.786821,23.25654],[114.793258,23.23971],[114.786284,23.236269],[114.782989,23.224571],[114.786361,23.207101],[114.802455,23.205566],[114.804294,23.199795],[114.827362,23.184493],[114.834413,23.171784],[114.850353,23.165271],[114.856944,23.177451],[114.868823,23.189841],[114.861926,23.199901],[114.859933,23.211072],[114.87595,23.222877],[114.879629,23.241139],[114.898865,23.246643],[114.89488,23.254899],[114.91174,23.274532],[114.91174,23.295908],[114.919097,23.314848],[114.915419,23.316064],[114.913043,23.338756],[114.923236,23.338597],[114.944158,23.350179],[114.953891,23.343727],[114.948066,23.329606],[114.961631,23.326749],[114.970981,23.313631],[114.976116,23.316858],[114.971058,23.302469],[114.978032,23.294374],[114.992133,23.296755],[114.996884,23.31379],[115.007384,23.324475],[115.007154,23.332356],[115.031525,23.329235],[115.048768,23.320561],[115.056125,23.321195],[115.06126,23.331351],[115.069384,23.330875],[115.078274,23.344944],[115.087623,23.343886],[115.100269,23.355997],[115.11345,23.35954],[115.12234,23.368159],[115.141346,23.360809],[115.157517,23.362342],[115.169089,23.368794],[115.168553,23.377307],[115.17637,23.381008],[115.189551,23.376619],[115.197675,23.380796],[115.205799,23.377412],[115.221739,23.384445],[115.235457,23.385343],[115.240822,23.376725],[115.265039,23.384445],[115.277608,23.375879],[115.295618,23.357319],[115.306117,23.360597],[115.303282,23.346425],[115.306884,23.344415],[115.303665,23.324634],[115.310792,23.307971],[115.334856,23.322412],[115.345585,23.316964],[115.348191,23.308552],[115.362369,23.305114],[115.365971,23.299823],[115.377313,23.302892],[115.384517,23.289877],[115.39494,23.288342],[115.401378,23.276437],[115.403447,23.250083],[115.419311,23.243785]]]]}},{type:"Feature",properties:{adcode:441700,name:"阳江市",center:[111.975107,21.859222],centroid:[111.779569,22.02617],childrenNum:4,level:"city",parent:{adcode:44e4},subFeatureIndex:14,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[112.307824,21.704174],[112.303456,21.71445],[112.310047,21.732483],[112.304529,21.744415],[112.313955,21.751263],[112.326754,21.767527],[112.333574,21.770844],[112.32775,21.799193],[112.34576,21.811814],[112.342464,21.818499],[112.358558,21.834006],[112.351737,21.849298],[112.370054,21.861434],[112.356872,21.872019],[112.343077,21.876723],[112.348365,21.885276],[112.350818,21.901631],[112.345147,21.906067],[112.346909,21.920442],[112.341085,21.919213],[112.340472,21.942831],[112.331045,21.9595],[112.323841,21.962919],[112.318477,21.976381],[112.299011,21.985248],[112.276939,21.982524],[112.273644,21.99358],[112.263757,22.001432],[112.239387,22.006185],[112.225669,22.012219],[112.232029,22.019589],[112.221607,22.01788],[112.216779,22.03956],[112.231263,22.0528],[112.226818,22.063585],[112.212334,22.069243],[112.199075,22.064706],[112.185051,22.066841],[112.173785,22.085204],[112.16773,22.085417],[112.156541,22.095718],[112.149721,22.090915],[112.143206,22.095185],[112.126116,22.096572],[112.126806,22.105538],[112.106727,22.125497],[112.105884,22.135795],[112.089867,22.137342],[112.086341,22.131313],[112.073236,22.130192],[112.072776,22.125177],[112.034381,22.113437],[112.027254,22.127044],[112.038826,22.131366],[112.051165,22.14684],[112.03668,22.168019],[112.041585,22.187489],[112.052161,22.194742],[112.051625,22.207542],[112.037906,22.215061],[112.037906,22.232178],[112.024112,22.235217],[112.021353,22.242842],[112.004262,22.248333],[112.010547,22.266193],[112.019973,22.268271],[112.036604,22.262781],[112.049479,22.270777],[112.061511,22.28357],[112.068332,22.295988],[112.062201,22.304515],[112.068945,22.318477],[112.065036,22.324392],[112.081896,22.351086],[112.098757,22.351618],[112.107877,22.347463],[112.119985,22.35636],[112.119832,22.337766],[112.128185,22.349754],[112.1347,22.349221],[112.13447,22.337233],[112.147268,22.339098],[112.150564,22.35327],[112.144433,22.358597],[112.153323,22.368452],[112.154012,22.37591],[112.165431,22.385018],[112.161523,22.400676],[112.142057,22.41548],[112.13286,22.405842],[112.108949,22.41335],[112.086725,22.416226],[112.077375,22.420858],[112.073006,22.434969],[112.058828,22.451207],[112.045494,22.45307],[112.034534,22.466325],[112.012923,22.471755],[112.014302,22.484795],[112.008861,22.491075],[111.995373,22.492406],[111.983724,22.505391],[111.98403,22.515342],[111.969546,22.546468],[111.976366,22.562959],[111.989931,22.565033],[111.998591,22.575459],[111.998361,22.589287],[111.98518,22.593861],[111.96602,22.627521],[111.956517,22.633795],[111.939121,22.620875],[111.931227,22.606039],[111.918965,22.592106],[111.914213,22.593701],[111.902258,22.581469],[111.900265,22.570512],[111.873825,22.579288],[111.870836,22.571735],[111.859417,22.581575],[111.835736,22.585937],[111.83405,22.595829],[111.821788,22.59769],[111.831904,22.60891],[111.841178,22.605454],[111.846925,22.612207],[111.859111,22.605401],[111.86049,22.617099],[111.85344,22.624331],[111.857425,22.632731],[111.871296,22.633529],[111.870836,22.65979],[111.86256,22.658993],[111.850681,22.676268],[111.841331,22.679085],[111.84248,22.687801],[111.835277,22.68897],[111.833437,22.680732],[111.820102,22.676427],[111.820332,22.666701],[111.809756,22.656123],[111.807074,22.645384],[111.814508,22.633263],[111.802476,22.626192],[111.784313,22.607581],[111.780327,22.595988],[111.76408,22.588011],[111.764004,22.582692],[111.738023,22.570459],[111.719707,22.54035],[111.721393,22.525931],[111.713346,22.504699],[111.691198,22.482134],[111.680315,22.4824],[111.683381,22.468774],[111.679089,22.45685],[111.660083,22.434915],[111.649584,22.426716],[111.630884,22.402859],[111.616783,22.390504],[111.60728,22.39322],[111.600689,22.375537],[111.590266,22.369784],[111.57149,22.375217],[111.55256,22.364723],[111.542751,22.368079],[111.531102,22.358384],[111.517001,22.365309],[111.511176,22.349594],[111.494163,22.339418],[111.492247,22.333557],[111.479601,22.334143],[111.465807,22.33004],[111.468182,22.326683],[111.459369,22.309738],[111.46481,22.30217],[111.459446,22.296415],[111.453468,22.270297],[111.433389,22.275255],[111.42266,22.272643],[111.416835,22.263367],[111.401278,22.253025],[111.388556,22.251319],[111.381275,22.240869],[111.37683,22.243162],[111.360507,22.233938],[111.346099,22.211488],[111.354069,22.193356],[111.348091,22.181035],[111.327169,22.171326],[111.33445,22.160017],[111.331384,22.142198],[111.340657,22.129445],[111.337515,22.118453],[111.32441,22.113383],[111.327169,22.10303],[111.312685,22.088353],[111.316976,22.082641],[111.304561,22.084403],[111.298583,22.069991],[111.300653,22.064012],[111.288467,22.058299],[111.285325,22.048369],[111.295901,22.03139],[111.304638,22.029948],[111.305941,22.011846],[111.287624,22.000043],[111.283333,21.986797],[111.287624,21.977984],[111.283716,21.971841],[111.283409,21.952181],[111.294675,21.935885],[111.287241,21.924129],[111.290077,21.907991],[111.310922,21.893988],[111.320119,21.897836],[111.325177,21.886986],[111.340044,21.874424],[111.362499,21.877044],[111.367864,21.862557],[111.374608,21.860525],[111.40327,21.862183],[111.402887,21.854858],[111.417218,21.850154],[111.423503,21.81374],[111.401508,21.798337],[111.386947,21.780258],[111.374301,21.774374],[111.388786,21.756239],[111.383651,21.750247],[111.381275,21.734463],[111.389859,21.727132],[111.40304,21.728095],[111.431243,21.71857],[111.44067,21.69347],[111.428944,21.676984],[111.43155,21.670293],[111.42289,21.661353],[111.421587,21.648772],[111.416299,21.646898],[111.415456,21.632762],[111.42059,21.617394],[111.427718,21.614234],[111.416452,21.598061],[111.423809,21.591794],[111.418291,21.578671],[111.42151,21.573743],[111.430783,21.57985],[111.428944,21.570315],[111.439367,21.575725],[111.44703,21.570904],[111.458909,21.534151],[111.459139,21.524935],[111.452395,21.515182],[111.47577,21.50023],[111.495006,21.50157],[111.515851,21.514753],[111.539839,21.518987],[111.541755,21.506393],[111.547886,21.502642],[111.560684,21.505429],[111.579384,21.518237],[111.605977,21.529383],[111.615863,21.529597],[111.645139,21.519308],[111.650427,21.512288],[111.662382,21.525739],[111.677403,21.529758],[111.676407,21.565815],[111.68453,21.581403],[111.693727,21.590348],[111.736644,21.610004],[111.758716,21.613913],[111.794429,21.611289],[111.810293,21.604541],[111.830985,21.582849],[111.813665,21.57144],[111.80738,21.559065],[111.812822,21.555047],[111.829375,21.557994],[111.846772,21.567369],[111.854972,21.567261],[111.862789,21.556976],[111.868691,21.559172],[111.88762,21.578671],[111.921494,21.599507],[111.941726,21.606844],[111.947244,21.600417],[111.972458,21.603256],[111.999204,21.61793],[112.006178,21.614663],[112.024955,21.629764],[112.022196,21.645988],[112.001274,21.655946],[111.972228,21.653644],[111.954525,21.667723],[111.95031,21.675592],[111.949697,21.690848],[111.955981,21.710543],[112.001197,21.74281],[112.03645,21.761428],[112.063197,21.771325],[112.136539,21.793844],[112.171792,21.798444],[112.183901,21.796358],[112.192331,21.789351],[112.196163,21.779403],[112.192101,21.757684],[112.197006,21.736657],[112.208808,21.737085],[112.220381,21.726918],[112.231646,21.729594],[112.241073,21.71552],[112.240076,21.701606],[112.260232,21.698073],[112.263068,21.69347],[112.274103,21.699732],[112.292573,21.699465],[112.307824,21.704174]]],[[[112.181065,21.545885],[112.186813,21.543314],[112.204823,21.548189],[112.190952,21.5506],[112.189879,21.558315],[112.180836,21.554779],[112.181065,21.545885]]],[[[112.140601,21.601917],[112.150104,21.601863],[112.144816,21.613913],[112.140601,21.601917]]],[[[112.118146,21.633458],[112.129258,21.640526],[112.118146,21.642829],[112.118146,21.633458]]]]}},{type:"Feature",properties:{adcode:441800,name:"清远市",center:[113.051227,23.685022],centroid:[112.879397,24.313361],childrenNum:8,level:"city",parent:{adcode:44e4},subFeatureIndex:15,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[112.994804,24.927347],[112.984457,24.921183],[112.966831,24.919302],[112.959244,24.923481],[112.94177,24.915907],[112.937402,24.920452],[112.924527,24.918884],[112.904371,24.92181],[112.879311,24.907809],[112.873486,24.89668],[112.842065,24.897151],[112.804436,24.890724],[112.788342,24.892396],[112.780755,24.897307],[112.786732,24.912406],[112.782211,24.922698],[112.784433,24.938577],[112.773474,24.949963],[112.746344,24.956492],[112.742206,24.977484],[112.745348,24.981348],[112.741823,24.998577],[112.725882,25.010062],[112.715153,25.026035],[112.719215,25.048268],[112.715613,25.078375],[112.697296,25.089957],[112.695227,25.095538],[112.679746,25.109935],[112.668864,25.113951],[112.667868,25.12214],[112.659821,25.132779],[112.648018,25.133613],[112.628169,25.140601],[112.624797,25.134082],[112.612765,25.133196],[112.596518,25.12626],[112.562644,25.124487],[112.537047,25.134239],[112.507695,25.136742],[112.502637,25.144616],[112.491065,25.144459],[112.4775,25.151394],[112.458264,25.152072],[112.452669,25.159841],[112.454815,25.1735],[112.443013,25.185594],[112.430674,25.175273],[112.426153,25.156244],[112.413354,25.141331],[112.399483,25.140653],[112.387374,25.152177],[112.393122,25.160154],[112.373732,25.177567],[112.364842,25.191693],[112.350894,25.187054],[112.329896,25.173813],[112.313648,25.173917],[112.302536,25.157182],[112.288435,25.15859],[112.281997,25.164742],[112.256094,25.159372],[112.255557,25.171571],[112.246591,25.184969],[112.201758,25.185803],[112.18735,25.183092],[112.193174,25.172197],[112.183288,25.14884],[112.183901,25.14107],[112.174168,25.129493],[112.17708,25.107379],[112.165815,25.085001],[112.162749,25.068462],[112.152173,25.055939],[112.153553,25.045502],[112.148878,25.035429],[112.155698,25.026974],[112.134623,24.99581],[112.122744,24.990485],[112.120062,24.963698],[112.142134,24.937951],[112.15248,24.932414],[112.175164,24.927504],[112.16819,24.890828],[112.165661,24.867208],[112.171103,24.862713],[112.161063,24.844211],[112.149491,24.836945],[112.141444,24.844524],[112.124047,24.841074],[112.112628,24.831508],[112.097224,24.826385],[112.096458,24.817235],[112.083812,24.804844],[112.059212,24.79951],[112.05423,24.788895],[112.033845,24.771165],[112.030473,24.745064],[112.013919,24.731514],[111.999128,24.733135],[111.985026,24.727485],[111.972688,24.72738],[111.961345,24.721206],[111.952839,24.69635],[111.939657,24.686616],[111.944179,24.676409],[111.939197,24.6695],[111.947551,24.665364],[111.953528,24.647199],[111.934292,24.641911],[111.927472,24.629397],[111.938431,24.609498],[111.937128,24.595828],[111.948547,24.592686],[111.963338,24.5809],[111.971998,24.578648],[111.978282,24.56136],[111.989855,24.550776],[111.997825,24.551196],[112.007405,24.534533],[112.005259,24.512051],[112.009704,24.502878],[111.996369,24.494911],[111.987096,24.480862],[111.986636,24.464505],[111.996522,24.459261],[111.999741,24.450452],[112.023192,24.441538],[112.042121,24.410279],[112.043578,24.392706],[112.057679,24.387093],[112.061817,24.368152],[112.059442,24.339709],[112.050552,24.332572],[112.045187,24.320762],[112.033231,24.31336],[112.026104,24.295091],[112.015911,24.293989],[112.003113,24.28165],[111.990391,24.279812],[111.988015,24.259018],[111.975983,24.255079],[111.969009,24.263691],[111.956057,24.26033],[111.952685,24.25156],[111.94073,24.245153],[111.942646,24.234858],[111.961575,24.234753],[111.978052,24.222671],[111.986866,24.205124],[111.994223,24.19861],[111.997672,24.186945],[112.006868,24.19015],[112.024955,24.188364],[112.041815,24.191516],[112.04603,24.197611],[112.041355,24.216682],[112.050398,24.224247],[112.053157,24.24594],[112.058369,24.247043],[112.067872,24.260698],[112.086878,24.256917],[112.106114,24.228555],[112.11508,24.229027],[112.122591,24.222986],[112.129258,24.207489],[112.144433,24.201394],[112.148341,24.190098],[112.157538,24.185841],[112.166658,24.187943],[112.169876,24.197454],[112.196929,24.204074],[112.215093,24.223459],[112.218311,24.244365],[112.235708,24.246203],[112.249503,24.243367],[112.256324,24.2597],[112.255557,24.279182],[112.261995,24.290576],[112.256937,24.320762],[112.258316,24.324279],[112.27441,24.320604],[112.293723,24.327585],[112.293646,24.344538],[112.284679,24.377334],[112.288971,24.388666],[112.307211,24.378593],[112.319703,24.380167],[112.342004,24.353512],[112.373732,24.347949],[112.384845,24.328373],[112.393888,24.326641],[112.401858,24.310211],[112.411285,24.307061],[112.423777,24.284958],[112.444239,24.287741],[112.449987,24.28102],[112.458723,24.238377],[112.453052,24.20938],[112.439564,24.19057],[112.439028,24.180324],[112.43144,24.173387],[112.434813,24.164453],[112.429525,24.160564],[112.434659,24.147529],[112.428452,24.139802],[112.429831,24.127081],[112.446921,24.121929],[112.455351,24.12482],[112.452516,24.115725],[112.463782,24.120772],[112.486696,24.114148],[112.49367,24.095377],[112.489532,24.086122],[112.500798,24.08081],[112.497885,24.064401],[112.507542,24.051778],[112.507618,24.043309],[112.518501,24.016635],[112.506469,24.007269],[112.511297,24.001376],[112.516125,23.977009],[112.535668,23.970746],[112.564253,23.977325],[112.567012,23.964903],[112.575136,23.967325],[112.588318,23.956692],[112.608167,23.952586],[112.622651,23.943636],[112.645106,23.941004],[112.662886,23.949585],[112.675838,23.939846],[112.682582,23.939056],[112.683272,23.92405],[112.693464,23.912729],[112.693235,23.904251],[112.685494,23.895351],[112.692162,23.88961],[112.672159,23.864801],[112.679516,23.857216],[112.672159,23.851473],[112.675225,23.831241],[112.661353,23.821651],[112.655376,23.812587],[112.675455,23.815169],[112.689479,23.806369],[112.70588,23.806369],[112.700668,23.793192],[112.704194,23.790557],[112.69768,23.765677],[112.706033,23.752813],[112.730021,23.758507],[112.743126,23.752444],[112.725882,23.725816],[112.711321,23.712104],[112.713467,23.706883],[112.724579,23.710258],[112.72159,23.698549],[112.715076,23.691639],[112.728718,23.678504],[112.744965,23.686523],[112.739907,23.672596],[112.744965,23.668481],[112.751249,23.675286],[112.75922,23.672332],[112.768646,23.677397],[112.780908,23.671224],[112.784663,23.655291],[112.778302,23.641255],[112.752092,23.628643],[112.750483,23.610065],[112.756844,23.603309],[112.772171,23.603309],[112.781828,23.588529],[112.799761,23.588951],[112.800144,23.571846],[112.7934,23.571688],[112.796772,23.551835],[112.802137,23.545551],[112.830493,23.545762],[112.827197,23.567042],[112.848502,23.566936],[112.86291,23.57343],[112.871647,23.570896],[112.893412,23.55268],[112.900309,23.566725],[112.91533,23.55231],[112.911192,23.541643],[112.893259,23.526434],[112.887741,23.517402],[112.903298,23.488613],[112.928435,23.483488],[112.925753,23.472393],[112.933493,23.47065],[112.930198,23.463094],[112.94223,23.460188],[112.957634,23.447558],[112.965835,23.452155],[112.966294,23.460663],[112.975184,23.463622],[112.993347,23.466845],[113.00469,23.462037],[113.018025,23.469065],[113.042932,23.474137],[113.055884,23.471971],[113.063854,23.482537],[113.075503,23.484228],[113.083933,23.494266],[113.108994,23.497964],[113.128689,23.512596],[113.15352,23.502823],[113.172066,23.512384],[113.192069,23.514761],[113.191149,23.523212],[113.211918,23.543914],[113.210155,23.552997],[113.200805,23.561815],[113.202262,23.576492],[113.214524,23.584253],[113.227015,23.585731],[113.227859,23.594441],[113.245868,23.588265],[113.24035,23.606212],[113.248474,23.601567],[113.2766,23.615977],[113.280049,23.608957],[113.290548,23.617085],[113.299438,23.637456],[113.289245,23.644368],[113.31101,23.643313],[113.32833,23.645371],[113.327947,23.655502],[113.334845,23.656399],[113.338447,23.665737],[113.347413,23.667215],[113.366343,23.710311],[113.372397,23.709731],[113.378375,23.731511],[113.397841,23.730562],[113.404278,23.723495],[113.438459,23.727134],[113.443823,23.715901],[113.464286,23.70799],[113.468731,23.691006],[113.481069,23.684043],[113.510268,23.682461],[113.527052,23.686153],[113.545445,23.696387],[113.546901,23.702558],[113.55878,23.700712],[113.568053,23.690215],[113.568053,23.679454],[113.587289,23.675234],[113.587212,23.669008],[113.597252,23.664946],[113.615721,23.680192],[113.61166,23.686206],[113.623845,23.694699],[113.622619,23.699446],[113.638176,23.704562],[113.628137,23.711682],[113.631662,23.727872],[113.63649,23.731985],[113.630742,23.738946],[113.636414,23.750229],[113.626144,23.767416],[113.615185,23.779804],[113.633731,23.797198],[113.640245,23.814274],[113.651664,23.820123],[113.666379,23.813694],[113.684312,23.812956],[113.687378,23.825709],[113.706384,23.815275],[113.720178,23.825129],[113.714814,23.834982],[113.718033,23.843887],[113.709756,23.856267],[113.713511,23.862484],[113.733667,23.855003],[113.742327,23.859165],[113.749071,23.854371],[113.758191,23.857479],[113.767081,23.871439],[113.775358,23.877918],[113.781105,23.896299],[113.791605,23.903882],[113.800265,23.902566],[113.799345,23.923524],[113.792294,23.931527],[113.775358,23.938424],[113.774285,23.952691],[113.766468,23.96085],[113.744703,23.95906],[113.739415,23.969588],[113.730448,23.974641],[113.732364,23.981114],[113.718646,23.993008],[113.728149,23.997166],[113.747078,24.023212],[113.753592,24.026842],[113.763555,24.02137],[113.772982,24.026947],[113.784171,24.022317],[113.790608,24.025106],[113.790379,24.034471],[113.803637,24.053566],[113.813063,24.052567],[113.83115,24.063507],[113.828467,24.069608],[113.837434,24.072764],[113.845711,24.086806],[113.836821,24.088331],[113.836668,24.098637],[113.842415,24.104053],[113.836974,24.111729],[113.839273,24.119931],[113.850999,24.124978],[113.853911,24.132811],[113.86464,24.133021],[113.870465,24.141169],[113.862265,24.147319],[113.857053,24.16151],[113.880045,24.174123],[113.901043,24.188521],[113.909167,24.184318],[113.930242,24.188416],[113.930319,24.19593],[113.922119,24.19304],[113.921199,24.200974],[113.896522,24.210326],[113.890391,24.229763],[113.890774,24.241476],[113.88311,24.245415],[113.870541,24.242264],[113.872074,24.253976],[113.862878,24.259018],[113.855827,24.252926],[113.84004,24.265109],[113.850003,24.274561],[113.844715,24.279707],[113.844791,24.304541],[113.850462,24.318872],[113.8405,24.336246],[113.831303,24.33656],[113.817048,24.34459],[113.818581,24.3522],[113.800955,24.377334],[113.805553,24.384364],[113.803867,24.401781],[113.77827,24.410909],[113.765318,24.417727],[113.762866,24.43299],[113.753439,24.437185],[113.726999,24.437028],[113.723934,24.43493],[113.722248,24.414633],[113.709909,24.412377],[113.686381,24.437709],[113.683163,24.454175],[113.666072,24.467493],[113.656799,24.468227],[113.643234,24.477717],[113.63718,24.486471],[113.625761,24.491923],[113.609667,24.489983],[113.596792,24.500886],[113.599628,24.512994],[113.589665,24.515248],[113.579548,24.50052],[113.57564,24.509115],[113.552572,24.511055],[113.540463,24.506233],[113.531343,24.489826],[113.530271,24.479551],[113.518852,24.469852],[113.507816,24.484007],[113.499309,24.473785],[113.489269,24.471006],[113.478847,24.477769],[113.467428,24.461726],[113.440988,24.453703],[113.419223,24.459943],[113.412172,24.472526],[113.415544,24.485266],[113.379754,24.485213],[113.37416,24.49402],[113.362051,24.47908],[113.350632,24.472159],[113.331243,24.472579],[113.31944,24.465291],[113.294993,24.457164],[113.272155,24.466969],[113.270392,24.47672],[113.261809,24.482225],[113.252766,24.497794],[113.25108,24.510216],[113.244642,24.502144],[113.235829,24.505866],[113.230158,24.498475],[113.216516,24.495697],[113.20617,24.476458],[113.19705,24.474676],[113.186781,24.480705],[113.174979,24.475882],[113.16195,24.479027],[113.153367,24.467703],[113.151451,24.478713],[113.13712,24.482907],[113.114128,24.502983],[113.096808,24.496431],[113.087305,24.471583],[113.063701,24.468804],[113.047377,24.475515],[113.025612,24.493863],[113.02063,24.513675],[112.999708,24.528716],[112.991048,24.544751],[112.981928,24.542917],[112.96936,24.568118],[112.96139,24.570266],[112.964378,24.586138],[112.950507,24.59499],[112.926366,24.596457],[112.91717,24.60049],[112.902072,24.595671],[112.8987,24.600542],[112.887971,24.595304],[112.884599,24.616358],[112.89778,24.632277],[112.896401,24.650602],[112.914487,24.662695],[112.900616,24.713776],[112.930351,24.718695],[112.938781,24.73821],[112.933647,24.755369],[112.940161,24.757514],[112.954109,24.782201],[112.95112,24.788476],[112.960087,24.800974],[112.95158,24.815771],[112.95978,24.824241],[112.979246,24.832553],[112.998942,24.850483],[113.014729,24.851528],[113.019557,24.855971],[113.022163,24.870866],[113.010974,24.882781],[113.009901,24.896889],[113.004766,24.900129],[113.00515,24.914078],[112.994804,24.927347]]]]}},{type:"Feature",properties:{adcode:441900,name:"东莞市",center:[113.746262,23.046237],centroid:[113.879966,22.931879],childrenNum:0,level:"city",parent:{adcode:44e4},subFeatureIndex:16,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[114.229205,22.81253],[114.23388,22.816937],[114.235643,22.839872],[114.233114,22.842314],[114.2348,22.862962],[114.231198,22.880318],[114.236946,22.88589],[114.24484,22.88053],[114.251737,22.884351],[114.26032,22.899634],[114.259171,22.906054],[114.249208,22.905152],[114.245299,22.911732],[114.229742,22.914703],[114.213035,22.928444],[114.211349,22.953959],[114.223841,22.963719],[114.222385,22.980743],[114.212498,22.987796],[114.20039,22.986682],[114.182303,22.995432],[114.178701,22.989174],[114.158546,22.978303],[114.15571,22.983129],[114.13816,22.986417],[114.132182,22.994424],[114.124442,22.994],[114.139233,23.023479],[114.151035,23.019079],[114.150269,23.024698],[114.120993,23.048022],[114.102217,23.058623],[114.091564,23.077331],[114.088959,23.094182],[114.065891,23.101441],[114.049797,23.097467],[114.029871,23.084379],[114.010252,23.083425],[113.993315,23.092645],[113.986418,23.10197],[113.970554,23.113308],[113.962737,23.114209],[113.938366,23.107534],[113.905565,23.11511],[113.894836,23.111295],[113.876596,23.124275],[113.863261,23.114633],[113.848163,23.116911],[113.844715,23.125599],[113.841113,23.116169],[113.814673,23.127771],[113.791298,23.127665],[113.777427,23.131108],[113.754052,23.129572],[113.738572,23.141331],[113.71696,23.138895],[113.687837,23.119772],[113.670671,23.116434],[113.662011,23.111454],[113.661244,23.117971],[113.651281,23.119295],[113.642698,23.113467],[113.640245,23.103878],[113.610433,23.103772],[113.60139,23.0954],[113.586446,23.08777],[113.556327,23.081252],[113.54897,23.076006],[113.543759,23.06228],[113.531957,23.050938],[113.522913,23.037262],[113.52299,23.011338],[113.529198,22.982599],[113.541766,22.959369],[113.550503,22.936189],[113.564298,22.906903],[113.575104,22.888331],[113.571195,22.853143],[113.58407,22.831325],[113.612119,22.802281],[113.648139,22.761759],[113.678181,22.726113],[113.697724,22.73743],[113.723934,22.73828],[113.733743,22.736367],[113.746005,22.72606],[113.751447,22.715381],[113.762406,22.736899],[113.790838,22.75342],[113.791835,22.767655],[113.801874,22.777109],[113.802257,22.784863],[113.811071,22.782473],[113.813446,22.790439],[113.824942,22.792935],[113.837204,22.800901],[113.838737,22.819591],[113.834675,22.822193],[113.841496,22.833979],[113.851305,22.837483],[113.857053,22.832599],[113.872611,22.837271],[113.877669,22.85447],[113.883263,22.850542],[113.887325,22.858504],[113.89951,22.855478],[113.893916,22.846189],[113.904875,22.840137],[113.910929,22.829997],[113.937829,22.832705],[113.954613,22.821025],[113.954996,22.815078],[113.972393,22.812476],[113.978371,22.806529],[113.974999,22.798458],[113.984578,22.803662],[113.990863,22.800211],[113.995308,22.771267],[114.002971,22.763459],[114.017916,22.760219],[114.035236,22.766752],[114.039911,22.764309],[114.049797,22.771161],[114.049414,22.756448],[114.064588,22.755916],[114.074781,22.740883],[114.08436,22.750551],[114.098462,22.747205],[114.107198,22.722979],[114.117621,22.723244],[114.121989,22.716231],[114.144674,22.714159],[114.145057,22.701193],[114.151801,22.690139],[114.167436,22.680679],[114.16391,22.665372],[114.15548,22.668933],[114.172494,22.654368],[114.187515,22.666382],[114.187515,22.673557],[114.195332,22.680095],[114.19947,22.702043],[114.196711,22.710227],[114.208053,22.71469],[114.208513,22.729248],[114.215641,22.73557],[114.203149,22.75512],[114.201079,22.764787],[114.182073,22.765265],[114.187974,22.770364],[114.180847,22.775728],[114.189967,22.785713],[114.20721,22.789802],[114.215641,22.807751],[114.229205,22.81253]]]]}},{type:"Feature",properties:{adcode:442e3,name:"中山市",center:[113.382391,22.521113],centroid:[113.398784,22.517323],childrenNum:0,level:"city",parent:{adcode:44e4},subFeatureIndex:17,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[113.568743,22.411912],[113.573724,22.411699],[113.610127,22.445723],[113.631509,22.47596],[113.668448,22.480431],[113.692052,22.515129],[113.651588,22.515715],[113.639326,22.548276],[113.62078,22.579554],[113.599628,22.594393],[113.589971,22.59519],[113.578552,22.604603],[113.561615,22.607528],[113.536861,22.647511],[113.533106,22.656388],[113.540693,22.666222],[113.523373,22.679297],[113.491875,22.699811],[113.464822,22.72096],[113.467964,22.728504],[113.447808,22.735836],[113.42612,22.738014],[113.412172,22.742849],[113.365116,22.772595],[113.358756,22.764893],[113.342432,22.758254],[113.329327,22.749011],[113.329097,22.741255],[113.301431,22.736261],[113.284877,22.738864],[113.270546,22.726485],[113.260889,22.730311],[113.254069,22.74083],[113.243033,22.745345],[113.236289,22.740777],[113.222264,22.712246],[113.204254,22.697314],[113.199273,22.682539],[113.201035,22.675949],[113.189386,22.673876],[113.17199,22.680679],[113.161414,22.673717],[113.160801,22.665425],[113.17061,22.651392],[113.163176,22.651392],[113.157199,22.63204],[113.157045,22.614228],[113.176358,22.590032],[113.185095,22.574289],[113.188697,22.552798],[113.187087,22.539924],[113.215367,22.513107],[113.2251,22.497142],[113.2251,22.497142],[113.240121,22.476172],[113.245179,22.457276],[113.256444,22.43779],[113.256368,22.410794],[113.262652,22.392048],[113.273841,22.384751],[113.307178,22.346504],[113.32036,22.329561],[113.32128,22.312189],[113.336607,22.280105],[113.345114,22.258569],[113.352395,22.249133],[113.385272,22.230365],[113.390943,22.231858],[113.415774,22.202902],[113.430565,22.201302],[113.458384,22.213781],[113.462676,22.218847],[113.486357,22.227113],[113.478847,22.23831],[113.512797,22.249986],[113.514407,22.261555],[113.50475,22.266992],[113.496397,22.282237],[113.480456,22.303876],[113.470493,22.310377],[113.482985,22.318797],[113.493331,22.317998],[113.504137,22.324286],[113.494787,22.339684],[113.490342,22.34075],[113.493255,22.354069],[113.489193,22.365842],[113.491339,22.376922],[113.48697,22.390184],[113.495247,22.395403],[113.49586,22.407546],[113.508889,22.413403],[113.51433,22.408717],[113.537168,22.416332],[113.568743,22.411912]]]]}},{type:"Feature",properties:{adcode:445100,name:"潮州市",center:[116.632301,23.661701],centroid:[116.790217,23.783155],childrenNum:3,level:"city",parent:{adcode:44e4},subFeatureIndex:18,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[116.91704,23.531662],[116.930528,23.528071],[116.940951,23.514656],[116.963405,23.506997],[117.010231,23.502665],[117.018125,23.505359],[117.031766,23.531293],[117.044795,23.539689],[117.069548,23.542277],[117.085566,23.536943],[117.09959,23.537577],[117.113002,23.542383],[117.192935,23.561656],[117.192552,23.629593],[117.185961,23.636242],[117.173699,23.634659],[117.159368,23.640094],[117.147489,23.653813],[117.132928,23.651439],[117.124881,23.646057],[117.115454,23.665263],[117.087941,23.669325],[117.07407,23.690954],[117.066636,23.688791],[117.053225,23.698391],[117.049929,23.721649],[117.051079,23.736731],[117.047783,23.758665],[117.042572,23.763779],[117.039353,23.778434],[117.031766,23.791348],[117.020041,23.800729],[117.018431,23.812218],[117.026785,23.819912],[117.022416,23.838776],[117.01207,23.855266],[116.989922,23.8628],[116.981568,23.855582],[116.962026,23.861377],[116.960033,23.868173],[116.975514,23.872281],[116.979269,23.884449],[116.972985,23.894824],[116.958807,23.90067],[116.959267,23.91452],[116.954745,23.920417],[116.973292,23.927052],[116.980189,23.941056],[116.982641,23.959324],[116.973138,23.97422],[116.975361,23.99064],[116.981339,23.996692],[116.96992,24.007427],[116.96011,24.002112],[116.954439,24.005954],[116.955129,24.020266],[116.939801,24.03305],[116.95007,24.040836],[116.952446,24.054723],[116.936965,24.054566],[116.929761,24.065453],[116.929455,24.091381],[116.926619,24.098585],[116.934896,24.126923],[116.947082,24.134914],[116.964785,24.153364],[116.972908,24.153521],[116.97881,24.162088],[116.990382,24.168342],[116.998659,24.17901],[116.991148,24.189887],[116.976357,24.199818],[116.971299,24.198084],[116.956125,24.216998],[116.94325,24.216262],[116.933363,24.222251],[116.917116,24.232809],[116.896577,24.218784],[116.904548,24.202813],[116.900333,24.196771],[116.884315,24.193671],[116.883856,24.181638],[116.878568,24.167817],[116.867072,24.163717],[116.859485,24.177276],[116.847836,24.182689],[116.836034,24.173387],[116.831819,24.161878],[116.809594,24.169183],[116.796872,24.157043],[116.789745,24.157095],[116.780241,24.147319],[116.76637,24.124032],[116.766447,24.107523],[116.772195,24.09401],[116.76752,24.074657],[116.75748,24.082125],[116.744069,24.061982],[116.734642,24.053619],[116.71257,24.062455],[116.700155,24.050094],[116.708662,24.033471],[116.708815,24.019161],[116.697166,24.002586],[116.690422,24.005375],[116.69548,23.991903],[116.68797,23.981062],[116.684751,23.989588],[116.657775,23.988588],[116.646969,23.994429],[116.641144,23.989588],[116.637312,23.968851],[116.628652,23.973693],[116.610796,23.968483],[116.60842,23.961166],[116.62574,23.950006],[116.623518,23.947269],[116.604205,23.950322],[116.608343,23.94153],[116.604205,23.929474],[116.604741,23.910781],[116.590487,23.900933],[116.575083,23.909149],[116.557992,23.907253],[116.558682,23.899037],[116.536304,23.886608],[116.535384,23.88171],[116.522279,23.882131],[116.514386,23.866698],[116.496989,23.869226],[116.498981,23.85848],[116.516608,23.845994],[116.525881,23.8324],[116.518371,23.823443],[116.509864,23.827764],[116.513389,23.815854],[116.510324,23.808793],[116.516761,23.802679],[116.505955,23.793614],[116.504729,23.763673],[116.496146,23.752496],[116.485187,23.751547],[116.464954,23.755238],[116.451849,23.76905],[116.439357,23.773584],[116.436215,23.780331],[116.416903,23.777854],[116.402955,23.769261],[116.401958,23.76225],[116.380883,23.737364],[116.373296,23.740264],[116.368468,23.73304],[116.37161,23.717431],[116.377741,23.712209],[116.385481,23.714688],[116.404104,23.694382],[116.43154,23.690637],[116.434376,23.67977],[116.444722,23.6698],[116.448477,23.677766],[116.470319,23.669589],[116.474534,23.655924],[116.48488,23.658879],[116.514156,23.655924],[116.527184,23.63429],[116.526111,23.626532],[116.533545,23.617296],[116.533698,23.606265],[116.527261,23.603309],[116.526264,23.590165],[116.533775,23.590113],[116.533315,23.581508],[116.542282,23.573694],[116.551555,23.579502],[116.567036,23.569207],[116.564966,23.557063],[116.570638,23.548614],[116.553624,23.541591],[116.554007,23.534356],[116.544811,23.528546],[116.543661,23.505623],[116.554774,23.495586],[116.559908,23.482432],[116.580754,23.473873],[116.586578,23.475563],[116.608343,23.464785],[116.619762,23.466423],[116.633557,23.45057],[116.630108,23.429378],[116.650264,23.426312],[116.654403,23.431069],[116.668504,23.428638],[116.681915,23.438627],[116.68659,23.429483],[116.702608,23.438204],[116.698469,23.446977],[116.702378,23.456172],[116.7128,23.459236],[116.717935,23.471072],[116.71326,23.493103],[116.70483,23.517561],[116.70621,23.542541],[116.719391,23.552522],[116.718701,23.563135],[116.702991,23.574433],[116.714946,23.584728],[116.71303,23.597925],[116.738934,23.60162],[116.747211,23.59233],[116.755794,23.575648],[116.761389,23.573958],[116.772578,23.584147],[116.785223,23.579554],[116.794496,23.589532],[116.791737,23.59935],[116.795799,23.610488],[116.805379,23.606793],[116.815035,23.612493],[116.827527,23.611807],[116.831895,23.622152],[116.822545,23.627429],[116.821319,23.635609],[116.830976,23.645793],[116.83818,23.644632],[116.863087,23.632601],[116.86278,23.623471],[116.874812,23.616082],[116.891289,23.622785],[116.900639,23.61946],[116.900563,23.611965],[116.911062,23.602201],[116.909146,23.58193],[116.918342,23.561603],[116.91704,23.531662]]]]}},{type:"Feature",properties:{adcode:445200,name:"揭阳市",center:[116.355733,23.543778],centroid:[116.124317,23.334057],childrenNum:5,level:"city",parent:{adcode:44e4},subFeatureIndex:19,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[116.552551,23.105891],[116.520287,23.094553],[116.509787,23.100646],[116.478826,23.104249],[116.453919,23.091161],[116.445488,23.093281],[116.446561,23.085863],[116.437212,23.080246],[116.426865,23.063393],[116.405484,23.053959],[116.395904,23.044524],[116.3805,23.039807],[116.370077,23.046856],[116.374982,23.050408],[116.368314,23.05751],[116.346703,23.05857],[116.340648,23.086498],[116.327543,23.09646],[116.312829,23.102712],[116.302866,23.096036],[116.29137,23.099162],[116.29183,23.110501],[116.261558,23.12295],[116.244545,23.140431],[116.254891,23.152507],[116.252362,23.176286],[116.262325,23.175174],[116.252745,23.191536],[116.26447,23.196724],[116.269222,23.204984],[116.261328,23.205301],[116.259719,23.216842],[116.26677,23.227906],[116.279415,23.226],[116.294129,23.239815],[116.298727,23.263526],[116.305548,23.272839],[116.302406,23.279348],[116.312752,23.286649],[116.308997,23.296067],[116.323558,23.302839],[116.328846,23.299559],[116.330839,23.316487],[116.319343,23.325903],[116.319573,23.332303],[116.329689,23.336376],[116.348848,23.335794],[116.354903,23.347324],[116.349768,23.358112],[116.350994,23.386559],[116.34517,23.399565],[116.34563,23.408182],[116.331758,23.424409],[116.322868,23.421767],[116.316891,23.442273],[116.319649,23.449196],[116.332371,23.443647],[116.350764,23.449619],[116.355363,23.472288],[116.377051,23.500658],[116.401115,23.500394],[116.408856,23.512596],[116.41491,23.510271],[116.415676,23.479737],[116.426482,23.468642],[116.435832,23.473344],[116.448707,23.488349],[116.465797,23.497647],[116.482581,23.500552],[116.492314,23.492839],[116.491164,23.478734],[116.482658,23.465472],[116.472005,23.455802],[116.465721,23.442485],[116.469553,23.437622],[116.512316,23.439472],[116.523429,23.437517],[116.544887,23.424356],[116.553088,23.412305],[116.561978,23.38693],[116.568339,23.378258],[116.569105,23.388093],[116.577535,23.40242],[116.575313,23.40797],[116.58198,23.423194],[116.591177,23.426524],[116.58949,23.443383],[116.579834,23.447981],[116.580294,23.461139],[116.588111,23.461984],[116.58995,23.453265],[116.605431,23.443013],[116.614015,23.433289],[116.630108,23.429378],[116.633557,23.45057],[116.619762,23.466423],[116.608343,23.464785],[116.586578,23.475563],[116.580754,23.473873],[116.559908,23.482432],[116.554774,23.495586],[116.543661,23.505623],[116.544811,23.528546],[116.554007,23.534356],[116.553624,23.541591],[116.570638,23.548614],[116.564966,23.557063],[116.567036,23.569207],[116.551555,23.579502],[116.542282,23.573694],[116.533315,23.581508],[116.533775,23.590113],[116.526264,23.590165],[116.527261,23.603309],[116.533698,23.606265],[116.533545,23.617296],[116.526111,23.626532],[116.527184,23.63429],[116.514156,23.655924],[116.48488,23.658879],[116.474534,23.655924],[116.470319,23.669589],[116.448477,23.677766],[116.444722,23.6698],[116.434376,23.67977],[116.43154,23.690637],[116.404104,23.694382],[116.385481,23.714688],[116.377741,23.712209],[116.37161,23.717431],[116.368468,23.73304],[116.35475,23.743058],[116.350151,23.751969],[116.338732,23.758823],[116.335437,23.773953],[116.320033,23.775534],[116.306621,23.769841],[116.295892,23.759139],[116.288458,23.763199],[116.271215,23.757294],[116.271598,23.746433],[116.233126,23.718169],[116.236957,23.727608],[116.227684,23.728821],[116.214119,23.71896],[116.214349,23.702558],[116.19588,23.685784],[116.181089,23.68552],[116.183005,23.674442],[116.17764,23.657296],[116.187373,23.652336],[116.191358,23.641361],[116.179939,23.637139],[116.17787,23.628221],[116.165455,23.616082],[116.150664,23.616241],[116.133497,23.62421],[116.117326,23.620885],[116.106137,23.628379],[116.09878,23.622574],[116.087208,23.626426],[116.074256,23.636295],[116.072417,23.642785],[116.056476,23.646374],[116.055786,23.639514],[116.039386,23.648168],[116.021223,23.644685],[116.01126,23.654236],[116.017467,23.661939],[116.006585,23.675497],[115.985816,23.676974],[115.972328,23.664102],[115.95861,23.655871],[115.954471,23.64516],[115.923663,23.628168],[115.914696,23.630859],[115.897836,23.620093],[115.896227,23.625846],[115.876148,23.633973],[115.863656,23.646057],[115.86036,23.65756],[115.83461,23.660884],[115.81844,23.644632],[115.800047,23.615502],[115.808247,23.606687],[115.807787,23.59877],[115.798131,23.597133],[115.812309,23.578974],[115.802116,23.557168],[115.80794,23.554158],[115.801349,23.543122],[115.788398,23.539267],[115.793302,23.525694],[115.786175,23.517455],[115.776059,23.524638],[115.759735,23.522895],[115.751612,23.52749],[115.736437,23.525958],[115.733755,23.51624],[115.723179,23.514656],[115.713829,23.519092],[115.70195,23.534092],[115.69467,23.550092],[115.687389,23.557538],[115.669686,23.548403],[115.659493,23.532613],[115.639797,23.528758],[115.642096,23.513863],[115.637115,23.514972],[115.622094,23.507102],[115.623167,23.489934],[115.616116,23.475035],[115.606537,23.471865],[115.61443,23.469751],[115.625236,23.45168],[115.646235,23.439684],[115.648304,23.430329],[115.657884,23.420445],[115.682868,23.407759],[115.673058,23.395071],[115.671602,23.38344],[115.676813,23.354992],[115.694057,23.354675],[115.703023,23.368265],[115.725938,23.369375],[115.739886,23.379263],[115.777668,23.383651],[115.787401,23.368952],[115.811236,23.346689],[115.819666,23.335741],[115.812845,23.326696],[115.802039,23.324422],[115.797288,23.309134],[115.797671,23.286596],[115.824571,23.272416],[115.831621,23.258128],[115.810929,23.24876],[115.797288,23.249184],[115.768089,23.24442],[115.758126,23.244949],[115.749236,23.236375],[115.750079,23.225683],[115.757743,23.215942],[115.752148,23.193601],[115.73866,23.211125],[115.730613,23.199107],[115.733525,23.192806],[115.725631,23.183805],[115.752991,23.167813],[115.76349,23.159233],[115.780657,23.15828],[115.791386,23.13953],[115.79951,23.133015],[115.833154,23.122897],[115.832924,23.112196],[115.85147,23.098791],[115.864345,23.117865],[115.883505,23.11956],[115.898832,23.129466],[115.908795,23.125652],[115.916612,23.112302],[115.923126,23.110977],[115.920751,23.100116],[115.939833,23.082206],[115.937688,23.067156],[115.950333,23.06599],[115.951099,23.061273],[115.964741,23.052952],[115.966963,23.04728],[115.955314,23.038322],[115.950716,23.024327],[115.937688,23.030424],[115.923586,23.017594],[115.942209,23.006195],[115.954471,23.021571],[115.959989,23.017435],[115.945505,22.996015],[115.94949,22.990023],[115.941213,22.987053],[115.9488,22.972682],[115.943819,22.956293],[115.958993,22.957036],[115.963515,22.94961],[115.973247,22.969818],[115.977846,22.951838],[115.967116,22.943775],[115.979225,22.938629],[115.983287,22.925897],[116.0026,22.937409],[116.005665,22.945632],[116.017697,22.934067],[116.026894,22.939107],[116.055633,22.920433],[116.080234,22.915764],[116.086595,22.901491],[116.109969,22.891143],[116.124453,22.892523],[116.135106,22.900589],[116.143843,22.890294],[116.156105,22.886208],[116.172505,22.893425],[116.16806,22.913695],[116.181549,22.92611],[116.198256,22.93168],[116.211667,22.926004],[116.223929,22.926852],[116.226918,22.914491],[116.246844,22.921918],[116.269452,22.938364],[116.302789,22.951519],[116.31735,22.952845],[116.334977,22.938736],[116.382646,22.919213],[116.45024,22.936773],[116.473691,22.937728],[116.486949,22.93115],[116.505572,22.930884],[116.515995,22.939001],[116.52956,22.96531],[116.533162,22.984561],[116.540979,22.994583],[116.550405,22.993894],[116.563051,23.000734],[116.561978,23.006991],[116.576002,23.017117],[116.563204,23.025812],[116.557379,23.056238],[116.565809,23.08316],[116.56374,23.092963],[116.552551,23.105891]]]]}},{type:"Feature",properties:{adcode:445300,name:"云浮市",center:[112.044439,22.929801],centroid:[111.798791,22.813664],childrenNum:5,level:"city",parent:{adcode:44e4},subFeatureIndex:20,acroutes:[1e5,44e4]},geometry:{type:"MultiPolygon",coordinates:[[[[112.47658,22.704009],[112.463168,22.711661],[112.448607,22.70842],[112.435809,22.680998],[112.426306,22.670847],[112.411898,22.671219],[112.401475,22.690565],[112.403085,22.700183],[112.410748,22.704488],[112.399023,22.726485],[112.392739,22.744442],[112.392509,22.76978],[112.382622,22.784545],[112.384232,22.792245],[112.374116,22.794369],[112.356336,22.787997],[112.32844,22.786722],[112.315488,22.790015],[112.323841,22.802706],[112.336257,22.806476],[112.319703,22.825378],[112.310353,22.824848],[112.312269,22.850489],[112.298704,22.865138],[112.296022,22.873312],[112.29993,22.89178],[112.305602,22.896132],[112.307364,22.911254],[112.295332,22.915605],[112.285369,22.911254],[112.278319,22.91465],[112.26598,22.906638],[112.257703,22.910564],[112.261075,22.918735],[112.262914,22.939796],[112.257167,22.951625],[112.270885,22.943775],[112.280158,22.949026],[112.283683,22.944518],[112.290197,22.952633],[112.277322,22.970613],[112.285369,22.976235],[112.286595,22.984985],[112.299087,23.010331],[112.286825,23.020033],[112.289814,23.024274],[112.285446,23.042563],[112.295869,23.060849],[112.301233,23.079557],[112.317634,23.080298],[112.32637,23.093599],[112.327137,23.104196],[112.312729,23.115163],[112.311886,23.121255],[112.301233,23.122315],[112.285676,23.129731],[112.265137,23.119507],[112.234712,23.114898],[112.191182,23.074522],[112.165431,23.075052],[112.133473,23.08581],[112.118299,23.083001],[112.099446,23.089943],[112.083736,23.079716],[112.047563,23.072349],[112.035761,23.07272],[112.025951,23.081199],[111.991464,23.087028],[111.982727,23.097308],[111.979049,23.119719],[111.967553,23.129678],[111.959353,23.130843],[111.9218,23.124857],[111.899192,23.125599],[111.884708,23.131267],[111.876737,23.138365],[111.860414,23.141225],[111.836963,23.131585],[111.814048,23.129943],[111.770441,23.13328],[111.753658,23.137994],[111.726988,23.150865],[111.707522,23.150971],[111.692118,23.157909],[111.679089,23.154732],[111.656098,23.158492],[111.649507,23.164741],[111.637781,23.185446],[111.624446,23.189894],[111.594251,23.188518],[111.575322,23.194077],[111.539839,23.212978],[111.533784,23.22113],[111.542598,23.234787],[111.569191,23.243097],[111.576318,23.253682],[111.573866,23.270881],[111.550185,23.298183],[111.532175,23.324634],[111.523898,23.322624],[111.52796,23.310351],[111.519989,23.305484],[111.515774,23.288448],[111.506348,23.282311],[111.49286,23.284586],[111.472551,23.275061],[111.456917,23.281729],[111.453391,23.289559],[111.437834,23.295115],[111.442202,23.301411],[111.421127,23.316276],[111.408712,23.315958],[111.392618,23.325586],[111.375757,23.319926],[111.375068,23.315271],[111.376524,23.304638],[111.353379,23.288977],[111.356598,23.283369],[111.349624,23.272786],[111.351233,23.266013],[111.36112,23.270564],[111.371926,23.264319],[111.365795,23.236904],[111.379206,23.221554],[111.377903,23.215784],[111.388862,23.210225],[111.384264,23.19413],[111.384341,23.167654],[111.392464,23.16956],[111.398672,23.159816],[111.366024,23.144721],[111.3766,23.14202],[111.379973,23.123162],[111.374991,23.111295],[111.374225,23.092539],[111.379513,23.081305],[111.394687,23.06811],[111.402044,23.066202],[111.434539,23.071555],[111.427181,23.060637],[111.434002,23.036202],[111.416069,23.025653],[111.414,23.01611],[111.396986,23.013353],[111.389629,23.005612],[111.40373,22.991242],[111.397216,22.981273],[111.37729,22.973265],[111.375374,22.967856],[111.363572,22.968598],[111.36932,22.951042],[111.364722,22.947594],[111.373995,22.939213],[111.375528,22.926534],[111.370316,22.915446],[111.361963,22.909981],[111.358744,22.889233],[111.35154,22.885147],[111.341577,22.870552],[111.330541,22.866094],[111.319659,22.851232],[111.303641,22.843959],[111.30663,22.839606],[111.287624,22.816087],[111.291609,22.807804],[111.272833,22.798883],[111.272143,22.790652],[111.256893,22.793838],[111.255207,22.787094],[111.241105,22.781305],[111.239036,22.768824],[111.232139,22.758997],[111.218497,22.748108],[111.204626,22.750126],[111.202097,22.740458],[111.176193,22.736261],[111.174737,22.740086],[111.146304,22.73727],[111.120094,22.742424],[111.099249,22.741786],[111.095111,22.733445],[111.085378,22.729673],[111.060547,22.731533],[111.063919,22.719897],[111.083155,22.708739],[111.089669,22.694285],[111.104767,22.694869],[111.108369,22.704328],[111.123543,22.701459],[111.124539,22.695826],[111.136878,22.685941],[111.137108,22.674514],[111.127911,22.666169],[111.136418,22.643789],[111.143162,22.638686],[111.144235,22.625713],[111.161862,22.620236],[111.174737,22.605773],[111.185849,22.60439],[111.196732,22.61024],[111.215662,22.594659],[111.219187,22.58583],[111.249076,22.58365],[111.25352,22.589234],[111.279271,22.592053],[111.303105,22.580724],[111.303641,22.569448],[111.326633,22.557267],[111.322724,22.54966],[111.293909,22.547638],[111.285172,22.523856],[111.277278,22.517843],[111.272067,22.506136],[111.276972,22.491927],[111.293295,22.50603],[111.329852,22.516087],[111.338588,22.522951],[111.350084,22.506988],[111.373688,22.516034],[111.384647,22.509808],[111.403117,22.516087],[111.413387,22.512628],[111.410628,22.492033],[111.403347,22.479526],[111.408788,22.475268],[111.409631,22.457116],[111.421127,22.446948],[111.417065,22.431135],[111.421817,22.426662],[111.43952,22.427834],[111.446034,22.442209],[111.471325,22.441996],[111.480444,22.46015],[111.47347,22.474629],[111.476919,22.480164],[111.469409,22.490277],[111.486882,22.505551],[111.507804,22.493949],[111.525201,22.480164],[111.545433,22.499324],[111.54459,22.517364],[111.561144,22.523377],[111.559381,22.528804],[111.569344,22.540722],[111.59632,22.551362],[111.60682,22.54966],[111.612031,22.542584],[111.610269,22.534125],[111.618315,22.533912],[111.616093,22.521408],[111.621304,22.521195],[111.616016,22.508158],[111.619618,22.497302],[111.625673,22.510925],[111.633873,22.503262],[111.648128,22.498207],[111.671425,22.503262],[111.678553,22.496397],[111.680315,22.4824],[111.691198,22.482134],[111.713346,22.504699],[111.721393,22.525931],[111.719707,22.54035],[111.738023,22.570459],[111.764004,22.582692],[111.76408,22.588011],[111.780327,22.595988],[111.784313,22.607581],[111.802476,22.626192],[111.814508,22.633263],[111.807074,22.645384],[111.809756,22.656123],[111.820332,22.666701],[111.820102,22.676427],[111.833437,22.680732],[111.835277,22.68897],[111.84248,22.687801],[111.841331,22.679085],[111.850681,22.676268],[111.86256,22.658993],[111.870836,22.65979],[111.871296,22.633529],[111.857425,22.632731],[111.85344,22.624331],[111.86049,22.617099],[111.859111,22.605401],[111.846925,22.612207],[111.841178,22.605454],[111.831904,22.60891],[111.821788,22.59769],[111.83405,22.595829],[111.835736,22.585937],[111.859417,22.581575],[111.870836,22.571735],[111.873825,22.579288],[111.900265,22.570512],[111.902258,22.581469],[111.914213,22.593701],[111.918965,22.592106],[111.931227,22.606039],[111.939121,22.620875],[111.956517,22.633795],[111.96602,22.627521],[111.98518,22.593861],[111.998361,22.589287],[111.998591,22.575459],[111.989931,22.565033],[111.976366,22.562959],[111.969546,22.546468],[111.98403,22.515342],[111.983724,22.505391],[111.995373,22.492406],[112.008861,22.491075],[112.014302,22.484795],[112.012923,22.471755],[112.034534,22.466325],[112.045494,22.45307],[112.058828,22.451207],[112.073006,22.434969],[112.077375,22.420858],[112.086725,22.416226],[112.108949,22.41335],[112.13286,22.405842],[112.142057,22.41548],[112.161523,22.400676],[112.165431,22.385018],[112.172022,22.381769],[112.175088,22.36989],[112.189189,22.36467],[112.186353,22.376069],[112.192791,22.384432],[112.188423,22.398066],[112.196163,22.404936],[112.211184,22.399078],[112.226895,22.408025],[112.243678,22.408238],[112.235938,22.427035],[112.242835,22.445191],[112.252875,22.458926],[112.262531,22.480803],[112.25732,22.500229],[112.275636,22.510659],[112.301233,22.515289],[112.307364,22.525399],[112.302153,22.544818],[112.307747,22.556841],[112.303609,22.560139],[112.309127,22.572427],[112.328133,22.569874],[112.331505,22.563916],[112.323918,22.554554],[112.33641,22.545457],[112.342541,22.55067],[112.359631,22.545457],[112.353577,22.556682],[112.342694,22.558065],[112.344533,22.564342],[112.364306,22.558544],[112.366835,22.550404],[112.377411,22.552479],[112.371127,22.558278],[112.379404,22.57881],[112.380247,22.594978],[112.390363,22.594765],[112.396034,22.602636],[112.398333,22.619917],[112.405077,22.618216],[112.407146,22.628425],[112.400402,22.635921],[112.416113,22.647723],[112.412741,22.656814],[112.419562,22.664202],[112.429218,22.666063],[112.435272,22.661279],[112.428375,22.657133],[112.443243,22.642248],[112.440867,22.627627],[112.435732,22.619971],[112.441787,22.606039],[112.456348,22.600562],[112.463552,22.584873],[112.475047,22.585511],[112.483171,22.592372],[112.505626,22.597849],[112.52172,22.607262],[112.515742,22.626617],[112.505243,22.638473],[112.506545,22.657664],[112.500261,22.668667],[112.489992,22.676215],[112.492674,22.686897],[112.47658,22.704009]]]]}}],bg={type:Sg,features:Eg},Tg=parseInt($1.replace(/\D+/g,""));var gn=Uint8Array,wi=Uint16Array,M2=Uint32Array,f0=new gn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),d0=new gn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),wg=new gn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),p0=function(n,e){for(var t=new wi(31),i=0;i<31;++i)t[i]=e+=1<<n[i-1];for(var r=new M2(t[30]),i=1;i<30;++i)for(var s=t[i];s<t[i+1];++s)r[s]=s-t[i]<<5|i;return[t,r]},m0=p0(f0,2),g0=m0[0],Ag=m0[1];g0[28]=258,Ag[258]=28;var Cg=p0(d0,0),Rg=Cg[0],S2=new wi(32768);for(var ut=0;ut<32768;++ut){var Si=(ut&43690)>>>1|(ut&21845)<<1;Si=(Si&52428)>>>2|(Si&13107)<<2,Si=(Si&61680)>>>4|(Si&3855)<<4,S2[ut]=((Si&65280)>>>8|(Si&255)<<8)>>>1}var Ar=function(n,e,t){for(var i=n.length,r=0,s=new wi(e);r<i;++r)++s[n[r]-1];var o=new wi(e);for(r=0;r<e;++r)o[r]=o[r-1]+s[r-1]<<1;var a;if(t){a=new wi(1<<e);var l=15-e;for(r=0;r<i;++r)if(n[r])for(var c=r<<4|n[r],u=e-n[r],h=o[n[r]-1]++<<u,f=h|(1<<u)-1;h<=f;++h)a[S2[h]>>>l]=c}else for(a=new wi(i),r=0;r<i;++r)n[r]&&(a[r]=S2[o[n[r]-1]++]>>>15-n[r]);return a},Kr=new gn(288);for(var ut=0;ut<144;++ut)Kr[ut]=8;for(var ut=144;ut<256;++ut)Kr[ut]=9;for(var ut=256;ut<280;++ut)Kr[ut]=7;for(var ut=280;ut<288;++ut)Kr[ut]=8;var v0=new gn(32);for(var ut=0;ut<32;++ut)v0[ut]=5;var Pg=Ar(Kr,9,1),Lg=Ar(v0,5,1),Da=function(n){for(var e=n[0],t=1;t<n.length;++t)n[t]>e&&(e=n[t]);return e},bn=function(n,e,t){var i=e/8|0;return(n[i]|n[i+1]<<8)>>(e&7)&t},Ua=function(n,e){var t=e/8|0;return(n[t]|n[t+1]<<8|n[t+2]<<16)>>(e&7)},Ig=function(n){return(n/8|0)+(n&7&&1)},Dg=function(n,e,t){(e==null||e<0)&&(e=0),(t==null||t>n.length)&&(t=n.length);var i=new(n instanceof wi?wi:n instanceof M2?M2:gn)(t-e);return i.set(n.subarray(e,t)),i},Ug=function(n,e,t){var i=n.length;if(!i||t&&!t.l&&i<5)return e||new gn(0);var r=!e||t,s=!t||t.i;t||(t={}),e||(e=new gn(i*3));var o=function(Ae){var Re=e.length;if(Ae>Re){var Pe=new gn(Math.max(Re*2,Ae));Pe.set(e),e=Pe}},a=t.f||0,l=t.p||0,c=t.b||0,u=t.l,h=t.d,f=t.m,d=t.n,g=i*8;do{if(!u){t.f=a=bn(n,l,1);var v=bn(n,l+1,3);if(l+=3,v)if(v==1)u=Pg,h=Lg,f=9,d=5;else if(v==2){var _=bn(n,l,31)+257,y=bn(n,l+10,15)+4,b=_+bn(n,l+5,31)+1;l+=14;for(var C=new gn(b),A=new gn(19),U=0;U<y;++U)A[wg[U]]=bn(n,l+U*3,7);l+=y*3;for(var E=Da(A),T=(1<<E)-1,G=Ar(A,E,1),U=0;U<b;){var Y=G[bn(n,l,T)];l+=Y&15;var m=Y>>>4;if(m<16)C[U++]=m;else{var B=0,H=0;for(m==16?(H=3+bn(n,l,3),l+=2,B=C[U-1]):m==17?(H=3+bn(n,l,7),l+=3):m==18&&(H=11+bn(n,l,127),l+=7);H--;)C[U++]=B}}var I=C.subarray(0,_),V=C.subarray(_);f=Da(I),d=Da(V),u=Ar(I,f,1),h=Ar(V,d,1)}else throw"invalid block type";else{var m=Ig(l)+4,p=n[m-4]|n[m-3]<<8,S=m+p;if(S>i){if(s)throw"unexpected EOF";break}r&&o(c+p),e.set(n.subarray(m,S),c),t.b=c+=p,t.p=l=S*8;continue}if(l>g){if(s)throw"unexpected EOF";break}}r&&o(c+131072);for(var X=(1<<f)-1,j=(1<<d)-1,ie=l;;ie=l){var B=u[Ua(n,l)&X],re=B>>>4;if(l+=B&15,l>g){if(s)throw"unexpected EOF";break}if(!B)throw"invalid length/literal";if(re<256)e[c++]=re;else if(re==256){ie=l,u=null;break}else{var W=re-254;if(re>264){var U=re-257,q=f0[U];W=bn(n,l,(1<<q)-1)+g0[U],l+=q}var pe=h[Ua(n,l)&j],_e=pe>>>4;if(!pe)throw"invalid distance";l+=pe&15;var V=Rg[_e];if(_e>3){var q=d0[_e];V+=Ua(n,l)&(1<<q)-1,l+=q}if(l>g){if(s)throw"unexpected EOF";break}r&&o(c+131072);for(var Se=c+W;c<Se;c+=4)e[c]=e[c-V],e[c+1]=e[c+1-V],e[c+2]=e[c+2-V],e[c+3]=e[c+3-V];c=Se}}t.l=u,t.p=ie,t.b=c,u&&(a=1,t.m=f,t.d=h,t.n=d)}while(!a);return c==e.length?e:Dg(e,0,c)},Og=new gn(0),Ng=function(n){if((n[0]&15)!=8||n[0]>>>4>7||(n[0]<<8|n[1])%31)throw"invalid zlib data";if(n[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Fg(n,e){return Ug((Ng(n),n.subarray(2,-4)),e)}var Bg=typeof TextDecoder<"u"&&new TextDecoder,zg=0;try{Bg.decode(Og,{stream:!0}),zg=1}catch{}class kg extends vt{constructor(e,t={}){super(e),this.isWater=!0;const i=this,r=t.textureWidth!==void 0?t.textureWidth:512,s=t.textureHeight!==void 0?t.textureHeight:512,o=t.clipBias!==void 0?t.clipBias:0,a=t.alpha!==void 0?t.alpha:1,l=t.time!==void 0?t.time:0,c=t.waterNormals!==void 0?t.waterNormals:null,u=t.sunDirection!==void 0?t.sunDirection:new L(.70707,.70707,0),h=new we(t.sunColor!==void 0?t.sunColor:16777215),f=new we(t.waterColor!==void 0?t.waterColor:8355711),d=t.eye!==void 0?t.eye:new L(0,0,0),g=t.distortionScale!==void 0?t.distortionScale:20,v=t.side!==void 0?t.side:hi,m=t.fog!==void 0?t.fog:!1,p=new si,S=new L,_=new L,y=new L,b=new Le,C=new L(0,0,-1),A=new Ye,U=new L,E=new L,T=new Ye,G=new Le,Y=new Ht,B=new kt(r,s),H={uniforms:fi.merge([ye.fog,ye.lights,{normalSampler:{value:null},mirrorSampler:{value:null},alpha:{value:1},time:{value:0},size:{value:1},distortionScale:{value:20},textureMatrix:{value:new Le},sunColor:{value:new we(8355711)},sunDirection:{value:new L(.70707,.70707,0)},eye:{value:new L},waterColor:{value:new we(5592405)}}]),vertexShader:`
				uniform mat4 textureMatrix;
				uniform float time;

				varying vec4 mirrorCoord;
				varying vec4 worldPosition;

				#include <common>
				#include <fog_pars_vertex>
				#include <shadowmap_pars_vertex>
				#include <logdepthbuf_pars_vertex>

				void main() {
					mirrorCoord = modelMatrix * vec4( position, 1.0 );
					worldPosition = mirrorCoord.xyzw;
					mirrorCoord = textureMatrix * mirrorCoord;
					vec4 mvPosition =  modelViewMatrix * vec4( position, 1.0 );
					gl_Position = projectionMatrix * mvPosition;

				#include <beginnormal_vertex>
				#include <defaultnormal_vertex>
				#include <logdepthbuf_vertex>
				#include <fog_vertex>
				#include <shadowmap_vertex>
			}`,fragmentShader:`
				uniform sampler2D mirrorSampler;
				uniform float alpha;
				uniform float time;
				uniform float size;
				uniform float distortionScale;
				uniform sampler2D normalSampler;
				uniform vec3 sunColor;
				uniform vec3 sunDirection;
				uniform vec3 eye;
				uniform vec3 waterColor;

				varying vec4 mirrorCoord;
				varying vec4 worldPosition;

				vec4 getNoise( vec2 uv ) {
					vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);
					vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );
					vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );
					vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );
					vec4 noise = texture2D( normalSampler, uv0 ) +
						texture2D( normalSampler, uv1 ) +
						texture2D( normalSampler, uv2 ) +
						texture2D( normalSampler, uv3 );
					return noise * 0.5 - 1.0;
				}

				void sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {
					vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );
					float direction = max( 0.0, dot( eyeDirection, reflection ) );
					specularColor += pow( direction, shiny ) * sunColor * spec;
					diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;
				}

				#include <common>
				#include <packing>
				#include <bsdfs>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <lights_pars_begin>
				#include <shadowmap_pars_fragment>
				#include <shadowmask_pars_fragment>

				void main() {

					#include <logdepthbuf_fragment>
					vec4 noise = getNoise( worldPosition.xz * size );
					vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );

					vec3 diffuseLight = vec3(0.0);
					vec3 specularLight = vec3(0.0);

					vec3 worldToEye = eye-worldPosition.xyz;
					vec3 eyeDirection = normalize( worldToEye );
					sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );

					float distance = length(worldToEye);

					vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;
					vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );

					float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );
					float rf0 = 0.3;
					float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );
					vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;
					vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);
					vec3 outgoingLight = albedo;
					gl_FragColor = vec4( outgoingLight, alpha );

					#include <tonemapping_fragment>
					#include <${parseInt($1.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment"}>
					#include <fog_fragment>	
				}`},I=new yt({fragmentShader:H.fragmentShader,vertexShader:H.vertexShader,uniforms:fi.clone(H.uniforms),lights:!0,side:v,fog:m});I.uniforms.mirrorSampler.value=B.texture,I.uniforms.textureMatrix.value=G,I.uniforms.alpha.value=a,I.uniforms.time.value=l,I.uniforms.normalSampler.value=c,I.uniforms.sunColor.value=h,I.uniforms.waterColor.value=f,I.uniforms.sunDirection.value=u,I.uniforms.distortionScale.value=g,I.uniforms.eye.value=d,i.material=I,i.onBeforeRender=function(V,X,j){if(_.setFromMatrixPosition(i.matrixWorld),y.setFromMatrixPosition(j.matrixWorld),b.extractRotation(i.matrixWorld),S.set(0,0,1),S.applyMatrix4(b),U.subVectors(_,y),U.dot(S)>0)return;U.reflect(S).negate(),U.add(_),b.extractRotation(j.matrixWorld),C.set(0,0,-1),C.applyMatrix4(b),C.add(y),E.subVectors(_,C),E.reflect(S).negate(),E.add(_),Y.position.copy(U),Y.up.set(0,1,0),Y.up.applyMatrix4(b),Y.up.reflect(S),Y.lookAt(E),Y.far=j.far,Y.updateMatrixWorld(),Y.projectionMatrix.copy(j.projectionMatrix),G.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),G.multiply(Y.projectionMatrix),G.multiply(Y.matrixWorldInverse),p.setFromNormalAndCoplanarPoint(S,_),p.applyMatrix4(Y.matrixWorldInverse),A.set(p.normal.x,p.normal.y,p.normal.z,p.constant);const ie=Y.projectionMatrix;T.x=(Math.sign(A.x)+ie.elements[8])/ie.elements[0],T.y=(Math.sign(A.y)+ie.elements[9])/ie.elements[5],T.z=-1,T.w=(1+ie.elements[10])/ie.elements[14],A.multiplyScalar(2/A.dot(T)),ie.elements[2]=A.x,ie.elements[6]=A.y,ie.elements[10]=A.z+1-o,ie.elements[14]=A.w,d.setFromMatrixPosition(j.matrixWorld);const re=V.getRenderTarget(),W=V.xr.enabled,q=V.shadowMap.autoUpdate;i.visible=!1,V.xr.enabled=!1,V.shadowMap.autoUpdate=!1,V.setRenderTarget(B),V.state.buffers.depth.setMask(!0),V.autoClear===!1&&V.clear(),V.render(X,Y),i.visible=!0,V.xr.enabled=W,V.shadowMap.autoUpdate=q,V.setRenderTarget(re);const pe=j.viewport;pe!==void 0&&V.state.viewport(pe)}}}var Hg=Object.defineProperty,Vg=(n,e,t)=>e in n?Hg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,_0=(n,e,t)=>(Vg(n,typeof e!="symbol"?e+"":e,t),t);const $s={uniforms:{turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new L},up:{value:new L(0,1,0)}},vertexShader:`
      uniform vec3 sunPosition;
      uniform float rayleigh;
      uniform float turbidity;
      uniform float mieCoefficient;
      uniform vec3 up;

      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      // constants for atmospheric scattering
      const float e = 2.71828182845904523536028747135266249775724709369995957;
      const float pi = 3.141592653589793238462643383279502884197169;

      // wavelength of used primaries, according to preetham
      const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );
      // this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:
      // (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))
      const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );

      // mie stuff
      // K coefficient for the primaries
      const float v = 4.0;
      const vec3 K = vec3( 0.686, 0.678, 0.666 );
      // MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K
      const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );

      // earth shadow hack
      // cutoffAngle = pi / 1.95;
      const float cutoffAngle = 1.6110731556870734;
      const float steepness = 1.5;
      const float EE = 1000.0;

      float sunIntensity( float zenithAngleCos ) {
        zenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );
        return EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );
      }

      vec3 totalMie( float T ) {
        float c = ( 0.2 * T ) * 10E-18;
        return 0.434 * c * MieConst;
      }

      void main() {

        vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
        vWorldPosition = worldPosition.xyz;

        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        gl_Position.z = gl_Position.w; // set z to camera.far

        vSunDirection = normalize( sunPosition );

        vSunE = sunIntensity( dot( vSunDirection, up ) );

        vSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );

        float rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );

      // extinction (absorbtion + out scattering)
      // rayleigh coefficients
        vBetaR = totalRayleigh * rayleighCoefficient;

      // mie coefficients
        vBetaM = totalMie( turbidity ) * mieCoefficient;

      }
    `,fragmentShader:`
      varying vec3 vWorldPosition;
      varying vec3 vSunDirection;
      varying float vSunfade;
      varying vec3 vBetaR;
      varying vec3 vBetaM;
      varying float vSunE;

      uniform float mieDirectionalG;
      uniform vec3 up;

      const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );

      // constants for atmospheric scattering
      const float pi = 3.141592653589793238462643383279502884197169;

      const float n = 1.0003; // refractive index of air
      const float N = 2.545E25; // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)

      // optical length at zenith for molecules
      const float rayleighZenithLength = 8.4E3;
      const float mieZenithLength = 1.25E3;
      // 66 arc seconds -> degrees, and the cosine of that
      const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;

      // 3.0 / ( 16.0 * pi )
      const float THREE_OVER_SIXTEENPI = 0.05968310365946075;
      // 1.0 / ( 4.0 * pi )
      const float ONE_OVER_FOURPI = 0.07957747154594767;

      float rayleighPhase( float cosTheta ) {
        return THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );
      }

      float hgPhase( float cosTheta, float g ) {
        float g2 = pow( g, 2.0 );
        float inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );
        return ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );
      }

      void main() {

        vec3 direction = normalize( vWorldPosition - cameraPos );

      // optical length
      // cutoff angle at 90 to avoid singularity in next formula.
        float zenithAngle = acos( max( 0.0, dot( up, direction ) ) );
        float inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );
        float sR = rayleighZenithLength * inverse;
        float sM = mieZenithLength * inverse;

      // combined extinction factor
        vec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );

      // in scattering
        float cosTheta = dot( direction, vSunDirection );

        float rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );
        vec3 betaRTheta = vBetaR * rPhase;

        float mPhase = hgPhase( cosTheta, mieDirectionalG );
        vec3 betaMTheta = vBetaM * mPhase;

        vec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );
        Lin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );

      // nightsky
        float theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]
        float phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]
        vec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );
        vec3 L0 = vec3( 0.1 ) * Fex;

      // composition + solar disc
        float sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );
        L0 += ( vSunE * 19000.0 * Fex ) * sundisk;

        vec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );

        vec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );

        gl_FragColor = vec4( retColor, 1.0 );

      #include <tonemapping_fragment>
      #include <${Tg>=154?"colorspace_fragment":"encodings_fragment"}>

      }
    `},x0=new yt({name:"SkyShader",fragmentShader:$s.fragmentShader,vertexShader:$s.vertexShader,uniforms:fi.clone($s.uniforms),side:Zt,depthWrite:!1});class gl extends vt{constructor(){super(new n1(1,1,1),x0)}}_0(gl,"SkyShader",$s);_0(gl,"material",x0);var Gg=Object.defineProperty,Wg=(n,e,t)=>e in n?Gg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Xi=(n,e,t)=>(Wg(n,typeof e!="symbol"?e+"":e,t),t);let $r=class{constructor(){Xi(this,"enabled",!0),Xi(this,"needsSwap",!0),Xi(this,"clear",!1),Xi(this,"renderToScreen",!1)}setSize(e,t){}render(e,t,i,r,s){console.error("THREE.Pass: .render() must be implemented in derived pass.")}},y0=class{constructor(e){Xi(this,"camera",new qr(-1,1,1,-1,0,1)),Xi(this,"geometry",new jr(2,2)),Xi(this,"mesh"),this.mesh=new vt(this.geometry,e)}get material(){return this.mesh.material}set material(e){this.mesh.material=e}dispose(){this.mesh.geometry.dispose()}render(e){e.render(this.mesh,this.camera)}};var Xg=Object.defineProperty,jg=(n,e,t)=>e in n?Xg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Bs=(n,e,t)=>(jg(n,typeof e!="symbol"?e+"":e,t),t);class uu extends $r{constructor(e,t="tDiffuse"){super(),Bs(this,"textureID"),Bs(this,"uniforms"),Bs(this,"material"),Bs(this,"fsQuad"),this.textureID=t,e instanceof yt?(this.uniforms=e.uniforms,this.material=e):(this.uniforms=fi.clone(e.uniforms),this.material=new yt({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new y0(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}const po={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","	vUv = uv;","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","	vec4 texel = texture2D( tDiffuse, vUv );","	gl_FragColor = opacity * texel;","}"].join(`
`)};var qg=Object.defineProperty,Yg=(n,e,t)=>e in n?qg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,je=(n,e,t)=>(Yg(n,typeof e!="symbol"?e+"":e,t),t);class Kg extends $r{constructor(e,t,i,r){super(),je(this,"renderScene"),je(this,"renderCamera"),je(this,"selectedObjects"),je(this,"visibleEdgeColor"),je(this,"hiddenEdgeColor"),je(this,"edgeGlow"),je(this,"usePatternTexture"),je(this,"edgeThickness"),je(this,"edgeStrength"),je(this,"downSampleRatio"),je(this,"pulsePeriod"),je(this,"resolution"),je(this,"renderTargetMaskBuffer"),je(this,"depthMaterial"),je(this,"prepareMaskMaterial"),je(this,"renderTargetDepthBuffer"),je(this,"renderTargetMaskDownSampleBuffer"),je(this,"renderTargetBlurBuffer1"),je(this,"renderTargetBlurBuffer2"),je(this,"edgeDetectionMaterial"),je(this,"renderTargetEdgeBuffer1"),je(this,"renderTargetEdgeBuffer2"),je(this,"separableBlurMaterial1"),je(this,"separableBlurMaterial2"),je(this,"overlayMaterial"),je(this,"materialCopy"),je(this,"oldClearAlpha"),je(this,"fsQuad"),je(this,"tempPulseColor1"),je(this,"tempPulseColor2"),je(this,"textureMatrix"),je(this,"patternTexture"),je(this,"_visibilityCache"),je(this,"_oldClearColor"),je(this,"copyUniforms"),je(this,"BlurDirectionX",new fe(1,0)),je(this,"BlurDirectionY",new fe(0,1)),this.renderScene=t,this.renderCamera=i,this.selectedObjects=r!==void 0?r:[],this.visibleEdgeColor=new we(1,1,1),this.hiddenEdgeColor=new we(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,this._visibilityCache=new Map,this.resolution=e!==void 0?new fe(e.x,e.y):new fe(256,256);const s=Math.round(this.resolution.x/this.downSampleRatio),o=Math.round(this.resolution.y/this.downSampleRatio);this.renderTargetMaskBuffer=new kt(this.resolution.x,this.resolution.y),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new Hh,this.depthMaterial.side=tn,this.depthMaterial.depthPacking=Th,this.depthMaterial.blending=Pn,this.prepareMaskMaterial=this.getPrepareMaskMaterial(),this.prepareMaskMaterial.side=tn,this.prepareMaskMaterial.fragmentShader=u(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new kt(this.resolution.x,this.resolution.y),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new kt(s,o),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new kt(s,o),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new kt(Math.round(s/2),Math.round(o/2)),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this.getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new kt(s,o),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new kt(Math.round(s/2),Math.round(o/2)),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;const a=4,l=4;this.separableBlurMaterial1=this.getSeperableBlurMaterial(a),this.separableBlurMaterial1.uniforms.texSize.value.set(s,o),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this.getSeperableBlurMaterial(l),this.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(s/2),Math.round(o/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=l,this.overlayMaterial=this.getOverlayMaterial(),po===void 0&&console.error("THREE.OutlinePass relies on CopyShader");const c=po;this.copyUniforms=fi.clone(c.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new yt({uniforms:this.copyUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,blending:Pn,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new we,this.oldClearAlpha=1,this.fsQuad=new y0(this.materialCopy),this.tempPulseColor1=new we,this.tempPulseColor2=new we,this.textureMatrix=new Le;function u(h,f){const d=f.isPerspectiveCamera?"perspective":"orthographic";return h.replace(/DEPTH_TO_VIEW_Z/g,d+"DepthToViewZ")}}dispose(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose()}setSize(e,t){this.renderTargetMaskBuffer.setSize(e,t),this.renderTargetDepthBuffer.setSize(e,t);let i=Math.round(e/this.downSampleRatio),r=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(i,r),this.renderTargetBlurBuffer1.setSize(i,r),this.renderTargetEdgeBuffer1.setSize(i,r),this.separableBlurMaterial1.uniforms.texSize.value.set(i,r),i=Math.round(i/2),r=Math.round(r/2),this.renderTargetBlurBuffer2.setSize(i,r),this.renderTargetEdgeBuffer2.setSize(i,r),this.separableBlurMaterial2.uniforms.texSize.value.set(i,r)}changeVisibilityOfSelectedObjects(e){const t=this._visibilityCache;function i(r){r.isMesh&&(e===!0?r.visible=t.get(r):(t.set(r,r.visible),r.visible=e))}for(let r=0;r<this.selectedObjects.length;r++)this.selectedObjects[r].traverse(i)}changeVisibilityOfNonSelectedObjects(e){const t=this._visibilityCache,i=[];function r(o){o.isMesh&&i.push(o)}for(let o=0;o<this.selectedObjects.length;o++)this.selectedObjects[o].traverse(r);function s(o){if(o.isMesh||o.isSprite){let a=!1;for(let l=0;l<i.length;l++)if(i[l].id===o.id){a=!0;break}if(a===!1){const l=o.visible;(e===!1||t.get(o)===!0)&&(o.visible=e),t.set(o,l)}}else(o.isPoints||o.isLine)&&(e===!0?o.visible=t.get(o):(t.set(o,o.visible),o.visible=e))}this.renderScene.traverse(s)}updateTextureMatrix(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)}render(e,t,i,r,s){if(this.selectedObjects.length>0){e.getClearColor(this._oldClearColor),this.oldClearAlpha=e.getClearAlpha();const o=e.autoClear;e.autoClear=!1,s&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);const a=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this.renderScene.background=a,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){const l=.625+Math.cos(performance.now()*.01/this.pulsePeriod)*.75/2;this.tempPulseColor1.multiplyScalar(l),this.tempPulseColor2.multiplyScalar(l)}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=this.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=this.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=this.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=this.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,s&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(i),this.fsQuad.render(e),e.setClearColor(this._oldClearColor,this.oldClearAlpha),e.autoClear=o}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=i.texture,e.setRenderTarget(null),this.fsQuad.render(e))}getPrepareMaskMaterial(){return new yt({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new fe(.5,.5)},textureMatrix:{value:null}},vertexShader:`#include <morphtarget_pars_vertex>
				#include <skinning_pars_vertex>
				varying vec4 projTexCoord;
				varying vec4 vPosition;
				uniform mat4 textureMatrix;
				void main() {
					#include <skinbase_vertex>
					#include <begin_vertex>
					#include <morphtarget_vertex>
					#include <skinning_vertex>
					#include <project_vertex>
					vPosition = mvPosition;
					vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
					projTexCoord = textureMatrix * worldPosition;
				}`,fragmentShader:`#include <packing>
				varying vec4 vPosition;
				varying vec4 projTexCoord;
				uniform sampler2D depthTexture;
				uniform vec2 cameraNearFar;
				void main() {
					float depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));
					float viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );
					float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;
					gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);
				}`})}getEdgeDetectionMaterial(){return new yt({uniforms:{maskTexture:{value:null},texSize:{value:new fe(.5,.5)},visibleEdgeColor:{value:new L(1,1,1)},hiddenEdgeColor:{value:new L(1,1,1)}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D maskTexture;
				uniform vec2 texSize;
				uniform vec3 visibleEdgeColor;
				uniform vec3 hiddenEdgeColor;
				void main() {
					vec2 invSize = 1.0 / texSize;
					vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);
					vec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);
					vec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);
					vec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);
					vec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);
					float diff1 = (c1.r - c2.r)*0.5;
					float diff2 = (c3.r - c4.r)*0.5;
					float d = length( vec2(diff1, diff2) );
					float a1 = min(c1.g, c2.g);
					float a2 = min(c3.g, c4.g);
					float visibilityFactor = min(a1, a2);
					vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;
					gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);
				}`})}getSeperableBlurMaterial(e){return new yt({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new fe(.5,.5)},direction:{value:new fe(.5,.5)},kernelRadius:{value:1}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 texSize;
				uniform vec2 direction;
				uniform float kernelRadius;
				float gaussianPdf(in float x, in float sigma) {
					return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;
				}
				void main() {
					vec2 invSize = 1.0 / texSize;
					float weightSum = gaussianPdf(0.0, kernelRadius);
					vec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;
					vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);
					vec2 uvOffset = delta;
					for( int i = 1; i <= MAX_RADIUS; i ++ ) {
						float w = gaussianPdf(uvOffset.x, kernelRadius);
						vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);
						vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);
						diffuseSum += ((sample1 + sample2) * w);
						weightSum += (2.0 * w);
						uvOffset += delta;
					}
					gl_FragColor = diffuseSum/weightSum;
				}`})}getOverlayMaterial(){return new yt({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D maskTexture;
				uniform sampler2D edgeTexture1;
				uniform sampler2D edgeTexture2;
				uniform sampler2D patternTexture;
				uniform float edgeStrength;
				uniform float edgeGlow;
				uniform bool usePatternTexture;
				void main() {
					vec4 edgeValue1 = texture2D(edgeTexture1, vUv);
					vec4 edgeValue2 = texture2D(edgeTexture2, vUv);
					vec4 maskColor = texture2D(maskTexture, vUv);
					vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);
					float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;
					vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;
					vec4 finalColor = edgeStrength * maskColor.r * edgeValue;
					if(usePatternTexture)
						finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);
					gl_FragColor = finalColor;
				}`,blending:to,depthTest:!1,depthWrite:!1,transparent:!0})}}var $g=Object.defineProperty,Zg=(n,e,t)=>e in n?$g(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,Oa=(n,e,t)=>(Zg(n,typeof e!="symbol"?e+"":e,t),t);class hu extends $r{constructor(e,t){super(),Oa(this,"scene"),Oa(this,"camera"),Oa(this,"inverse"),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const r=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),s.buffers.stencil.setFunc(r.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(r.EQUAL,1,4294967295),s.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),s.buffers.stencil.setLocked(!0)}}class Jg extends $r{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}var Qg=Object.defineProperty,ev=(n,e,t)=>e in n?Qg(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,mn=(n,e,t)=>(ev(n,typeof e!="symbol"?e+"":e,t),t);class tv{constructor(e,t){if(mn(this,"renderer"),mn(this,"_pixelRatio"),mn(this,"_width"),mn(this,"_height"),mn(this,"renderTarget1"),mn(this,"renderTarget2"),mn(this,"writeBuffer"),mn(this,"readBuffer"),mn(this,"renderToScreen"),mn(this,"passes",[]),mn(this,"copyPass"),mn(this,"clock"),this.renderer=e,t===void 0){const i={minFilter:en,magFilter:en,format:fn},r=e.getSize(new fe);this._pixelRatio=e.getPixelRatio(),this._width=r.width,this._height=r.height,t=new kt(this._width*this._pixelRatio,this._height*this._pixelRatio,i),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,po===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),uu===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new uu(po),this.copyPass.material.blending=Pn,this.clock=new Am}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;const r=this.passes.length;for(let s=0;s<r;s++){const o=this.passes[s];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),o.needsSwap){if(i){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}hu!==void 0&&(o instanceof hu?i=!0:o instanceof Jg&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new fe);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(i,r),this.renderTarget2.setSize(i,r);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(i,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}var nv=Object.defineProperty,iv=(n,e,t)=>e in n?nv(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,ki=(n,e,t)=>(iv(n,typeof e!="symbol"?e+"":e,t),t);class rv extends $r{constructor(e,t,i,r,s=0){super(),ki(this,"scene"),ki(this,"camera"),ki(this,"overrideMaterial"),ki(this,"clearColor"),ki(this,"clearAlpha"),ki(this,"clearDepth",!1),ki(this,"_oldClearColor",new we),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=r,this.clearAlpha=s,this.clear=!0,this.needsSwap=!1}render(e,t,i){let r=e.autoClear;e.autoClear=!1;let s,o=null;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=r}}class sv extends Lo{constructor(e,t={}){const{bevelEnabled:i=!1,bevelSize:r=8,bevelThickness:s=10,font:o,height:a=50,size:l=100,lineHeight:c=1,letterSpacing:u=0,...h}=t;if(o===void 0)super();else{const f=o.generateShapes(e,l,{lineHeight:c,letterSpacing:u});super(f,{...h,bevelEnabled:i,bevelSize:r,bevelThickness:s,depth:a})}this.type="TextGeometry"}}function M0(n,e,t){const i=t.length-n-1;if(e>=t[i])return i-1;if(e<=t[n])return n;let r=n,s=i,o=Math.floor((r+s)/2);for(;e<t[o]||e>=t[o+1];)e<t[o]?s=o:r=o,o=Math.floor((r+s)/2);return o}function ov(n,e,t,i){const r=[],s=[],o=[];r[0]=1;for(let a=1;a<=t;++a){s[a]=e-i[n+1-a],o[a]=i[n+a]-e;let l=0;for(let c=0;c<a;++c){const u=o[c+1],h=s[a-c],f=r[c]/(u+h);r[c]=l+u*f,l=h*f}r[a]=l}return r}function av(n,e,t,i){const r=M0(n,i,e),s=ov(r,i,n,e),o=new Ye(0,0,0,0);for(let a=0;a<=n;++a){const l=t[r-n+a],c=s[a],u=l.w*c;o.x+=l.x*u,o.y+=l.y*u,o.z+=l.z*u,o.w+=l.w*c}return o}function lv(n,e,t,i,r){const s=[];for(let h=0;h<=t;++h)s[h]=0;const o=[];for(let h=0;h<=i;++h)o[h]=s.slice(0);const a=[];for(let h=0;h<=t;++h)a[h]=s.slice(0);a[0][0]=1;const l=s.slice(0),c=s.slice(0);for(let h=1;h<=t;++h){l[h]=e-r[n+1-h],c[h]=r[n+h]-e;let f=0;for(let d=0;d<h;++d){const g=c[d+1],v=l[h-d];a[h][d]=g+v;const m=a[d][h-1]/a[h][d];a[d][h]=f+g*m,f=v*m}a[h][h]=f}for(let h=0;h<=t;++h)o[0][h]=a[h][t];for(let h=0;h<=t;++h){let f=0,d=1;const g=[];for(let v=0;v<=t;++v)g[v]=s.slice(0);g[0][0]=1;for(let v=1;v<=i;++v){let m=0;const p=h-v,S=t-v;h>=v&&(g[d][0]=g[f][0]/a[S+1][p],m=g[d][0]*a[p][S]);const _=p>=-1?1:-p,y=h-1<=S?v-1:t-h;for(let C=_;C<=y;++C)g[d][C]=(g[f][C]-g[f][C-1])/a[S+1][p+C],m+=g[d][C]*a[p+C][S];h<=S&&(g[d][v]=-g[f][v-1]/a[S+1][h],m+=g[d][v]*a[h][S]),o[v][h]=m;const b=f;f=d,d=b}}let u=t;for(let h=1;h<=i;++h){for(let f=0;f<=t;++f)o[h][f]*=u;u*=t-h}return o}function cv(n,e,t,i,r){const s=r<n?r:n,o=[],a=M0(n,i,e),l=lv(a,i,n,s,e),c=[];for(let u=0;u<t.length;++u){const h=t[u].clone(),f=h.w;h.x*=f,h.y*=f,h.z*=f,c[u]=h}for(let u=0;u<=s;++u){const h=c[a-n].clone().multiplyScalar(l[u][0]);for(let f=1;f<=n;++f)h.add(c[a-n+f].clone().multiplyScalar(l[u][f]));o[u]=h}for(let u=s+1;u<=r+1;++u)o[u]=new Ye(0,0,0);return o}function uv(n,e){let t=1;for(let r=2;r<=n;++r)t*=r;let i=1;for(let r=2;r<=e;++r)i*=r;for(let r=2;r<=n-e;++r)i*=r;return t/i}function hv(n){const e=n.length,t=[],i=[];for(let s=0;s<e;++s){const o=n[s];t[s]=new L(o.x,o.y,o.z),i[s]=o.w}const r=[];for(let s=0;s<e;++s){const o=t[s].clone();for(let a=1;a<=s;++a)o.sub(r[s-a].clone().multiplyScalar(uv(s,a)*i[a]));r[s]=o.divideScalar(i[0])}return r}function fv(n,e,t,i,r){const s=cv(n,e,t,i,r);return hv(s)}class fu extends In{constructor(e,t,i,r,s){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=r||0,this.endKnot=s||this.knots.length-1;for(let o=0;o<i.length;++o){const a=i[o];this.controlPoints[o]=new Ye(a.x,a.y,a.z,a.w)}}getPoint(e,t){const i=t||new L,r=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),s=av(this.degree,this.knots,this.controlPoints,r);return s.w!=1&&s.divideScalar(s.w),i.set(s.x,s.y,s.z)}getTangent(e,t){const i=t||new L,r=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),s=fv(this.degree,this.knots,this.controlPoints,r,1);return i.copy(s[1]).normalize(),i}}let qe,gt,Jt;class dv extends nr{constructor(e){super(e)}load(e,t,i,r){const s=this,o=s.path===""?ul.extractUrlBase(e):s.path,a=new t0(this.manager);a.setPath(s.path),a.setResponseType("arraybuffer"),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(l){try{t(s.parse(l,o))}catch(c){r?r(c):console.error(c),s.manager.itemError(e)}},i,r)}parse(e,t){if(xv(e))qe=new _v().parse(e);else{const r=T0(e);if(!yv(r))throw new Error("THREE.FBXLoader: Unknown format.");if(pu(r)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+pu(r));qe=new vv().parse(r)}const i=new f2(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new pv(i,this.manager).parse(qe)}}class pv{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){gt=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),i=this.parseMaterials(t),r=this.parseDeformers(),s=new mv().parse(r);return this.parseScene(r,s,i),Jt}parseConnections(){const e=new Map;return"Connections"in qe&&qe.Connections.connections.forEach(function(i){const r=i[0],s=i[1],o=i[2];e.has(r)||e.set(r,{parents:[],children:[]});const a={ID:s,relationship:o};e.get(r).parents.push(a),e.has(s)||e.set(s,{parents:[],children:[]});const l={ID:r,relationship:o};e.get(s).children.push(l)}),e}parseImages(){const e={},t={};if("Video"in qe.Objects){const i=qe.Objects.Video;for(const r in i){const s=i[r],o=parseInt(r);if(e[o]=s.RelativeFilename||s.Filename,"Content"in s){const a=s.Content instanceof ArrayBuffer&&s.Content.byteLength>0,l=typeof s.Content=="string"&&s.Content!=="";if(a||l){const c=this.parseImage(i[r]);t[s.RelativeFilename||s.Filename]=c}}}}for(const i in e){const r=e[i];t[r]!==void 0?e[i]=t[r]:e[i]=e[i].split("\\").pop()}return e}parseImage(e){const t=e.Content,i=e.RelativeFilename||e.Filename,r=i.slice(i.lastIndexOf(".")+1).toLowerCase();let s;switch(r){case"bmp":s="image/bmp";break;case"jpg":case"jpeg":s="image/jpeg";break;case"png":s="image/png";break;case"tif":s="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",i),s="image/tga";break;default:console.warn('FBXLoader: Image type "'+r+'" is not supported.');return}if(typeof t=="string")return"data:"+s+";base64,"+t;{const o=new Uint8Array(t);return window.URL.createObjectURL(new Blob([o],{type:s}))}}parseTextures(e){const t=new Map;if("Texture"in qe.Objects){const i=qe.Objects.Texture;for(const r in i){const s=this.parseTexture(i[r],e);t.set(parseInt(r),s)}}return t}parseTexture(e,t){const i=this.loadTexture(e,t);i.ID=e.id,i.name=e.attrName;const r=e.WrapModeU,s=e.WrapModeV,o=r!==void 0?r.value:0,a=s!==void 0?s.value:0;if(i.wrapS=o===0?H1:hn,i.wrapT=a===0?H1:hn,"Scaling"in e){const l=e.Scaling.value;i.repeat.x=l[0],i.repeat.y=l[1]}return i}loadTexture(e,t){let i;const r=this.textureLoader.path,s=gt.get(e.id).children;s!==void 0&&s.length>0&&t[s[0].ID]!==void 0&&(i=t[s[0].ID],(i.indexOf("blob:")===0||i.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=e.FileName.slice(-3).toLowerCase();if(a==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),o=new Ot):(l.setPath(this.textureLoader.path),o=l.load(i))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),o=new Ot):o=this.textureLoader.load(i);return this.textureLoader.setPath(r),o}parseMaterials(e){const t=new Map;if("Material"in qe.Objects){const i=qe.Objects.Material;for(const r in i){const s=this.parseMaterial(i[r],e);s!==null&&t.set(parseInt(r),s)}}return t}parseMaterial(e,t){const i=e.id,r=e.attrName;let s=e.ShadingModel;if(typeof s=="object"&&(s=s.value),!gt.has(i))return null;const o=this.parseParameters(e,t,i);let a;switch(s.toLowerCase()){case"phong":a=new Aa;break;case"lambert":a=new cm;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),a=new Aa;break}return a.setValues(o),a.name=r,a}parseParameters(e,t,i){const r={};e.BumpFactor&&(r.bumpScale=e.BumpFactor.value),e.Diffuse?r.color=new we().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(r.color=new we().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(r.displacementScale=e.DisplacementFactor.value),e.Emissive?r.emissive=new we().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(r.emissive=new we().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(r.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(r.opacity=parseFloat(e.Opacity.value)),r.opacity<1&&(r.transparent=!0),e.ReflectionFactor&&(r.reflectivity=e.ReflectionFactor.value),e.Shininess&&(r.shininess=e.Shininess.value),e.Specular?r.specular=new we().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(r.specular=new we().fromArray(e.SpecularColor.value));const s=this;return gt.get(i).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":r.bumpMap=s.getTexture(t,o.ID);break;case"Maya|TEX_ao_map":r.aoMap=s.getTexture(t,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":r.map=s.getTexture(t,o.ID),r.map!==void 0&&("colorSpace"in r.map?r.map.colorSpace="srgb":r.map.encoding=3001);break;case"DisplacementColor":r.displacementMap=s.getTexture(t,o.ID);break;case"EmissiveColor":r.emissiveMap=s.getTexture(t,o.ID),r.emissiveMap!==void 0&&("colorSpace"in r.emissiveMap?r.emissiveMap.colorSpace="srgb":r.emissiveMap.encoding=3001);break;case"NormalMap":case"Maya|TEX_normal_map":r.normalMap=s.getTexture(t,o.ID);break;case"ReflectionColor":r.envMap=s.getTexture(t,o.ID),r.envMap!==void 0&&(r.envMap.mapping=no,"colorSpace"in r.envMap?r.envMap.colorSpace="srgb":r.envMap.encoding=3001);break;case"SpecularColor":r.specularMap=s.getTexture(t,o.ID),r.specularMap!==void 0&&("colorSpace"in r.specularMap?r.specularMap.colorSpace="srgb":r.specularMap.encoding=3001);break;case"TransparentColor":case"TransparencyFactor":r.alphaMap=s.getTexture(t,o.ID),r.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),r}getTexture(e,t){return"LayeredTexture"in qe.Objects&&t in qe.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=gt.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in qe.Objects){const i=qe.Objects.Deformer;for(const r in i){const s=i[r],o=gt.get(parseInt(r));if(s.attrType==="Skin"){const a=this.parseSkeleton(o,i);a.ID=r,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,e[r]=a}else if(s.attrType==="BlendShape"){const a={id:r};a.rawTargets=this.parseMorphTargets(o,i),a.id=r,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[r]=a}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const i=[];return e.children.forEach(function(r){const s=t[r.ID];if(s.attrType!=="Cluster")return;const o={ID:r.ID,indices:[],weights:[],transformLink:new Le().fromArray(s.TransformLink.a)};"Indexes"in s&&(o.indices=s.Indexes.a,o.weights=s.Weights.a),i.push(o)}),{rawBones:i,bones:[]}}parseMorphTargets(e,t){const i=[];for(let r=0;r<e.children.length;r++){const s=e.children[r],o=t[s.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=gt.get(parseInt(s.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,i.push(a)}return i}parseScene(e,t,i){Jt=new ci;const r=this.parseModels(e.skeletons,t,i),s=qe.Objects.Model,o=this;r.forEach(function(l){const c=s[l.ID];o.setLookAtProperties(l,c),gt.get(l.ID).parents.forEach(function(h){const f=r.get(h.ID);f!==void 0&&f.add(l)}),l.parent===null&&Jt.add(l)}),this.bindSkeleton(e.skeletons,t,r),this.createAmbientLight(),Jt.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=E0(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const a=new gv().parse();Jt.children.length===1&&Jt.children[0].isGroup&&(Jt.children[0].animations=a,Jt=Jt.children[0]),Jt.animations=a}parseModels(e,t,i){const r=new Map,s=qe.Objects.Model;for(const o in s){const a=parseInt(o),l=s[o],c=gt.get(a);let u=this.buildSkeleton(c,e,a,l.attrName);if(!u){switch(l.attrType){case"Camera":u=this.createCamera(c);break;case"Light":u=this.createLight(c);break;case"Mesh":u=this.createMesh(c,t,i);break;case"NurbsCurve":u=this.createCurve(c,t);break;case"LimbNode":case"Root":u=new a2;break;case"Null":default:u=new ci;break}u.name=l.attrName?Qe.sanitizeNodeName(l.attrName):"",u.ID=a}this.getTransformData(u,l),r.set(a,u)}return r}buildSkeleton(e,t,i,r){let s=null;return e.parents.forEach(function(o){for(const a in t){const l=t[a];l.rawBones.forEach(function(c,u){if(c.ID===o.ID){const h=s;s=new a2,s.matrixWorld.copy(c.transformLink),s.name=r?Qe.sanitizeNodeName(r):"",s.ID=i,l.bones[u]=s,h!==null&&s.add(h)}})}}),s}createCamera(e){let t,i;if(e.children.forEach(function(r){const s=qe.Objects.NodeAttribute[r.ID];s!==void 0&&(i=s)}),i===void 0)t=new lt;else{let r=0;i.CameraProjectionType!==void 0&&i.CameraProjectionType.value===1&&(r=1);let s=1;i.NearPlane!==void 0&&(s=i.NearPlane.value/1e3);let o=1e3;i.FarPlane!==void 0&&(o=i.FarPlane.value/1e3);let a=window.innerWidth,l=window.innerHeight;i.AspectWidth!==void 0&&i.AspectHeight!==void 0&&(a=i.AspectWidth.value,l=i.AspectHeight.value);const c=a/l;let u=45;i.FieldOfView!==void 0&&(u=i.FieldOfView.value);const h=i.FocalLength?i.FocalLength.value:null;switch(r){case 0:t=new Ht(u,c,s,o),h!==null&&t.setFocalLength(h);break;case 1:t=new qr(-a/2,a/2,l/2,-l/2,s,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+r+"."),t=new lt;break}}return t}createLight(e){let t,i;if(e.children.forEach(function(r){const s=qe.Objects.NodeAttribute[r.ID];s!==void 0&&(i=s)}),i===void 0)t=new lt;else{let r;i.LightType===void 0?r=0:r=i.LightType.value;let s=16777215;i.Color!==void 0&&(s=new we().fromArray(i.Color.value));let o=i.Intensity===void 0?1:i.Intensity.value/100;i.CastLightOnObject!==void 0&&i.CastLightOnObject.value===0&&(o=0);let a=0;i.FarAttenuationEnd!==void 0&&(i.EnableFarAttenuation!==void 0&&i.EnableFarAttenuation.value===0?a=0:a=i.FarAttenuationEnd.value);const l=1;switch(r){case 0:t=new k3(s,o,a,l);break;case 1:t=new i0(s,o);break;case 2:let c=Math.PI/3;i.InnerAngle!==void 0&&(c=nn.degToRad(i.InnerAngle.value));let u=0;i.OuterAngle!==void 0&&(u=nn.degToRad(i.OuterAngle.value),u=Math.max(u,1)),t=new n0(s,o,a,c,u,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+i.LightType.value+", defaulting to a PointLight."),t=new k3(s,o);break}i.CastShadows!==void 0&&i.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,i){let r,s=null,o=null;const a=[];return e.children.forEach(function(l){t.has(l.ID)&&(s=t.get(l.ID)),i.has(l.ID)&&a.push(i.get(l.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new Aa({color:13421772}),a.push(o)),"color"in s.attributes&&a.forEach(function(l){l.vertexColors=!0}),s.FBX_Deformer?(r=new T9(s,o),r.normalizeSkinWeights()):r=new vt(s,o),r}createCurve(e,t){const i=e.children.reduce(function(s,o){return t.has(o.ID)&&(s=t.get(o.ID)),s},null),r=new el({color:3342591,linewidth:1});return new Gh(i,r)}getTransformData(e,t){const i={};"InheritType"in t&&(i.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?i.eulerOrder=b0(t.RotationOrder.value):i.eulerOrder="ZYX","Lcl_Translation"in t&&(i.translation=t.Lcl_Translation.value),"PreRotation"in t&&(i.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(i.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(i.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(i.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(i.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(i.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(i.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(i.rotationPivot=t.RotationPivot.value),e.userData.transformData=i}setLookAtProperties(e,t){"LookAtProperty"in t&&gt.get(e.ID).children.forEach(function(r){if(r.relationship==="LookAtProperty"){const s=qe.Objects.Model[r.ID];if("Lcl_Translation"in s){const o=s.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(o),Jt.add(e.target)):e.lookAt(new L().fromArray(o))}}})}bindSkeleton(e,t,i){const r=this.parsePoseNodes();for(const s in e){const o=e[s];gt.get(parseInt(o.ID)).parents.forEach(function(l){if(t.has(l.ID)){const c=l.ID;gt.get(c).parents.forEach(function(h){i.has(h.ID)&&i.get(h.ID).bind(new Q2(o.bones),r[h.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in qe.Objects){const t=qe.Objects.Pose;for(const i in t)if(t[i].attrType==="BindPose"&&t[i].NbPoseNodes>0){const r=t[i].PoseNode;Array.isArray(r)?r.forEach(function(s){e[s.Node]=new Le().fromArray(s.Matrix.a)}):e[r.Node]=new Le().fromArray(r.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in qe&&"AmbientColor"in qe.GlobalSettings){const e=qe.GlobalSettings.AmbientColor.value,t=e[0],i=e[1],r=e[2];if(t!==0||i!==0||r!==0){const s=new we(t,i,r);Jt.add(new r0(s,1))}}}}class mv{parse(e){const t=new Map;if("Geometry"in qe.Objects){const i=qe.Objects.Geometry;for(const r in i){const s=gt.get(parseInt(r)),o=this.parseGeometry(s,i[r],e);t.set(parseInt(r),o)}}return t}parseGeometry(e,t,i){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,i);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,i){const r=i.skeletons,s=[],o=e.parents.map(function(h){return qe.Objects.Model[h.ID]});if(o.length===0)return;const a=e.children.reduce(function(h,f){return r[f.ID]!==void 0&&(h=r[f.ID]),h},null);e.children.forEach(function(h){i.morphTargets[h.ID]!==void 0&&s.push(i.morphTargets[h.ID])});const l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=b0(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const u=E0(c);return this.genGeometry(t,a,s,u)}genGeometry(e,t,i,r){const s=new Mt;e.attrName&&(s.name=e.attrName);const o=this.parseGeoNode(e,t),a=this.genBuffers(o),l=new rt(a.vertex,3);if(l.applyMatrix4(r),s.setAttribute("position",l),a.colors.length>0&&s.setAttribute("color",new rt(a.colors,3)),t&&(s.setAttribute("skinIndex",new $2(a.weightsIndices,4)),s.setAttribute("skinWeight",new rt(a.vertexWeights,4)),s.FBX_Deformer=t),a.normal.length>0){const c=new Ve().getNormalMatrix(r),u=new rt(a.normal,3);u.applyNormalMatrix(c),s.setAttribute("normal",u)}if(a.uvs.forEach(function(c,u){let h="uv"+(u+1).toString();u===0&&(h="uv"),s.setAttribute(h,new rt(a.uvs[u],2))}),o.material&&o.material.mappingType!=="AllSame"){let c=a.materialIndex[0],u=0;if(a.materialIndex.forEach(function(h,f){h!==c&&(s.addGroup(u,f-u,c),c=h,u=f)}),s.groups.length>0){const h=s.groups[s.groups.length-1],f=h.start+h.count;f!==a.materialIndex.length&&s.addGroup(f,a.materialIndex.length-f,c)}s.groups.length===0&&s.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(s,e,i,r),s}parseGeoNode(e,t){const i={};if(i.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],i.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(i.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(i.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(i.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){i.uv=[];let r=0;for(;e.LayerElementUV[r];)e.LayerElementUV[r].UV&&i.uv.push(this.parseUVs(e.LayerElementUV[r])),r++}return i.weightTable={},t!==null&&(i.skeleton=t,t.rawBones.forEach(function(r,s){r.indices.forEach(function(o,a){i.weightTable[o]===void 0&&(i.weightTable[o]=[]),i.weightTable[o].push({id:s,weight:r.weights[a]})})})),i}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let i=0,r=0,s=!1,o=[],a=[],l=[],c=[],u=[],h=[];const f=this;return e.vertexIndices.forEach(function(d,g){let v,m=!1;d<0&&(d=d^-1,m=!0);let p=[],S=[];if(o.push(d*3,d*3+1,d*3+2),e.color){const _=zs(g,i,d,e.color);l.push(_[0],_[1],_[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(_){S.push(_.weight),p.push(_.id)}),S.length>4){s||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),s=!0);const _=[0,0,0,0],y=[0,0,0,0];S.forEach(function(b,C){let A=b,U=p[C];y.forEach(function(E,T,G){if(A>E){G[T]=A,A=E;const Y=_[T];_[T]=U,U=Y}})}),p=_,S=y}for(;S.length<4;)S.push(0),p.push(0);for(let _=0;_<4;++_)u.push(S[_]),h.push(p[_])}if(e.normal){const _=zs(g,i,d,e.normal);a.push(_[0],_[1],_[2])}e.material&&e.material.mappingType!=="AllSame"&&(v=zs(g,i,d,e.material)[0]),e.uv&&e.uv.forEach(function(_,y){const b=zs(g,i,d,_);c[y]===void 0&&(c[y]=[]),c[y].push(b[0]),c[y].push(b[1])}),r++,m&&(f.genFace(t,e,o,v,a,l,c,u,h,r),i++,r=0,o=[],a=[],l=[],c=[],u=[],h=[])}),t}genFace(e,t,i,r,s,o,a,l,c,u){for(let h=2;h<u;h++)e.vertex.push(t.vertexPositions[i[0]]),e.vertex.push(t.vertexPositions[i[1]]),e.vertex.push(t.vertexPositions[i[2]]),e.vertex.push(t.vertexPositions[i[(h-1)*3]]),e.vertex.push(t.vertexPositions[i[(h-1)*3+1]]),e.vertex.push(t.vertexPositions[i[(h-1)*3+2]]),e.vertex.push(t.vertexPositions[i[h*3]]),e.vertex.push(t.vertexPositions[i[h*3+1]]),e.vertex.push(t.vertexPositions[i[h*3+2]]),t.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(h-1)*4]),e.vertexWeights.push(l[(h-1)*4+1]),e.vertexWeights.push(l[(h-1)*4+2]),e.vertexWeights.push(l[(h-1)*4+3]),e.vertexWeights.push(l[h*4]),e.vertexWeights.push(l[h*4+1]),e.vertexWeights.push(l[h*4+2]),e.vertexWeights.push(l[h*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(h-1)*4]),e.weightsIndices.push(c[(h-1)*4+1]),e.weightsIndices.push(c[(h-1)*4+2]),e.weightsIndices.push(c[(h-1)*4+3]),e.weightsIndices.push(c[h*4]),e.weightsIndices.push(c[h*4+1]),e.weightsIndices.push(c[h*4+2]),e.weightsIndices.push(c[h*4+3])),t.color&&(e.colors.push(o[0]),e.colors.push(o[1]),e.colors.push(o[2]),e.colors.push(o[(h-1)*3]),e.colors.push(o[(h-1)*3+1]),e.colors.push(o[(h-1)*3+2]),e.colors.push(o[h*3]),e.colors.push(o[h*3+1]),e.colors.push(o[h*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(r),e.materialIndex.push(r),e.materialIndex.push(r)),t.normal&&(e.normal.push(s[0]),e.normal.push(s[1]),e.normal.push(s[2]),e.normal.push(s[(h-1)*3]),e.normal.push(s[(h-1)*3+1]),e.normal.push(s[(h-1)*3+2]),e.normal.push(s[h*3]),e.normal.push(s[h*3+1]),e.normal.push(s[h*3+2])),t.uv&&t.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(a[d][0]),e.uvs[d].push(a[d][1]),e.uvs[d].push(a[d][(h-1)*2]),e.uvs[d].push(a[d][(h-1)*2+1]),e.uvs[d].push(a[d][h*2]),e.uvs[d].push(a[d][h*2+1])})}addMorphTargets(e,t,i,r){if(i.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const s=this;i.forEach(function(o){o.rawTargets.forEach(function(a){const l=qe.Objects.Geometry[a.geoID];l!==void 0&&s.genMorphGeometry(e,t,l,r,a.name)})})}genMorphGeometry(e,t,i,r,s){const o=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],a=i.Vertices!==void 0?i.Vertices.a:[],l=i.Indexes!==void 0?i.Indexes.a:[],c=e.attributes.position.count*3,u=new Float32Array(c);for(let g=0;g<l.length;g++){const v=l[g]*3;u[v]=a[g*3],u[v+1]=a[g*3+1],u[v+2]=a[g*3+2]}const h={vertexIndices:o,vertexPositions:u},f=this.genBuffers(h),d=new rt(f.vertex,3);d.name=s||i.attrName,d.applyMatrix4(r),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,i=e.ReferenceInformationType,r=e.Normals.a;let s=[];return i==="IndexToDirect"&&("NormalIndex"in e?s=e.NormalIndex.a:"NormalsIndex"in e&&(s=e.NormalsIndex.a)),{dataSize:3,buffer:r,indices:s,mappingType:t,referenceType:i}}parseUVs(e){const t=e.MappingInformationType,i=e.ReferenceInformationType,r=e.UV.a;let s=[];return i==="IndexToDirect"&&(s=e.UVIndex.a),{dataSize:2,buffer:r,indices:s,mappingType:t,referenceType:i}}parseVertexColors(e){const t=e.MappingInformationType,i=e.ReferenceInformationType,r=e.Colors.a;let s=[];return i==="IndexToDirect"&&(s=e.ColorIndex.a),{dataSize:4,buffer:r,indices:s,mappingType:t,referenceType:i}}parseMaterialIndices(e){const t=e.MappingInformationType,i=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:i};const r=e.Materials.a,s=[];for(let o=0;o<r.length;++o)s.push(o);return{dataSize:1,buffer:r,indices:s,mappingType:t,referenceType:i}}parseNurbsGeometry(e){if(fu===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new Mt;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new Mt;const i=t-1,r=e.KnotVector.a,s=[],o=e.Points.a;for(let h=0,f=o.length;h<f;h+=4)s.push(new Ye().fromArray(o,h));let a,l;if(e.Form==="Closed")s.push(s[0]);else if(e.Form==="Periodic"){a=i,l=r.length-1-a;for(let h=0;h<i;++h)s.push(s[h])}const u=new fu(i,r,s,a,l).getPoints(s.length*12);return new Mt().setFromPoints(u)}}class gv{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const i in t){const r=t[i],s=this.addClip(r);e.push(s)}return e}parseClips(){if(qe.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=qe.Objects.AnimationCurveNode,t=new Map;for(const i in e){const r=e[i];if(r.attrName.match(/S|R|T|DeformPercent/)!==null){const s={id:r.id,attr:r.attrName,curves:{}};t.set(s.id,s)}}return t}parseAnimationCurves(e){const t=qe.Objects.AnimationCurve;for(const i in t){const r={id:t[i].id,times:t[i].KeyTime.a.map(Mv),values:t[i].KeyValueFloat.a},s=gt.get(r.id);if(s!==void 0){const o=s.parents[0].ID,a=s.parents[0].relationship;a.match(/X/)?e.get(o).curves.x=r:a.match(/Y/)?e.get(o).curves.y=r:a.match(/Z/)?e.get(o).curves.z=r:a.match(/d|DeformPercent/)&&e.has(o)&&(e.get(o).curves.morph=r)}}}parseAnimationLayers(e){const t=qe.Objects.AnimationLayer,i=new Map;for(const r in t){const s=[],o=gt.get(parseInt(r));o!==void 0&&(o.children.forEach(function(l,c){if(e.has(l.ID)){const u=e.get(l.ID);if(u.curves.x!==void 0||u.curves.y!==void 0||u.curves.z!==void 0){if(s[c]===void 0){const h=gt.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(h!==void 0){const f=qe.Objects.Model[h.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?Qe.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Jt.traverse(function(g){g.ID===f.id&&(d.transform=g.matrix,g.userData.transformData&&(d.eulerOrder=g.userData.transformData.eulerOrder))}),d.transform||(d.transform=new Le),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),s[c]=d}}s[c]&&(s[c][u.attr]=u)}else if(u.curves.morph!==void 0){if(s[c]===void 0){const h=gt.get(l.ID).parents.filter(function(p){return p.relationship!==void 0})[0].ID,f=gt.get(h).parents[0].ID,d=gt.get(f).parents[0].ID,g=gt.get(d).parents[0].ID,v=qe.Objects.Model[g],m={modelName:v.attrName?Qe.sanitizeNodeName(v.attrName):"",morphName:qe.Objects.Deformer[h].attrName};s[c]=m}s[c][u.attr]=u}}}),i.set(parseInt(r),s))}return i}parseAnimStacks(e){const t=qe.Objects.AnimationStack,i={};for(const r in t){const s=gt.get(parseInt(r)).children;s.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=e.get(s[0].ID);i[r]={name:t[r].attrName,layer:o}}return i}addClip(e){let t=[];const i=this;return e.layer.forEach(function(r){t=t.concat(i.generateTracks(r))}),new mm(e.name,-1,t)}generateTracks(e){const t=[];let i=new L,r=new vn,s=new L;if(e.transform&&e.transform.decompose(i,r,s),i=i.toArray(),r=new li().setFromQuaternion(r,e.eulerOrder).toArray(),s=s.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.T.curves,i,"position");o!==void 0&&t.push(o)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const o=this.generateRotationTrack(e.modelName,e.R.curves,r,e.preRotation,e.postRotation,e.eulerOrder);o!==void 0&&t.push(o)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");o!==void 0&&t.push(o)}if(e.DeformPercent!==void 0){const o=this.generateMorphTrack(e);o!==void 0&&t.push(o)}return t}generateVectorTrack(e,t,i,r){const s=this.getTimesForAllAxes(t),o=this.getKeyframeTrackValues(s,t,i);return new Vr(e+"."+r,s,o)}generateRotationTrack(e,t,i,r,s,o){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(nn.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(nn.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(nn.degToRad));const a=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(a,t,i);r!==void 0&&(r=r.map(nn.degToRad),r.push(o),r=new li().fromArray(r),r=new vn().setFromEuler(r)),s!==void 0&&(s=s.map(nn.degToRad),s.push(o),s=new li().fromArray(s),s=new vn().setFromEuler(s).invert());const c=new vn,u=new li,h=[];for(let f=0;f<l.length;f+=3)u.set(l[f],l[f+1],l[f+2],o),c.setFromEuler(u),r!==void 0&&c.premultiply(r),s!==void 0&&c.multiply(s),c.toArray(h,f/3*4);return new er(e+".quaternion",a,h)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,i=t.values.map(function(s){return s/100}),r=Jt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Hr(e.modelName+".morphTargetInfluences["+r+"]",t.times,i)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(i,r){return i-r}),t.length>1){let i=1,r=t[0];for(let s=1;s<t.length;s++){const o=t[s];o!==r&&(t[i]=o,r=o,i++)}t=t.slice(0,i)}return t}getKeyframeTrackValues(e,t,i){const r=i,s=[];let o=-1,a=-1,l=-1;return e.forEach(function(c){if(t.x&&(o=t.x.times.indexOf(c)),t.y&&(a=t.y.times.indexOf(c)),t.z&&(l=t.z.times.indexOf(c)),o!==-1){const u=t.x.values[o];s.push(u),r[0]=u}else s.push(r[0]);if(a!==-1){const u=t.y.values[a];s.push(u),r[1]=u}else s.push(r[1]);if(l!==-1){const u=t.z.values[l];s.push(u),r[2]=u}else s.push(r[2])}),s}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const i=e.values[t-1],r=e.values[t]-i,s=Math.abs(r);if(s>=180){const o=s/180,a=r/o;let l=i+a;const c=e.times[t-1],h=(e.times[t]-c)/o;let f=c+h;const d=[],g=[];for(;f<e.times[t];)d.push(f),f+=h,g.push(l),l+=a;e.times=mu(e.times,t,d),e.values=mu(e.values,t,g)}}}}class vv{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new S0,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,i=e.split(/[\r\n]+/);return i.forEach(function(r,s){const o=r.match(/^[\s\t]*;/),a=r.match(/^[\s\t]*$/);if(o||a)return;const l=r.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),c=r.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=r.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(r,l):c?t.parseNodeProperty(r,c,i[++s]):u?t.popStack():r.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(r)}),this.allNodes}parseNodeBegin(e,t){const i=t[1].trim().replace(/^"/,"").replace(/"$/,""),r=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),s={name:i},o=this.parseNodeAttr(r),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(i,s):i in a?(i==="PoseNode"?a.PoseNode.push(s):a[i].id!==void 0&&(a[i]={},a[i][a[i].id]=a[i]),o.id!==""&&(a[i][o.id]=s)):typeof o.id=="number"?(a[i]={},a[i][o.id]=s):i!=="Properties70"&&(i==="PoseNode"?a[i]=[s]:a[i]=s),typeof o.id=="number"&&(s.id=o.id),o.name!==""&&(s.attrName=o.name),o.type!==""&&(s.attrType=o.type),this.pushStack(s)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let i="",r="";return e.length>1&&(i=e[1].replace(/^(\w+)::/,""),r=e[2]),{id:t,name:i,type:r}}parseNodeProperty(e,t,i){let r=t[1].replace(/^"/,"").replace(/"$/,"").trim(),s=t[2].replace(/^"/,"").replace(/"$/,"").trim();r==="Content"&&s===","&&(s=i.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(e,r,s);return}if(r==="C"){const l=s.split(",").slice(1),c=parseInt(l[0]),u=parseInt(l[1]);let h=s.split(",").slice(3);h=h.map(function(f){return f.trim().replace(/^"/,"")}),r="connections",s=[c,u],Ev(s,h),o[r]===void 0&&(o[r]=[])}r==="Node"&&(o.id=s),r in o&&Array.isArray(o[r])?o[r].push(s):r!=="a"?o[r]=s:o.a=s,this.setCurrentProp(o,r),r==="a"&&s.slice(-1)!==","&&(o.a=Fa(s))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=Fa(t.a))}parseNodeSpecialProperty(e,t,i){const r=i.split('",').map(function(u){return u.trim().replace(/^\"/,"").replace(/\s/,"_")}),s=r[0],o=r[1],a=r[2],l=r[3];let c=r[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=Fa(c);break}this.getPrevNode()[s]={type:o,type2:a,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),s)}}class _v{parse(e){const t=new du(e);t.skip(23);const i=t.getUint32();if(i<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+i);const r=new S0;for(;!this.endOfContent(t);){const s=this.parseNode(t,i);s!==null&&r.add(s.name,s)}return r}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const i={},r=t>=7500?e.getUint64():e.getUint32(),s=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const o=e.getUint8(),a=e.getString(o);if(r===0)return null;const l=[];for(let f=0;f<s;f++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",u=l.length>1?l[1]:"",h=l.length>2?l[2]:"";for(i.singleProperty=s===1&&e.getOffset()===r;r>e.getOffset();){const f=this.parseNode(e,t);f!==null&&this.parseSubNode(a,i,f)}return i.propertyList=l,typeof c=="number"&&(i.id=c),u!==""&&(i.attrName=u),h!==""&&(i.attrType=h),a!==""&&(i.name=a),i}parseSubNode(e,t,i){if(i.singleProperty===!0){const r=i.propertyList[0];Array.isArray(r)?(t[i.name]=i,i.a=r):t[i.name]=r}else if(e==="Connections"&&i.name==="C"){const r=[];i.propertyList.forEach(function(s,o){o!==0&&r.push(s)}),t.connections===void 0&&(t.connections=[]),t.connections.push(r)}else if(i.name==="Properties70")Object.keys(i).forEach(function(s){t[s]=i[s]});else if(e==="Properties70"&&i.name==="P"){let r=i.propertyList[0],s=i.propertyList[1];const o=i.propertyList[2],a=i.propertyList[3];let l;r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),s==="Color"||s==="ColorRGB"||s==="Vector"||s==="Vector3D"||s.indexOf("Lcl_")===0?l=[i.propertyList[4],i.propertyList[5],i.propertyList[6]]:l=i.propertyList[4],t[r]={type:s,type2:o,flag:a,value:l}}else t[i.name]===void 0?typeof i.id=="number"?(t[i.name]={},t[i.name][i.id]=i):t[i.name]=i:i.name==="PoseNode"?(Array.isArray(t[i.name])||(t[i.name]=[t[i.name]]),t[i.name].push(i)):t[i.name][i.id]===void 0&&(t[i.name][i.id]=i)}parseProperty(e){const t=e.getString(1);let i;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return i=e.getUint32(),e.getArrayBuffer(i);case"S":return i=e.getUint32(),e.getString(i);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const r=e.getUint32(),s=e.getUint32(),o=e.getUint32();if(s===0)switch(t){case"b":case"c":return e.getBooleanArray(r);case"d":return e.getFloat64Array(r);case"f":return e.getFloat32Array(r);case"i":return e.getInt32Array(r);case"l":return e.getInt64Array(r)}const a=Fg(new Uint8Array(e.getArrayBuffer(o))),l=new du(a.buffer);switch(t){case"b":case"c":return l.getBooleanArray(r);case"d":return l.getFloat64Array(r);case"f":return l.getFloat32Array(r);case"i":return l.getInt32Array(r);case"l":return l.getInt64Array(r)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class du{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let i=0;i<e;i++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let i=0;i<e;i++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let i=0;i<e;i++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let i=0;i<e;i++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let i=0;i<e;i++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let r=0;r<e;r++)t[r]=this.getUint8();const i=t.indexOf(0);return i>=0&&(t=t.slice(0,i)),ul.decodeText(new Uint8Array(t))}}class S0{add(e,t){this[e]=t}}function xv(n){const e="Kaydara FBX Binary  \0";return n.byteLength>=e.length&&e===T0(n,0,e.length)}function yv(n){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function i(r){const s=n[r-1];return n=n.slice(t+r),t++,s}for(let r=0;r<e.length;++r)if(i(1)===e[r])return!1;return!0}function pu(n){const e=/FBXVersion: (\d+)/,t=n.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function Mv(n){return n/46186158e3}const Sv=[];function zs(n,e,t,i){let r;switch(i.mappingType){case"ByPolygonVertex":r=n;break;case"ByPolygon":r=e;break;case"ByVertice":r=t;break;case"AllSame":r=i.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+i.mappingType)}i.referenceType==="IndexToDirect"&&(r=i.indices[r]);const s=r*i.dataSize,o=s+i.dataSize;return bv(Sv,i.buffer,s,o)}const Na=new li,E1=new L;function E0(n){const e=new Le,t=new Le,i=new Le,r=new Le,s=new Le,o=new Le,a=new Le,l=new Le,c=new Le,u=new Le,h=new Le,f=new Le,d=n.inheritType?n.inheritType:0;if(n.translation&&e.setPosition(E1.fromArray(n.translation)),n.preRotation){const T=n.preRotation.map(nn.degToRad);T.push(n.eulerOrder),t.makeRotationFromEuler(Na.fromArray(T))}if(n.rotation){const T=n.rotation.map(nn.degToRad);T.push(n.eulerOrder),i.makeRotationFromEuler(Na.fromArray(T))}if(n.postRotation){const T=n.postRotation.map(nn.degToRad);T.push(n.eulerOrder),r.makeRotationFromEuler(Na.fromArray(T)),r.invert()}n.scale&&s.scale(E1.fromArray(n.scale)),n.scalingOffset&&a.setPosition(E1.fromArray(n.scalingOffset)),n.scalingPivot&&o.setPosition(E1.fromArray(n.scalingPivot)),n.rotationOffset&&l.setPosition(E1.fromArray(n.rotationOffset)),n.rotationPivot&&c.setPosition(E1.fromArray(n.rotationPivot)),n.parentMatrixWorld&&(h.copy(n.parentMatrix),u.copy(n.parentMatrixWorld));const g=t.clone().multiply(i).multiply(r),v=new Le;v.extractRotation(u);const m=new Le;m.copyPosition(u);const p=m.clone().invert().multiply(u),S=v.clone().invert().multiply(p),_=s,y=new Le;if(d===0)y.copy(v).multiply(g).multiply(S).multiply(_);else if(d===1)y.copy(v).multiply(S).multiply(g).multiply(_);else{const G=new Le().scale(new L().setFromMatrixScale(h)).clone().invert(),Y=S.clone().multiply(G);y.copy(v).multiply(g).multiply(Y).multiply(_)}const b=c.clone().invert(),C=o.clone().invert();let A=e.clone().multiply(l).multiply(c).multiply(t).multiply(i).multiply(r).multiply(b).multiply(a).multiply(o).multiply(s).multiply(C);const U=new Le().copyPosition(A),E=u.clone().multiply(U);return f.copyPosition(E),A=f.clone().multiply(y),A.premultiply(u.invert()),A}function b0(n){n=n||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return n===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[n]}function Fa(n){return n.split(",").map(function(t){return parseFloat(t)})}function T0(n,e,t){return e===void 0&&(e=0),t===void 0&&(t=n.byteLength),ul.decodeText(new Uint8Array(n,e,t))}function Ev(n,e){for(let t=0,i=n.length,r=e.length;t<r;t++,i++)n[i]=e[t]}function bv(n,e,t,i){for(let r=t,s=0;r<i;r++,s++)n[s]=e[r];return n}function mu(n,e,t){return n.slice(0,e).concat(t).concat(n.slice(e))}var Tv=Object.defineProperty,wv=(n,e,t)=>e in n?Tv(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,vl=(n,e,t)=>(wv(n,typeof e!="symbol"?e+"":e,t),t);class Av extends nr{constructor(e){super(e)}load(e,t,i,r){const s=new t0(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,o=>{if(typeof o!="string")throw new Error("unsupported data type");const a=JSON.parse(o),l=this.parse(a);t&&t(l)},i,r)}loadAsync(e,t){return super.loadAsync(e,t)}parse(e){return new _l(e)}}class _l{constructor(e){vl(this,"data"),this.data=e}generateShapes(e,t=100,i){const r=[],s={letterSpacing:0,lineHeight:1,...i},o=Cv(e,t,this.data,s);for(let a=0,l=o.length;a<l;a++)Array.prototype.push.apply(r,o[a].toShapes(!1));return r}}vl(_l,"isFont");vl(_l,"type");function Cv(n,e,t,i){const r=Array.from(n),s=e/t.resolution,o=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*s,a=[];let l=0,c=0;for(let u=0;u<r.length;u++){const h=r[u];if(h===`
`)l=0,c-=o*i.lineHeight;else{const f=Rv(h,s,l,c,t);f&&(l+=f.offsetX+i.letterSpacing,a.push(f.path))}}return a}function Rv(n,e,t,i,r){const s=r.glyphs[n]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+n+'" does not exists in font family '+r.familyName+".");return}const o=new zm;let a,l,c,u,h,f,d,g;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,p=v.length;m<p;)switch(v[m++]){case"m":a=parseInt(v[m++])*e+t,l=parseInt(v[m++])*e+i,o.moveTo(a,l);break;case"l":a=parseInt(v[m++])*e+t,l=parseInt(v[m++])*e+i,o.lineTo(a,l);break;case"q":c=parseInt(v[m++])*e+t,u=parseInt(v[m++])*e+i,h=parseInt(v[m++])*e+t,f=parseInt(v[m++])*e+i,o.quadraticCurveTo(h,f,c,u);break;case"b":c=parseInt(v[m++])*e+t,u=parseInt(v[m++])*e+i,h=parseInt(v[m++])*e+t,f=parseInt(v[m++])*e+i,d=parseInt(v[m++])*e+t,g=parseInt(v[m++])*e+i,o.bezierCurveTo(h,f,d,g,c,u);break}}return{offsetX:s.ha*e,path:o}}const gu=new jn,ks=new L;class w0 extends wm{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new rt(e,3)),this.setAttribute("uv",new rt(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new d2(t,6,1);return this.setAttribute("instanceStart",new Ti(i,3,0)),this.setAttribute("instanceEnd",new Ti(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new d2(t,6,1);return this.setAttribute("instanceColorStart",new Ti(i,3,0)),this.setAttribute("instanceColorEnd",new Ti(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new sm(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new jn);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),gu.setFromBufferAttribute(t),this.boundingBox.union(gu))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new pi),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let r=0;for(let s=0,o=e.count;s<o;s++)ks.fromBufferAttribute(e,s),r=Math.max(r,i.distanceToSquared(ks)),ks.fromBufferAttribute(t,s),r=Math.max(r,i.distanceToSquared(ks));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}class E2 extends w0{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let r=0;r<t;r+=3)i[2*r]=e[r],i[2*r+1]=e[r+1],i[2*r+2]=e[r+2],i[2*r+3]=e[r+3],i[2*r+4]=e[r+4],i[2*r+5]=e[r+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let r=0;r<t;r+=3)i[2*r]=e[r],i[2*r+1]=e[r+1],i[2*r+2]=e[r+2],i[2*r+3]=e[r+3],i[2*r+4]=e[r+4],i[2*r+5]=e[r+5];return super.setColors(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class xl extends yt{constructor(e){super({type:"LineMaterial",uniforms:fi.clone(fi.merge([ye.common,ye.fog,{worldUnits:{value:1},linewidth:{value:1},resolution:{value:new fe(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}}])),vertexShader:`
				#include <common>
				#include <color_pars_vertex>
				#include <fog_pars_vertex>
				#include <logdepthbuf_pars_vertex>
				#include <clipping_planes_pars_vertex>

				uniform float linewidth;
				uniform vec2 resolution;

				attribute vec3 instanceStart;
				attribute vec3 instanceEnd;

				attribute vec3 instanceColorStart;
				attribute vec3 instanceColorEnd;

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#ifdef USE_DASH

					uniform float dashScale;
					attribute float instanceDistanceStart;
					attribute float instanceDistanceEnd;
					varying float vLineDistance;

				#endif

				void trimSegment( const in vec4 start, inout vec4 end ) {

					// trim end segment so it terminates between the camera plane and the near plane

					// conservative estimate of the near plane
					float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
					float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
					float nearEstimate = - 0.5 * b / a;

					float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

					end.xyz = mix( start.xyz, end.xyz, alpha );

				}

				void main() {

					#ifdef USE_COLOR

						vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

					#endif

					#ifdef USE_DASH

						vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
						vUv = uv;

					#endif

					float aspect = resolution.x / resolution.y;

					// camera space
					vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
					vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

					#ifdef WORLD_UNITS

						worldStart = start.xyz;
						worldEnd = end.xyz;

					#else

						vUv = uv;

					#endif

					// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
					// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
					// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
					// perhaps there is a more elegant solution -- WestLangley

					bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

					if ( perspective ) {

						if ( start.z < 0.0 && end.z >= 0.0 ) {

							trimSegment( start, end );

						} else if ( end.z < 0.0 && start.z >= 0.0 ) {

							trimSegment( end, start );

						}

					}

					// clip space
					vec4 clipStart = projectionMatrix * start;
					vec4 clipEnd = projectionMatrix * end;

					// ndc space
					vec3 ndcStart = clipStart.xyz / clipStart.w;
					vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

					// direction
					vec2 dir = ndcEnd.xy - ndcStart.xy;

					// account for clip-space aspect ratio
					dir.x *= aspect;
					dir = normalize( dir );

					#ifdef WORLD_UNITS

						// get the offset direction as perpendicular to the view vector
						vec3 worldDir = normalize( end.xyz - start.xyz );
						vec3 offset;
						if ( position.y < 0.5 ) {

							offset = normalize( cross( start.xyz, worldDir ) );

						} else {

							offset = normalize( cross( end.xyz, worldDir ) );

						}

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

						// don't extend the line if we're rendering dashes because we
						// won't be rendering the endcaps
						#ifndef USE_DASH

							// extend the line bounds to encompass  endcaps
							start.xyz += - worldDir * linewidth * 0.5;
							end.xyz += worldDir * linewidth * 0.5;

							// shift the position of the quad so it hugs the forward edge of the line
							offset.xy -= dir * forwardOffset;
							offset.z += 0.5;

						#endif

						// endcaps
						if ( position.y > 1.0 || position.y < 0.0 ) {

							offset.xy += dir * 2.0 * forwardOffset;

						}

						// adjust for linewidth
						offset *= linewidth * 0.5;

						// set the world position
						worldPos = ( position.y < 0.5 ) ? start : end;
						worldPos.xyz += offset;

						// project the worldpos
						vec4 clip = projectionMatrix * worldPos;

						// shift the depth of the projected points so the line
						// segments overlap neatly
						vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
						clip.z = clipPose.z * clip.w;

					#else

						vec2 offset = vec2( dir.y, - dir.x );
						// undo aspect ratio adjustment
						dir.x /= aspect;
						offset.x /= aspect;

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						// endcaps
						if ( position.y < 0.0 ) {

							offset += - dir;

						} else if ( position.y > 1.0 ) {

							offset += dir;

						}

						// adjust for linewidth
						offset *= linewidth;

						// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
						offset /= resolution.y;

						// select end
						vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

						// back to clip space
						offset *= clip.w;

						clip.xy += offset;

					#endif

					gl_Position = clip;

					vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

					#include <logdepthbuf_vertex>
					#include <clipping_planes_vertex>
					#include <fog_vertex>

				}
			`,fragmentShader:`
				uniform vec3 diffuse;
				uniform float opacity;
				uniform float linewidth;

				#ifdef USE_DASH

					uniform float dashOffset;
					uniform float dashSize;
					uniform float gapSize;

				#endif

				varying float vLineDistance;

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#include <common>
				#include <color_pars_fragment>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <clipping_planes_pars_fragment>

				vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

					float mua;
					float mub;

					vec3 p13 = p1 - p3;
					vec3 p43 = p4 - p3;

					vec3 p21 = p2 - p1;

					float d1343 = dot( p13, p43 );
					float d4321 = dot( p43, p21 );
					float d1321 = dot( p13, p21 );
					float d4343 = dot( p43, p43 );
					float d2121 = dot( p21, p21 );

					float denom = d2121 * d4343 - d4321 * d4321;

					float numer = d1343 * d4321 - d1321 * d4343;

					mua = numer / denom;
					mua = clamp( mua, 0.0, 1.0 );
					mub = ( d1343 + d4321 * ( mua ) ) / d4343;
					mub = clamp( mub, 0.0, 1.0 );

					return vec2( mua, mub );

				}

				void main() {

					#include <clipping_planes_fragment>

					#ifdef USE_DASH

						if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

						if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

					#endif

					float alpha = opacity;

					#ifdef WORLD_UNITS

						// Find the closest points on the view ray and the line segment
						vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
						vec3 lineDir = worldEnd - worldStart;
						vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

						vec3 p1 = worldStart + lineDir * params.x;
						vec3 p2 = rayEnd * params.y;
						vec3 delta = p1 - p2;
						float len = length( delta );
						float norm = len / linewidth;

						#ifndef USE_DASH

							#ifdef USE_ALPHA_TO_COVERAGE

								float dnorm = fwidth( norm );
								alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

							#else

								if ( norm > 0.5 ) {

									discard;

								}

							#endif

						#endif

					#else

						#ifdef USE_ALPHA_TO_COVERAGE

							// artifacts appear on some hardware if a derivative is taken within a conditional
							float a = vUv.x;
							float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
							float len2 = a * a + b * b;
							float dlen = fwidth( len2 );

							if ( abs( vUv.y ) > 1.0 ) {

								alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

							}

						#else

							if ( abs( vUv.y ) > 1.0 ) {

								float a = vUv.x;
								float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
								float len2 = a * a + b * b;

								if ( len2 > 1.0 ) discard;

							}

						#endif

					#endif

					vec4 diffuseColor = vec4( diffuse, alpha );

					#include <logdepthbuf_fragment>
					#include <color_fragment>

					gl_FragColor = vec4( diffuseColor.rgb, alpha );

					#include <tonemapping_fragment>
					#include <${parseInt($1.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment"}>
					#include <fog_fragment>
					#include <premultiplied_alpha_fragment>

				}
			`,clipping:!0}),this.isLineMaterial=!0,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(t){t===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashed:{enumerable:!0,get:function(){return"USE_DASH"in this.defines},set(t){!!t!="USE_DASH"in this.defines&&(this.needsUpdate=!0),t===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},alphaToCoverage:{enumerable:!0,get:function(){return"USE_ALPHA_TO_COVERAGE"in this.defines},set:function(t){!!t!="USE_ALPHA_TO_COVERAGE"in this.defines&&(this.needsUpdate=!0),t===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(e)}}const vu=new L,_u=new L,It=new Ye,Dt=new Ye,On=new Ye,Ba=new L,za=new Le,zt=new Bm,xu=new L,Hs=new jn,Vs=new pi,Nn=new Ye;let Hn,b2,A0,Qi;function yu(n,e,t){return Nn.set(0,0,-e,1).applyMatrix4(n.projectionMatrix),Nn.multiplyScalar(1/Nn.w),Nn.x=Qi/t.width,Nn.y=Qi/t.height,Nn.applyMatrix4(n.projectionMatrixInverse),Nn.multiplyScalar(1/Nn.w),Math.abs(Math.max(Nn.x,Nn.y))}function Pv(n,e){for(let t=0,i=b2.count;t<i;t++){zt.start.fromBufferAttribute(b2,t),zt.end.fromBufferAttribute(A0,t);const r=new L,s=new L;Hn.distanceSqToSegment(zt.start,zt.end,s,r),s.distanceTo(r)<Qi*.5&&e.push({point:s,pointOnLine:r,distance:Hn.origin.distanceTo(s),object:n,face:null,faceIndex:t,uv:null,uv2:null})}}function Lv(n,e,t){const i=e.projectionMatrix,s=n.material.resolution,o=n.matrixWorld,a=n.geometry,l=a.attributes.instanceStart,c=a.attributes.instanceEnd,u=-e.near;Hn.at(1,On),On.w=1,On.applyMatrix4(e.matrixWorldInverse),On.applyMatrix4(i),On.multiplyScalar(1/On.w),On.x*=s.x/2,On.y*=s.y/2,On.z=0,Ba.copy(On),za.multiplyMatrices(e.matrixWorldInverse,o);for(let h=0,f=l.count;h<f;h++){if(It.fromBufferAttribute(l,h),Dt.fromBufferAttribute(c,h),It.w=1,Dt.w=1,It.applyMatrix4(za),Dt.applyMatrix4(za),It.z>u&&Dt.z>u)continue;if(It.z>u){const S=It.z-Dt.z,_=(It.z-u)/S;It.lerp(Dt,_)}else if(Dt.z>u){const S=Dt.z-It.z,_=(Dt.z-u)/S;Dt.lerp(It,_)}It.applyMatrix4(i),Dt.applyMatrix4(i),It.multiplyScalar(1/It.w),Dt.multiplyScalar(1/Dt.w),It.x*=s.x/2,It.y*=s.y/2,Dt.x*=s.x/2,Dt.y*=s.y/2,zt.start.copy(It),zt.start.z=0,zt.end.copy(Dt),zt.end.z=0;const g=zt.closestPointToPointParameter(Ba,!0);zt.at(g,xu);const v=nn.lerp(It.z,Dt.z,g),m=v>=-1&&v<=1,p=Ba.distanceTo(xu)<Qi*.5;if(m&&p){zt.start.fromBufferAttribute(l,h),zt.end.fromBufferAttribute(c,h),zt.start.applyMatrix4(o),zt.end.applyMatrix4(o);const S=new L,_=new L;Hn.distanceSqToSegment(zt.start,zt.end,_,S),t.push({point:_,pointOnLine:S,distance:Hn.origin.distanceTo(_),object:n,face:null,faceIndex:h,uv:null,uv2:null})}}}class Iv extends vt{constructor(e=new w0,t=new xl({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,r=new Float32Array(2*t.count);for(let o=0,a=0,l=t.count;o<l;o++,a+=2)vu.fromBufferAttribute(t,o),_u.fromBufferAttribute(i,o),r[a]=a===0?0:r[a-1],r[a+1]=r[a]+vu.distanceTo(_u);const s=new d2(r,2,1);return e.setAttribute("instanceDistanceStart",new Ti(s,1,0)),e.setAttribute("instanceDistanceEnd",new Ti(s,1,1)),this}raycast(e,t){const i=this.material.worldUnits,r=e.camera;r===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=e.params.Line2!==void 0&&e.params.Line2.threshold||0;Hn=e.ray;const o=this.matrixWorld,a=this.geometry,l=this.material;Qi=l.linewidth+s,b2=a.attributes.instanceStart,A0=a.attributes.instanceEnd,a.boundingSphere===null&&a.computeBoundingSphere(),Vs.copy(a.boundingSphere).applyMatrix4(o);let c;if(i)c=Qi*.5;else{const h=Math.max(r.near,Vs.distanceToPoint(Hn.origin));c=yu(r,h,l.resolution)}if(Vs.radius+=c,Hn.intersectsSphere(Vs)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),Hs.copy(a.boundingBox).applyMatrix4(o);let u;if(i)u=Qi*.5;else{const h=Math.max(r.near,Hs.distanceToPoint(Hn.origin));u=yu(r,h,l.resolution)}Hs.expandByScalar(u),Hn.intersectsBox(Hs)!==!1&&(i?Pv(this,t):Lv(this,r,t))}}class Mu extends Iv{constructor(e=new E2,t=new xl({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}class Dv{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const Uv=new qr(-1,1,1,-1,0,1),yl=new Mt;yl.setAttribute("position",new rt([-1,3,0,-1,-1,0,3,-1,0],3));yl.setAttribute("uv",new rt([0,2,0,0,2,0],2));class Ov{constructor(e){this._mesh=new vt(yl,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,Uv)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}const Nv={uniforms:{tDiffuse:{value:null},toneMappingExposure:{value:1}},vertexShader:`
		precision highp float;

		uniform mat4 modelViewMatrix;
		uniform mat4 projectionMatrix;

		attribute vec3 position;
		attribute vec2 uv;

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`
	
		precision highp float;

		uniform sampler2D tDiffuse;

		`+ze.tonemapping_pars_fragment+ze.colorspace_pars_fragment+`

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );

			// tone mapping

			#ifdef LINEAR_TONE_MAPPING

				gl_FragColor.rgb = LinearToneMapping( gl_FragColor.rgb );

			#elif defined( REINHARD_TONE_MAPPING )

				gl_FragColor.rgb = ReinhardToneMapping( gl_FragColor.rgb );

			#elif defined( CINEON_TONE_MAPPING )

				gl_FragColor.rgb = OptimizedCineonToneMapping( gl_FragColor.rgb );

			#elif defined( ACES_FILMIC_TONE_MAPPING )

				gl_FragColor.rgb = ACESFilmicToneMapping( gl_FragColor.rgb );

			#endif

			// color space

			#ifdef SRGB_COLOR_SPACE

				gl_FragColor = LinearTosRGB( gl_FragColor );

			#endif

		}`};class Fv extends Dv{constructor(){super();const e=Nv;this.uniforms=fi.clone(e.uniforms),this.material=new om({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.fsQuad=new Ov(this.material),this._outputColorSpace=null,this._toneMapping=null}render(e,t,i){this.uniforms.tDiffuse.value=i.texture,this.uniforms.toneMappingExposure.value=e.toneMappingExposure,(this._outputColorSpace!==e.outputColorSpace||this._toneMapping!==e.toneMapping)&&(this._outputColorSpace=e.outputColorSpace,this._toneMapping=e.toneMapping,this.material.defines={},this._outputColorSpace==ot&&(this.material.defines.SRGB_COLOR_SPACE=""),this._toneMapping===dh?this.material.defines.LINEAR_TONE_MAPPING="":this._toneMapping===ph?this.material.defines.REINHARD_TONE_MAPPING="":this._toneMapping===mh?this.material.defines.CINEON_TONE_MAPPING="":this._toneMapping===gh&&(this.material.defines.ACES_FILMIC_TONE_MAPPING=""),this.material.needsUpdate=!0),this.renderToScreen===!0?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}var Cr=Object.freeze({Linear:Object.freeze({None:function(n){return n},In:function(n){return this.None(n)},Out:function(n){return this.None(n)},InOut:function(n){return this.None(n)}}),Quadratic:Object.freeze({In:function(n){return n*n},Out:function(n){return n*(2-n)},InOut:function(n){return(n*=2)<1?.5*n*n:-.5*(--n*(n-2)-1)}}),Cubic:Object.freeze({In:function(n){return n*n*n},Out:function(n){return--n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n:.5*((n-=2)*n*n+2)}}),Quartic:Object.freeze({In:function(n){return n*n*n*n},Out:function(n){return 1- --n*n*n*n},InOut:function(n){return(n*=2)<1?.5*n*n*n*n:-.5*((n-=2)*n*n*n-2)}}),Quintic:Object.freeze({In:function(n){return n*n*n*n*n},Out:function(n){return--n*n*n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n*n*n:.5*((n-=2)*n*n*n*n+2)}}),Sinusoidal:Object.freeze({In:function(n){return 1-Math.sin((1-n)*Math.PI/2)},Out:function(n){return Math.sin(n*Math.PI/2)},InOut:function(n){return .5*(1-Math.sin(Math.PI*(.5-n)))}}),Exponential:Object.freeze({In:function(n){return n===0?0:Math.pow(1024,n-1)},Out:function(n){return n===1?1:1-Math.pow(2,-10*n)},InOut:function(n){return n===0?0:n===1?1:(n*=2)<1?.5*Math.pow(1024,n-1):.5*(-Math.pow(2,-10*(n-1))+2)}}),Circular:Object.freeze({In:function(n){return 1-Math.sqrt(1-n*n)},Out:function(n){return Math.sqrt(1- --n*n)},InOut:function(n){return(n*=2)<1?-.5*(Math.sqrt(1-n*n)-1):.5*(Math.sqrt(1-(n-=2)*n)+1)}}),Elastic:Object.freeze({In:function(n){return n===0?0:n===1?1:-Math.pow(2,10*(n-1))*Math.sin((n-1.1)*5*Math.PI)},Out:function(n){return n===0?0:n===1?1:Math.pow(2,-10*n)*Math.sin((n-.1)*5*Math.PI)+1},InOut:function(n){return n===0?0:n===1?1:(n*=2,n<1?-.5*Math.pow(2,10*(n-1))*Math.sin((n-1.1)*5*Math.PI):.5*Math.pow(2,-10*(n-1))*Math.sin((n-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(n){var e=1.70158;return n===1?1:n*n*((e+1)*n-e)},Out:function(n){var e=1.70158;return n===0?0:--n*n*((e+1)*n+e)+1},InOut:function(n){var e=2.5949095;return(n*=2)<1?.5*(n*n*((e+1)*n-e)):.5*((n-=2)*n*((e+1)*n+e)+2)}}),Bounce:Object.freeze({In:function(n){return 1-Cr.Bounce.Out(1-n)},Out:function(n){return n<1/2.75?7.5625*n*n:n<2/2.75?7.5625*(n-=1.5/2.75)*n+.75:n<2.5/2.75?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375},InOut:function(n){return n<.5?Cr.Bounce.In(n*2)*.5:Cr.Bounce.Out(n*2-1)*.5+.5}}),generatePow:function(n){return n===void 0&&(n=4),n=n<Number.EPSILON?Number.EPSILON:n,n=n>1e4?1e4:n,{In:function(e){return Math.pow(e,n)},Out:function(e){return 1-Math.pow(1-e,n)},InOut:function(e){return e<.5?Math.pow(e*2,n)/2:(1-Math.pow(2-e*2,n))/2+.5}}}}),vr=function(){return performance.now()},Bv=function(){function n(){this._tweens={},this._tweensAddedDuringUpdate={}}return n.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},n.prototype.removeAll=function(){this._tweens={}},n.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},n.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},n.prototype.update=function(e,t){e===void 0&&(e=vr()),t===void 0&&(t=!1);var i=Object.keys(this._tweens);if(i.length===0)return!1;for(;i.length>0;){this._tweensAddedDuringUpdate={};for(var r=0;r<i.length;r++){var s=this._tweens[i[r]],o=!t;s&&s.update(e,o)===!1&&!t&&delete this._tweens[i[r]]}i=Object.keys(this._tweensAddedDuringUpdate)}return!0},n}(),C1={Linear:function(n,e){var t=n.length-1,i=t*e,r=Math.floor(i),s=C1.Utils.Linear;return e<0?s(n[0],n[1],i):e>1?s(n[t],n[t-1],t-i):s(n[r],n[r+1>t?t:r+1],i-r)},Bezier:function(n,e){for(var t=0,i=n.length-1,r=Math.pow,s=C1.Utils.Bernstein,o=0;o<=i;o++)t+=r(1-e,i-o)*r(e,o)*n[o]*s(i,o);return t},CatmullRom:function(n,e){var t=n.length-1,i=t*e,r=Math.floor(i),s=C1.Utils.CatmullRom;return n[0]===n[t]?(e<0&&(r=Math.floor(i=t*(1+e))),s(n[(r-1+t)%t],n[r],n[(r+1)%t],n[(r+2)%t],i-r)):e<0?n[0]-(s(n[0],n[0],n[1],n[1],-i)-n[0]):e>1?n[t]-(s(n[t],n[t],n[t-1],n[t-1],i-t)-n[t]):s(n[r?r-1:0],n[r],n[t<r+1?t:r+1],n[t<r+2?t:r+2],i-r)},Utils:{Linear:function(n,e,t){return(e-n)*t+n},Bernstein:function(n,e){var t=C1.Utils.Factorial;return t(n)/t(e)/t(n-e)},Factorial:function(){var n=[1];return function(e){var t=1;if(n[e])return n[e];for(var i=e;i>1;i--)t*=i;return n[e]=t,t}}(),CatmullRom:function(n,e,t,i,r){var s=(t-n)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*t+s+o)*l+(-3*e+3*t-2*s-o)*a+s*r+e}}},zv=function(){function n(){}return n.nextId=function(){return n._nextId++},n._nextId=0,n}(),T2=new Bv,Gs=function(){function n(e,t){t===void 0&&(t=T2),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=Cr.Linear.None,this._interpolationFunction=C1.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=zv.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return n.prototype.getId=function(){return this._id},n.prototype.isPlaying=function(){return this._isPlaying},n.prototype.isPaused=function(){return this._isPaused},n.prototype.to=function(e,t){if(t===void 0&&(t=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t,this},n.prototype.duration=function(e){return e===void 0&&(e=1e3),this._duration=e,this},n.prototype.dynamic=function(e){return e===void 0&&(e=!1),this._isDynamic=e,this},n.prototype.start=function(e,t){if(e===void 0&&(e=vr()),t===void 0&&(t=!1),this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var i in this._valuesStartRepeat)this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){if(this._propertiesAreSetUp=!0,!this._isDynamic){var r={};for(var s in this._valuesEnd)r[s]=this._valuesEnd[s];this._valuesEnd=r}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},n.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},n.prototype._setupProperties=function(e,t,i,r,s){for(var o in i){var a=e[o],l=Array.isArray(a),c=l?"array":typeof a,u=!l&&Array.isArray(i[o]);if(!(c==="undefined"||c==="function")){if(u){var h=i[o];if(h.length===0)continue;for(var f=[a],d=0,g=h.length;d<g;d+=1){var v=this._handleRelativeValue(a,h[d]);if(isNaN(v)){u=!1,console.warn("Found invalid interpolation list. Skipping.");break}f.push(v)}u&&(i[o]=f)}if((c==="object"||l)&&a&&!u){t[o]=l?[]:{};var m=a;for(var p in m)t[o][p]=m[p];r[o]=l?[]:{};var h=i[o];if(!this._isDynamic){var S={};for(var p in h)S[p]=h[p];i[o]=h=S}this._setupProperties(m,t[o],h,r[o],s)}else(typeof t[o]>"u"||s)&&(t[o]=a),l||(t[o]*=1),u?r[o]=i[o].slice().reverse():r[o]=t[o]||0}}},n.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},n.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},n.prototype.pause=function(e){return e===void 0&&(e=vr()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=e,this._group&&this._group.remove(this),this)},n.prototype.resume=function(e){return e===void 0&&(e=vr()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},n.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},n.prototype.group=function(e){return e===void 0&&(e=T2),this._group=e,this},n.prototype.delay=function(e){return e===void 0&&(e=0),this._delayTime=e,this},n.prototype.repeat=function(e){return e===void 0&&(e=0),this._initialRepeat=e,this._repeat=e,this},n.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},n.prototype.yoyo=function(e){return e===void 0&&(e=!1),this._yoyo=e,this},n.prototype.easing=function(e){return e===void 0&&(e=Cr.Linear.None),this._easingFunction=e,this},n.prototype.interpolation=function(e){return e===void 0&&(e=C1.Linear),this._interpolationFunction=e,this},n.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},n.prototype.onStart=function(e){return this._onStartCallback=e,this},n.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},n.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},n.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},n.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},n.prototype.onStop=function(e){return this._onStopCallback=e,this},n.prototype.update=function(e,t){if(e===void 0&&(e=vr()),t===void 0&&(t=!0),this._isPaused)return!0;var i,r,s=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>s)return!1;t&&this.start(e,!0)}if(this._goToEnd=!1,e<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0),r=(e-this._startTime)/this._duration,r=this._duration===0||r>1?1:r;var o=this._easingFunction(r);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,o),this._onUpdateCallback&&this._onUpdateCallback(this._object,r),r===1)if(this._repeat>0){isFinite(this._repeat)&&this._repeat--;for(i in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[i]=="string"&&(this._valuesStartRepeat[i]=this._valuesStartRepeat[i]+parseFloat(this._valuesEnd[i])),this._yoyo&&this._swapEndStartRepeatValues(i),this._valuesStart[i]=this._valuesStartRepeat[i];return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var a=0,l=this._chainedTweens.length;a<l;a++)this._chainedTweens[a].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},n.prototype._updateProperties=function(e,t,i,r){for(var s in i)if(t[s]!==void 0){var o=t[s]||0,a=i[s],l=Array.isArray(e[s]),c=Array.isArray(a),u=!l&&c;u?e[s]=this._interpolationFunction(a,r):typeof a=="object"&&a?this._updateProperties(e[s],o,a,r):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(e[s]=o+(a-o)*r))}},n.prototype._handleRelativeValue=function(e,t){return typeof t!="string"?t:t.charAt(0)==="+"||t.charAt(0)==="-"?e+parseFloat(t):parseFloat(t)},n.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],i=this._valuesEnd[e];typeof i=="string"?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(i):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},n}(),Xn=T2;Xn.getAll.bind(Xn);Xn.removeAll.bind(Xn);Xn.add.bind(Xn);Xn.remove.bind(Xn);var kv=Xn.update.bind(Xn);class Hv{constructor(e,t,i,r){this.scene=e,this.camera=t,this.renderer=i,this.controls=r,this.map=null,this.center=[113.280637,23.125178],this.projection=cu().center(this.center).translate([0,0]),this.geoJson=bg,this.height=1,this.airModel=null,this.water=null,this.geometryPoints=null,this.vertices=[],this.currentMap={},this.cone=null,this.distance=null,this.speed=0,this.startPoint=new L,this.endPoint=new L,this.meshObj=new ci,this.scene.add(this.meshObj),this.outlinePass=null,this.composer=null,this.lineTime={value:0},this.textMeshGroup=new ci,this.timerProvinceClick=null,this.cubeBox=null,this.time=0,this.verticesPoint=[],this.curveObject=null,this.curveGeometry=null,this.isEnd=!1,this.speed=0,this.lineMaterial=null,this.init(),this.initAir(),this.initWater(),this.initSky(),this.createRain(),this.initEffect(),this.createBox(),window.addEventListener("click",s=>{console.log("e: ",s),clearTimeout(this.timerProvinceClick);const o=this.initRay(s);this.timerProvinceClick=setTimeout(()=>{this.changeClickMap(o,"click")},300)}),window.addEventListener("dblclick",s=>{console.log("dblclick: "),clearTimeout(this.timerProvinceClick);const o=this.initRay(s);o.object.parent.properties.level==="district"?setTimeout(()=>{this.cubeBox.layers.set(0)},4e3):this.cubeBox.layers.set(996),this.changeClickMap(o,"dblclick")})}init(){this.map=new ci,this.loadMap(this.geoJson),this.scene.add(this.map)}loadMap(e,t){this.textMeshGroup.children=[],e.features.forEach(i=>{const r=new lt;i.geometry.coordinates.forEach(a=>{a.forEach(l=>{const c=new wr,u=new el({color:"#ffffff"}),h=new Mt,f=[];for(let _=0;_<l.length;_++)if(l[_]instanceof Array){const[y,b]=this.projection(l[_]);_||c.moveTo(y,-b),c.lineTo(y,-b),f.push(y,-b,this.height)}h.setAttribute("position",new rt(f,3));const d={depth:this.height,bevelEnabled:!1},g=new Lo(c,d),v=new lm({color:"#0099FF",side:tn,roughness:0}),m=new yt({uniforms:{u_baseColor:{value:new we("#00FFCC")},u_bottomColor:{value:new we("#0099FF")}},vertexShader:`
                varying vec3 u_position;
                void main(){
                  u_position = position;

                  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
                }
              `,fragmentShader:`
                varying vec3 u_position;
                uniform vec3 u_baseColor;
                uniform vec3 u_bottomColor;
                void main(){
                  vec3 color = mix(u_baseColor, u_bottomColor,u_position.z / 0.7);
                  gl_FragColor = vec4(color, 1.0);
                }
              `,side:tn,transparent:!0}),p=new vt(g,[v,m]),S=new Gh(h,u);p.rotation.x=-Math.PI/2,S.rotation.x=-Math.PI/2,r.add(p,S)})}),r.properties=i.properties;const o=new L;new jn().setFromObject(r).getCenter(o),r.properties.compCenter=o,this.map.add(r)}),this.createFont(),this.map.add(this.textMeshGroup)}createBox(){const e=new n1(.1,5,.1),t=new ao({color:65280});this.cubeBox=new vt(e,t),this.cubeBox.position.set(0,1,0),this.scene.add(this.cubeBox)}createFourGeometry(){var e=new al(.2,.5,4),t=new ao({color:65280}),i=new vt(e,t);i.position.set(0,5,0),i.rotation.x=Math.PI,this.cone=i,this.meshObj.add(i)}createRain(){const e=new Wh({size:10,map:new f2().load("/assets/snow.png"),transparent:!0,blending:to,depthTest:!1,opacity:.4});this.geometryPoints=new Mt;for(let i=0;i<1e3;i++){const r=new L;r.x=Math.random()*1e3-500,r.y=Math.random()*100-50,r.z=Math.random()*1e3-500,r.speedY=.1,this.vertices.push(r)}this.geometryPoints.setFromPoints(this.vertices);const t=new C9(this.geometryPoints,e);this.scene.add(t)}createFont(){new Av().load("/assets/font2.json",e=>{const t=this.map.children.filter(i=>i.type==="Object3D");for(let i of t){if(i.properties.name==="汕尾市")continue;const r=new sv(i.properties.name,{font:e,size:.2,height:0}),s=new yt({uniforms:{u_color:{value:new we("#ffffff")}},vertexShader:`
            varying vec2 vUv;
            void main(){
              vUv = uv;
              gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
            }
          `,fragmentShader:`
            varying vec2 vUv;
            uniform vec3 u_color;
            void main(){
              gl_FragColor = vec4(u_color, 1.0);
            }
          `});r.center();const o=new vt(r,s),a=i.properties.compCenter;o.position.set(a.x,a.y+1,a.z),o.name=i.properties.name,this.textMeshGroup.add(o)}})}initAir(){new dv().load("/assets/air.FBX",e=>{e.scale.set(1e-4,1e-4,1e-4),e.rotation.y=-Math.PI/2,e.position.set(0,10,0),new Gs(e.position).to({x:0,y:4,z:0},2e3).start().onComplete(()=>{this.createFourGeometry()}),this.airModel=e,this.createSpot(),this.meshObj.add(e)})}createSpot(){const e=new n0(16777215,100);e.angle=Math.PI/3,e.penumbra=1,e.decay=2,e.distance=0,e.castShadow=!0,e.shadow.mapSize.width=1024,e.shadow.mapSize.height=1024,e.shadow.camera.near=1,e.shadow.camera.far=20,e.shadow.focus=1,this.airModel.add(e)}initWater(){const e=new jr(1e4,1e4),t=new kg(e,{textureWidth:512,textureHeight:512,waterNormals:new f2().load("/assets/waternormals.jpg",i=>{i.wrapS=i.wrapT=H1}),sunColor:"#DCA977",waterColor:29439,distortionScale:4});t.rotation.x=-Math.PI/2,this.scene.add(t),this.water=t}initSky(){const e=new gl;e.scale.setScalar(1e4),this.scene.add(e);const t=e.material.uniforms;t.turbidity.value=10,t.rayleigh.value=1,t.mieCoefficient.value=.005,t.mieDirectionalG.value=.08;const i=new L,r=new s2(this.renderer),s=nn.degToRad(82),o=nn.degToRad(10);i.setFromSphericalCoords(10,s,o),e.material.uniforms.sunPosition.value.copy(i),this.scene.environment=r.fromScene(e).texture}initRay(e){const t=new Fm,i=new fe;i.x=e.clientX/window.innerWidth*2-1,i.y=-(e.clientY/window.innerHeight)*2+1,t.setFromCamera(i,this.camera);const r=t.intersectObjects(this.map.children);if(r.length){for(let s of r)if(s.object.type!=="Line")return s;return null}}createFly(e){var i;for(let r of this.map.children){if(!(r!=null&&r.properties)||((i=r==null?void 0:r.properties)==null?void 0:i.name)=="汕尾市")continue;const s=new L(r.properties.compCenter.x,1,r.properties.compCenter.z),o=new L;o.lerpVectors(s,e,.5),o.y=3,e=new L(e.x,1,e.z);const a=new Xh([s,o,e]),l=new ll(a,64,.03),c=new yt({uniforms:{baseColor:{value:new we("#ffffff")},bottomColor:{value:new we("#6699FF")},time:this.lineTime},vertexShader:`
          varying vec2 vUv;
  
          void main(){
            vUv = uv;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);
          }
          `,fragmentShader:`
          varying vec2 vUv;
  
          uniform float time;
          uniform vec3 baseColor;   
          uniform vec3 bottomColor;
          
          void main() {
            vec3 color = time > vUv.x?bottomColor:baseColor; 
            gl_FragColor = vec4(color,1.0);
          }
        `,transparent:!0,side:tn});var t=new vt(l,c);t.name="line",this.scene.add(t)}}async scenePass(e,t="click"){this.outlinePass.selectedObjects=[];const r=await(await fetch(`https://geo.datav.aliyun.com/areas_v3/bound/${e.level==="district"?44e4:e.adcode}_full.json`)).json();console.log("data: ",r),new Gs(this.camera.position).to({x:0,y:8,z:24},1e3).start(),this.airRoam({x:0,y:0,z:0}),new Gs(this.map.position).to({y:-10},1e3).start(),setTimeout(()=>{this.map.children=[],this.center=r.features[0].properties.center,this.projection=cu().center(this.center).translate([0,0]),this.loadMap(r),new Gs(this.map.position).to({y:0},1e3).start()},1e3)}changeClickMap(e,t="click"){if(console.log("obj: ",e,t),!e||e.object.parent.properties.name=="汕尾市")return;const i=e.object.parent.properties;if(this.resetMaterial(),this.textMeshGroup.children.forEach(r=>{r.name===i.name&&(r.visible=!1)}),t==="click"&&(this.isEnd=!1,this.createCurve(this.meshObj.position,i.compCenter)),e.object.material[0].color=new we("#6666FF"),e.object.position.set(0,.3,0),this.outlinePass.selectedObjects.push(e.object.parent),t==="dblclick"){setTimeout(()=>{this.scenePass(i,t)},2e3);return}this.createFly(i.compCenter),this.currentMap=e.object}createCurve(e,t){e=new L(e.x,4,e.z);const i=new L(t.x,4,t.z),r=new L;r.lerpVectors(e,i,.5),console.log("center: ",r),r.y+=3;const s=new rl(e,r,i);this.points=s.getPoints(100),this.curveGeometry=new E2,this.curveGeometry.setPositions([e.x,e.y,this.startPoint.z]),this.lineMaterial=new xl({color:new we("#993399"),linewidth:2,dashed:!1}),this.lineMaterial.resolution.set(window.innerWidth,window.innerHeight),this.curveObject=new Mu(this.curveGeometry,this.lineMaterial),this.scene.add(this.curveObject)}constructorLine(){this.verticesPoint.length<7||(this.curveGeometry=new E2,this.curveGeometry.setPositions(this.verticesPoint),this.lineMaterial.resolution.set(window.innerWidth,window.innerHeight),this.curveObject=new Mu(this.curveGeometry,this.lineMaterial),this.scene.add(this.curveObject))}lineAnimate(){this.curveObject&&this.time<this.points.length-1&&(this.scene.remove(this.curveObject),this.time+=1,this.verticesPoint.push(this.points[this.time].x,this.points[this.time].y,this.points[this.time].z),this.constructorLine())}removeLine(){if(this.time<=1){this.scene.remove(this.curveObject),this.curveObject=null,this.points=[],this.verticesPoint=[];return}this.time--,this.verticesPoint.splice(0,3),this.scene.remove(this.curveObject),this.constructorLine()}airRoam(e){this.startPoint=this.meshObj.position.clone();const t=e;this.endPoint=new L(t.x,0,t.z),this.distance=this.startPoint.distanceTo(this.endPoint)}resetMaterial(){if(Object.keys(this.currentMap).length>1){this.outlinePass.selectedObjects=[],this.textMeshGroup.children.forEach(e=>{e.visible=!0});for(let e=this.scene.children.length-1;e>=0;e--)this.scene.children[e]instanceof vt&&this.scene.children[e].name==="line"&&this.scene.remove(this.scene.children[e]);this.currentMap.material[0].color=new we("#0099FF"),this.currentMap.position.set(0,0,0)}}initEffect(){this.composer=new tv(this.renderer);const e=new rv(this.scene,this.camera);this.composer.addPass(e),this.outlinePass=new Kg(new fe(window.innerWidth,window.innerHeight),this.scene,this.camera),this.outlinePass.edgeStrength=10,this.outlinePass.edgeGlow=1,this.outlinePass.pulsePeriod=2,this.composer.addPass(this.outlinePass);const t=new Fv;this.composer.addPass(t)}animation(){if(this.composer.render(),this.airModel&&(this.airModel.children[0].children[0].rotation.z+=.08),this.water&&(this.water.material.uniforms.time.value+=Math.random()*.05),this.geometryPoints&&this.vertices.length&&(this.vertices.forEach(e=>{e.y-=e.speedY,e.y<=0&&(e.y=Math.random()*100-50)}),this.geometryPoints.setFromPoints(this.vertices)),this.distance){const e=new L;this.speed+=.01,e.lerpVectors(this.startPoint,this.endPoint,this.speed),this.meshObj.position.copy(e),this.meshObj.position.distanceTo(this.startPoint)>=this.distance?(this.speed=0,this.distance=null,this.meshObj.position.copy(this.endPoint)):this.airModel.lookAt(new L(this.endPoint.x,4,this.endPoint.z))}if(this.cone&&(this.cone.rotation.y+=.01,this.cone.position.y=Math.sin(performance.now()*.01)*.1+5),this.lineTime.value>=1&&(this.lineTime.value=0),this.lineTime.value+=.005,this.textMeshGroup.children.length&&this.textMeshGroup.children.forEach(e=>{e.lookAt(this.controls.object.position)}),kv(),this.time<100&&!this.isEnd&&this.lineAnimate(),this.curveObject&&!this.isEnd&&this.time===this.points.length-1)if(this.speed+=1,this.speed==1&&this.airModel.lookAt(this.points[this.points.length-2]),this.speed===this.points.length-2)this.speed=0,this.isEnd=!0;else{const e=this.points[this.speed];this.meshObj.position.copy(new L(e.x,e.y-4,e.z))}this.curveObject&&this.isEnd&&this.time>=1&&this.removeLine()}}class Vv{constructor(){rr(this,"scene");rr(this,"camera");rr(this,"renderer");rr(this,"controls");this.init(),this.threejsMap=new Hv(this.scene,this.camera,this.renderer,this.controls)}init(){this.scene=new S9,this.camera=new Ht(45,window.innerWidth/window.innerHeight,.1,1e3),this.renderer=new Vh({antialias:!0}),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=uh,this.renderer.outputColorSpace=ot,document.getElementById("threejs-map").appendChild(this.renderer.domElement),this.camera.position.set(0,8,24);const e=new i0(16777215);e.position.set(0,0,0),this.scene.add(e);const t=new Sm(16777215,9276813,.15);this.scene.add(t);const i=new r0(16777215);this.scene.add(i),this.controls=new Hm(this.camera,this.renderer.domElement),this.controls.maxPolarAngle=Math.PI/2,this.controls.target.set(0,1,0),this.controls.enableDamping=!0,window.addEventListener("resize",()=>{this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()},!1),this.animation()}animation(){this.controls.update(),requestAnimationFrame(this.animation.bind(this)),this.threejsMap&&this.threejsMap.animation()}}const Gv={id:"threejs-map"},Wv={__name:"App",setup(n){return Ku(()=>{new Vv}),(e,t)=>(y4(),E4("div",Gv))}};ld(Wv).mount("#app");
